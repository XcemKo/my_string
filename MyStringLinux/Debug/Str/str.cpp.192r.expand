
;; Function int lowerCase(int) (_Z9lowerCasei, funcdef_no=1016, decl_uid=20970, cgraph_uid=193, symbol_order=194)

int lowerCase(int) (int src)
{
  int iftmp.0;
  int D.21141;
  int iftmp.0_1;
  int iftmp.0_3;
  int iftmp.0_4;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (src_2(D) > 64)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  if (src_2(D) <= 90)
    goto <bb 6>;
  else
    goto <bb 4>;
;;    succ:       6
;;                4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  if (src_2(D) > 191)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 5, loop depth 0
;;    pred:       4
  if (src_2(D) <= 223)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       3
;;                5
  iftmp.0_4 = src_2(D) + 32;
  goto <bb 8>;
;;    succ:       8

;;   basic block 7, loop depth 0
;;    pred:       4
;;                5
  iftmp.0_3 = src_2(D);
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       6
;;                7
  # iftmp.0_1 = PHI <iftmp.0_4(6), iftmp.0_3(7)>
  _5 = iftmp.0_1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L6>:
  return _5;
;;    succ:       EXIT

}



Partition map 

Partition 1 (iftmp.0_1 - 1 )
Partition 2 (src_2(D) - 2 )
Partition 3 (iftmp.0_3 - 3 )
Partition 4 (iftmp.0_4 - 4 )
Partition 5 (_5 - 5 )


Partition map 

Partition 0 (iftmp.0_1 - 1 )
Partition 1 (src_2(D) - 2 )
Partition 2 (iftmp.0_3 - 3 )
Partition 3 (iftmp.0_4 - 4 )
Partition 4 (_5 - 5 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(1) iftmp.0_1 <-> _5

Partition map 

Partition 0 (iftmp.0_1 - 1 )
Partition 1 (src_2(D) - 2 )
Partition 2 (iftmp.0_3 - 3 )
Partition 3 (iftmp.0_4 - 4 )
Partition 4 (_5 - 5 )

Coalesce list: (1)iftmp.0_1 & (5)_5 [map: 0, 4] : Success -> 0
Coalesce list: (1)iftmp.0_1 & (3)iftmp.0_3 [map: 0, 2] : Success -> 0
Coalesce list: (1)iftmp.0_1 & (4)iftmp.0_4 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (iftmp.0_1 - 1 3 4 5 )
Partition 1 (src_2(D) - 2 )

int lowerCase(int) (int src)
{
  int iftmp.0;
  int D.21141;
  int iftmp.0_1;
  int iftmp.0_3;
  int iftmp.0_4;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (src_2(D) > 64)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  if (src_2(D) <= 90)
    goto <bb 6>;
  else
    goto <bb 4>;
;;    succ:       6
;;                4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  if (src_2(D) > 191)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 5, loop depth 0
;;    pred:       4
  if (src_2(D) <= 223)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       3
;;                5
  iftmp.0_4 = src_2(D) + 32;
  goto <bb 8>;
;;    succ:       8

;;   basic block 7, loop depth 0
;;    pred:       4
;;                5
  iftmp.0_3 = src_2(D);
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       6
;;                7
  # iftmp.0_1 = PHI <iftmp.0_4(6), iftmp.0_3(7)>
  _5 = iftmp.0_1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L6>:
  return _5;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (src_2(D) > 64)

(insn 5 4 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])
            (const_int 64 [0x40]))) ..\Str\str.cpp:14 -1
     (nil))

(jump_insn 6 5 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:14 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (src_2(D) <= 90)

(insn 8 7 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])
            (const_int 90 [0x5a]))) ..\Str\str.cpp:14 -1
     (nil))

(jump_insn 9 8 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:14 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 10 9 11 2 "" [0 uses])

(note 11 10 0 NOTE_INSN_BASIC_BLOCK)

;; if (src_2(D) > 191)

(insn 12 11 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])
            (const_int 191 [0xbf]))) ..\Str\str.cpp:14 -1
     (nil))

(jump_insn 13 12 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:14 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; if (src_2(D) <= 223)

(insn 15 14 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])
            (const_int 223 [0xdf]))) ..\Str\str.cpp:14 -1
     (nil))

(jump_insn 16 15 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:14 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 17 16 18 3 "" [0 uses])

(note 18 17 0 NOTE_INSN_BASIC_BLOCK)

;; _4 = src_2(D) + 32;

(insn 19 18 20 (set (reg:SI 89)
        (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])) ..\Str\str.cpp:14 -1
     (nil))

(insn 20 19 0 (parallel [
            (set (reg:SI 87 [ D.21490 ])
                (plus:SI (reg:SI 89)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:14 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))

;; Generating RTL for gimple basic block 7

;; 

(code_label 23 22 24 4 "" [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; _3 = src_2(D);

(insn 25 24 0 (set (reg:SI 87 [ D.21490 ])
        (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])) ..\Str\str.cpp:14 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 26 25 27 5 "" [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; _5 = _1;

(nil)

;; Generating RTL for gimple basic block 9

;; <L6>:

(code_label 28 27 29 6 "" [0 uses])

(note 29 28 0 NOTE_INSN_BASIC_BLOCK)

;; return _5;

(insn 30 29 31 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.21490 ])) ..\Str\str.cpp:14 -1
     (nil))

(jump_insn 31 30 32 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:14 -1
     (nil))

(barrier 32 31 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 21 from 9 to 10.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 31.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])
            (const_int 64 [0x40]))) ..\Str\str.cpp:14 -1
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 10)
            (pc))) ..\Str\str.cpp:14 -1
     (nil)
 -> 10)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 7 6 8 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])
            (const_int 90 [0x5a]))) ..\Str\str.cpp:14 -1
     (nil))
(jump_insn 9 8 10 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) ..\Str\str.cpp:14 -1
     (nil)
 -> 17)
;;  succ:       7
;;              5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 10 9 11 5 2 "" [1 uses])
(note 11 10 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])
            (const_int 191 [0xbf]))) ..\Str\str.cpp:14 -1
     (nil))
(jump_insn 13 12 14 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) ..\Str\str.cpp:14 -1
     (nil)
 -> 23)
;;  succ:       6 (FALLTHRU)
;;              8

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 14 13 15 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])
            (const_int 223 [0xdf]))) ..\Str\str.cpp:14 -1
     (nil))
(jump_insn 16 15 17 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) ..\Str\str.cpp:14 -1
     (nil)
 -> 23)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              6 (FALLTHRU)
(code_label 17 16 18 7 3 "" [1 uses])
(note 18 17 19 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 7 (set (reg:SI 89)
        (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])) ..\Str\str.cpp:14 -1
     (nil))
(insn 20 19 21 7 (parallel [
            (set (reg:SI 87 [ D.21490 ])
                (plus:SI (reg:SI 89)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:14 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(jump_insn 21 20 22 7 (set (pc)
        (label_ref:SI 28)) ..\Str\str.cpp:14 551 {jump}
     (nil)
 -> 28)
;;  succ:       10 [100,0%] 

(barrier 22 21 23)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6
(code_label 23 22 24 8 4 "" [2 uses])
(note 24 23 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 28 8 (set (reg:SI 87 [ D.21490 ])
        (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 src+0 S4 A32])) ..\Str\str.cpp:14 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
;;              7 [100,0%] 
(code_label 28 25 29 10 6 "" [1 uses])
(note 29 28 30 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 34 10 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.21490 ])) ..\Str\str.cpp:14 -1
     (nil))
(insn 34 30 35 10 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) ..\Str\str.cpp:15 -1
     (nil))
(insn 35 34 0 10 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:15 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function bool operator==(const Str&, const Str&) (_ZeqRK3StrS1_, funcdef_no=1017, decl_uid=20893, cgraph_uid=194, symbol_order=195)

bool operator==(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  int i;
  int D.21167;
  int D.21165;
  unsigned char D.21163;
  unsigned char * D.21162;
  sizetype i.2;
  unsigned char * D.21160;
  unsigned char D.21159;
  unsigned char * D.21158;
  sizetype i.1;
  unsigned char * D.21156;
  bool D.21154;
  int D.21151;
  int D.21150;
  bool _2;
  int _6;
  int _8;
  bool _9;
  unsigned char * _10;
  sizetype i.1_11;
  unsigned char * _12;
  unsigned char _13;
  unsigned char * _14;
  sizetype i.2_15;
  unsigned char * _16;
  unsigned char _17;
  int _18;
  int _20;
  bool _21;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_3 = 0;
  _6 = left_5(D)->size;
  _8 = right_7(D)->size;
  if (_6 != _8)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _9 = 0;
  goto <bb 8> (<L6>);
;;    succ:       8

;;   basic block 4, loop depth 1
;;    pred:       2
;;                6
  # i_1 = PHI <i_3(2), i_19(6)>
  _10 = left_5(D)->source;
  i.1_11 = (sizetype) i_1;
  _12 = _10 + i.1_11;
  _13 = *_12;
  _14 = right_7(D)->source;
  i.2_15 = (sizetype) i_1;
  _16 = _14 + i.2_15;
  _17 = *_16;
  if (_13 != _17)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
  _18 = left_5(D)->size;
  if (_18 <= i_1)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  i_19 = i_1 + 1;
  goto <bb 4>;
;;    succ:       4

;;   basic block 7, loop depth 0
;;    pred:       4
;;                5
  _20 = left_5(D)->size;
  _21 = _20 == i_1;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       3
;;                7
  # _2 = PHI <_9(3), _21(7)>
<L6>:
  return _2;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (i_3 - 3 )
Partition 5 (left_5(D) - 5 )
Partition 6 (_6 - 6 )
Partition 7 (right_7(D) - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (i.1_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (i.2_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (i_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (left_5(D) - 5 )
Partition 4 (right_7(D) - 7 )
Partition 5 (_9 - 9 )
Partition 6 (i_19 - 19 )
Partition 7 (_21 - 21 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_19
(2147483646) i_1 <-> i_3

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (left_5(D) - 5 )
Partition 4 (right_7(D) - 7 )
Partition 5 (_9 - 9 )
Partition 6 (i_19 - 19 )
Partition 7 (_21 - 21 )

Coalesce list: (1)i_1 & (19)i_19 [map: 0, 6] : Success -> 0
Coalesce list: (1)i_1 & (3)i_3 [map: 0, 2] : Success -> 0
Coalesce list: (2)_2 & (21)_21 [map: 1, 7] : Success -> 1
Coalesce list: (2)_2 & (9)_9 [map: 1, 5] : Success -> 1
Coalesce list: (1)i_1 & (19)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 3 19 )
Partition 1 (_2 - 2 9 21 )
Partition 2 (left_5(D) - 5 )
Partition 3 (_6 - 6 )
Partition 4 (right_7(D) - 7 )
Partition 5 (_8 - 8 )
Partition 6 (_10 - 10 )
Partition 7 (i.1_11 - 11 )
Partition 8 (_12 - 12 )
Partition 9 (_13 - 13 )
Partition 10 (_14 - 14 )
Partition 11 (i.2_15 - 15 )
Partition 12 (_16 - 16 )
Partition 13 (_17 - 17 )
Partition 14 (_18 - 18 )
Partition 15 (_20 - 20 )

bool operator==(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  int i;
  int D.21167;
  int D.21165;
  unsigned char D.21163;
  unsigned char * D.21162;
  sizetype i.2;
  unsigned char * D.21160;
  unsigned char D.21159;
  unsigned char * D.21158;
  sizetype i.1;
  unsigned char * D.21156;
  bool D.21154;
  int D.21151;
  int D.21150;
  bool _2;
  int _6;
  int _8;
  bool _9;
  unsigned char * _10;
  sizetype i.1_11;
  unsigned char * _12;
  unsigned char _13;
  unsigned char * _14;
  sizetype i.2_15;
  unsigned char * _16;
  unsigned char _17;
  int _18;
  int _20;
  bool _21;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_3 = 0;
  _6 = left_5(D)->size;
  _8 = right_7(D)->size;
  if (_6 != _8)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _9 = 0;
  goto <bb 8> (<L6>);
;;    succ:       8

;;   basic block 4, loop depth 1
;;    pred:       2
;;                6
  # i_1 = PHI <i_3(2), i_19(6)>
  _10 = left_5(D)->source;
  i.1_11 = (sizetype) i_1;
  _12 = _10 + i.1_11;
  _13 = *_12;
  _14 = right_7(D)->source;
  i.2_15 = (sizetype) i_1;
  _16 = _14 + i.2_15;
  _17 = *_16;
  if (_13 != _17)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
  _18 = left_5(D)->size;
  if (_18 <= i_1)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  i_19 = i_1 + 1;
  goto <bb 4>;
;;    succ:       4

;;   basic block 7, loop depth 0
;;    pred:       4
;;                5
  _20 = left_5(D)->size;
  _21 = _20 == i_1;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       3
;;                7
  # _2 = PHI <_9(3), _21(7)>
<L6>:
  return _2;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; i_3 = 0;

(insn 5 4 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:19 -1
     (nil))

;; _6 = left_5(D)->size;

(insn 6 5 7 (set (reg/f:SI 101)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:20 -1
     (nil))

(insn 7 6 0 (set (reg:SI 88 [ D.21492 ])
        (mem/j:SI (plus:SI (reg/f:SI 101)
                (const_int 4 [0x4])) [0 left_5(D)->size+0 S4 A32])) ..\Str\str.cpp:20 -1
     (nil))

;; _8 = right_7(D)->size;

(insn 8 7 9 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:20 -1
     (nil))

(insn 9 8 0 (set (reg:SI 89 [ D.21492 ])
        (mem/j:SI (plus:SI (reg/f:SI 102)
                (const_int 4 [0x4])) [0 right_7(D)->size+0 S4 A32])) ..\Str\str.cpp:20 -1
     (nil))

;; if (_6 != _8)

(insn 10 9 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.21492 ])
            (reg:SI 89 [ D.21492 ]))) ..\Str\str.cpp:20 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:20 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _9 = 0;

(insn 13 12 0 (set (reg:QI 87 [ D.21491 ])
        (const_int 0 [0])) ..\Str\str.cpp:21 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 16 15 17 8 "" [0 uses])

(note 17 16 0 NOTE_INSN_BASIC_BLOCK)

;; _10 = left_5(D)->source;

(insn 18 17 19 (set (reg/f:SI 103)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))

(insn 19 18 0 (set (reg/f:SI 90 [ D.21493 ])
        (mem/f/j:SI (reg/f:SI 103) [0 left_5(D)->source+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))

;; _11 = (sizetype) i_1;

(insn 20 19 0 (set (reg:SI 91 [ D.21494 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))

;; _12 = _10 + _11;

(insn 21 20 0 (parallel [
            (set (reg/f:SI 92 [ D.21493 ])
                (plus:SI (reg/f:SI 90 [ D.21493 ])
                    (reg:SI 91 [ D.21494 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:22 -1
     (nil))

;; _13 = *_12;

(insn 22 21 0 (set (reg:QI 93 [ D.21495 ])
        (mem:QI (reg/f:SI 92 [ D.21493 ]) [0 *_12+0 S1 A8])) ..\Str\str.cpp:22 -1
     (nil))

;; _14 = right_7(D)->source;

(insn 23 22 24 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))

(insn 24 23 0 (set (reg/f:SI 94 [ D.21493 ])
        (mem/f/j:SI (reg/f:SI 104) [0 right_7(D)->source+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))

;; _15 = (sizetype) i_1;

(insn 25 24 0 (set (reg:SI 95 [ D.21494 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))

;; _16 = _14 + _15;

(insn 26 25 0 (parallel [
            (set (reg/f:SI 96 [ D.21493 ])
                (plus:SI (reg/f:SI 94 [ D.21493 ])
                    (reg:SI 95 [ D.21494 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:22 -1
     (nil))

;; _17 = *_16;

(insn 27 26 0 (set (reg:QI 97 [ D.21495 ])
        (mem:QI (reg/f:SI 96 [ D.21493 ]) [0 *_16+0 S1 A8])) ..\Str\str.cpp:22 -1
     (nil))

;; if (_13 != _17)

(insn 28 27 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ D.21495 ])
            (reg:QI 97 [ D.21495 ]))) ..\Str\str.cpp:22 -1
     (nil))

(jump_insn 29 28 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:22 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _18 = left_5(D)->size;

(insn 31 30 32 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))

(insn 32 31 0 (set (reg:SI 98 [ D.21492 ])
        (mem/j:SI (plus:SI (reg/f:SI 105)
                (const_int 4 [0x4])) [0 left_5(D)->size+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))

;; if (_18 <= i_1)

(insn 33 32 34 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 98 [ D.21492 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:22 -1
     (nil))

(jump_insn 34 33 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:22 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; i_19 = i_1 + 1;

(insn 36 35 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:22 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 39 38 40 10 "" [0 uses])

(note 40 39 0 NOTE_INSN_BASIC_BLOCK)

;; _20 = left_5(D)->size;

(insn 41 40 42 (set (reg/f:SI 106)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:23 -1
     (nil))

(insn 42 41 0 (set (reg:SI 99 [ D.21492 ])
        (mem/j:SI (plus:SI (reg/f:SI 106)
                (const_int 4 [0x4])) [0 left_5(D)->size+0 S4 A32])) ..\Str\str.cpp:23 -1
     (nil))

;; _21 = _20 == i_1;

(insn 43 42 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.21492 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:23 -1
     (nil))

(insn 44 43 0 (set (reg:QI 87 [ D.21491 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ..\Str\str.cpp:23 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; <L6>:

(code_label 45 44 46 9 "" [0 uses])

(note 46 45 0 NOTE_INSN_BASIC_BLOCK)

;; return _2;

(insn 47 46 48 (set (reg:QI 100 [ <retval> ])
        (reg:QI 87 [ D.21491 ])) -1
     (nil))

(jump_insn 48 47 49 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 49 48 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 48.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:19 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 101)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:20 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 88 [ D.21492 ])
        (mem/j:SI (plus:SI (reg/f:SI 101)
                (const_int 4 [0x4])) [0 left_5(D)->size+0 S4 A32])) ..\Str\str.cpp:20 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:20 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 89 [ D.21492 ])
        (mem/j:SI (plus:SI (reg/f:SI 102)
                (const_int 4 [0x4])) [0 right_7(D)->size+0 S4 A32])) ..\Str\str.cpp:20 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.21492 ])
            (reg:SI 89 [ D.21492 ]))) ..\Str\str.cpp:20 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) ..\Str\str.cpp:20 -1
     (nil)
 -> 16)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:QI 87 [ D.21491 ])
        (const_int 0 [0])) ..\Str\str.cpp:21 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (label_ref 45)) ..\Str\str.cpp:21 -1
     (nil)
 -> 45)
;;  succ:       9

(barrier 15 14 16)
;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              7 (DFS_BACK)
(code_label 16 15 17 5 8 "" [2 uses])
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg/f:SI 103)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))
(insn 19 18 20 5 (set (reg/f:SI 90 [ D.21493 ])
        (mem/f/j:SI (reg/f:SI 103) [0 left_5(D)->source+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))
(insn 20 19 21 5 (set (reg:SI 91 [ D.21494 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))
(insn 21 20 22 5 (parallel [
            (set (reg/f:SI 92 [ D.21493 ])
                (plus:SI (reg/f:SI 90 [ D.21493 ])
                    (reg:SI 91 [ D.21494 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:22 -1
     (nil))
(insn 22 21 23 5 (set (reg:QI 93 [ D.21495 ])
        (mem:QI (reg/f:SI 92 [ D.21493 ]) [0 *_12+0 S1 A8])) ..\Str\str.cpp:22 -1
     (nil))
(insn 23 22 24 5 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))
(insn 24 23 25 5 (set (reg/f:SI 94 [ D.21493 ])
        (mem/f/j:SI (reg/f:SI 104) [0 right_7(D)->source+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))
(insn 25 24 26 5 (set (reg:SI 95 [ D.21494 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg/f:SI 96 [ D.21493 ])
                (plus:SI (reg/f:SI 94 [ D.21493 ])
                    (reg:SI 95 [ D.21494 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:22 -1
     (nil))
(insn 27 26 28 5 (set (reg:QI 97 [ D.21495 ])
        (mem:QI (reg/f:SI 96 [ D.21493 ]) [0 *_16+0 S1 A8])) ..\Str\str.cpp:22 -1
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ D.21495 ])
            (reg:QI 97 [ D.21495 ]))) ..\Str\str.cpp:22 -1
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) ..\Str\str.cpp:22 -1
     (nil)
 -> 39)
;;  succ:       8
;;              6 (FALLTHRU)

;; basic block 6, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))
(insn 32 31 33 6 (set (reg:SI 98 [ D.21492 ])
        (mem/j:SI (plus:SI (reg/f:SI 105)
                (const_int 4 [0x4])) [0 left_5(D)->size+0 S4 A32])) ..\Str\str.cpp:22 -1
     (nil))
(insn 33 32 34 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 98 [ D.21492 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:22 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) ..\Str\str.cpp:22 -1
     (nil)
 -> 39)
;;  succ:       8
;;              7 (FALLTHRU)

;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:22 -1
     (nil))
(jump_insn 37 36 38 7 (set (pc)
        (label_ref 16)) ..\Str\str.cpp:22 -1
     (nil)
 -> 16)
;;  succ:       5 (DFS_BACK)

(barrier 38 37 39)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6
(code_label 39 38 40 8 10 "" [2 uses])
(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 8 (set (reg/f:SI 106)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:23 -1
     (nil))
(insn 42 41 43 8 (set (reg:SI 99 [ D.21492 ])
        (mem/j:SI (plus:SI (reg/f:SI 106)
                (const_int 4 [0x4])) [0 left_5(D)->size+0 S4 A32])) ..\Str\str.cpp:23 -1
     (nil))
(insn 43 42 44 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.21492 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:23 -1
     (nil))
(insn 44 43 45 8 (set (reg:QI 87 [ D.21491 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ..\Str\str.cpp:23 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              8 (FALLTHRU)
(code_label 45 44 46 9 9 "" [1 uses])
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 51 9 (set (reg:QI 100 [ <retval> ])
        (reg:QI 87 [ D.21491 ])) -1
     (nil))
(insn 51 47 52 9 (set (reg/i:QI 0 ax)
        (reg:QI 100 [ <retval> ])) ..\Str\str.cpp:24 -1
     (nil))
(insn 52 51 0 9 (use (reg/i:QI 0 ax)) ..\Str\str.cpp:24 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function bool operator!=(const Str&, const Str&) (_ZneRK3StrS1_, funcdef_no=1018, decl_uid=20914, cgraph_uid=195, symbol_order=196)

bool operator!=(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  bool D.21170;
  bool D.21169;
  bool _5;
  bool _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = operator== (left_2(D), right_3(D));
  _6 = ~_5;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _6;
;;    succ:       EXIT

}



Partition map 

Partition 2 (left_2(D) - 2 )
Partition 3 (right_3(D) - 3 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )


Partition map 

Partition 0 (left_2(D) - 2 )
Partition 1 (right_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (left_2(D) - 2 )
Partition 1 (right_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (left_2(D) - 2 )
Partition 1 (right_3(D) - 3 )
Partition 2 (_5 - 5 )
Partition 3 (_6 - 6 )

bool operator!=(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  bool D.21170;
  bool D.21169;
  bool _5;
  bool _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = operator== (left_2(D), right_3(D));
  _6 = ~_5;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _6;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _5 = operator== (left_2(D), right_3(D));

(insn 5 4 6 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:27 -1
     (nil))

(insn 6 5 7 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90)) ..\Str\str.cpp:27 -1
     (nil))

(insn 7 6 8 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:27 -1
     (nil))

(insn 8 7 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:27 -1
     (nil))

(call_insn 9 8 10 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZeqRK3StrS1_") [flags 0x3]  <function_decl 04e59480 operator==>) [0 operator== S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:27 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

(insn 10 9 0 (set (reg:QI 87 [ D.21496 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:27 -1
     (nil))

;; _6 = ~_5;

(insn 11 10 0 (parallel [
            (set (reg:QI 88 [ D.21496 ])
                (xor:QI (reg:QI 87 [ D.21496 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:27 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 12 11 13 12 "" [0 uses])

(note 13 12 0 NOTE_INSN_BASIC_BLOCK)

;; return _6;

(insn 14 13 15 (set (reg:QI 89 [ <retval> ])
        (reg:QI 88 [ D.21496 ])) ..\Str\str.cpp:27 -1
     (nil))

(jump_insn 15 14 16 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:27 -1
     (nil))

(barrier 16 15 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 15.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:27 -1
     (nil))
(insn 6 5 7 2 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90)) ..\Str\str.cpp:27 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:27 -1
     (nil))
(insn 8 7 9 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:27 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZeqRK3StrS1_") [flags 0x3]  <function_decl 04e59480 operator==>) [0 operator== S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:27 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 10 9 11 2 (set (reg:QI 87 [ D.21496 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:27 -1
     (nil))
(insn 11 10 14 2 (parallel [
            (set (reg:QI 88 [ D.21496 ])
                (xor:QI (reg:QI 87 [ D.21496 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:27 -1
     (nil))
(insn 14 11 18 2 (set (reg:QI 89 [ <retval> ])
        (reg:QI 88 [ D.21496 ])) ..\Str\str.cpp:27 -1
     (nil))
(insn 18 14 19 2 (set (reg/i:QI 0 ax)
        (reg:QI 89 [ <retval> ])) ..\Str\str.cpp:28 -1
     (nil))
(insn 19 18 0 2 (use (reg/i:QI 0 ax)) ..\Str\str.cpp:28 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function const char& Str::operator[](int) const (_ZNK3StrixEi, funcdef_no=1019, decl_uid=20928, cgraph_uid=196, symbol_order=197)

const char& Str::operator[](int) const (const struct Str * const this, int i)
{
  unsigned char D.21182;
  unsigned char * D.21181;
  sizetype i.4;
  unsigned char * D.21179;
  int D.21177;
  char iftmp.3;
  const char D.20987;
  const char & D.21172;
  char iftmp.3_1;
  int _5;
  unsigned char * _6;
  sizetype i.4_7;
  unsigned char * _8;
  unsigned char _9;
  char iftmp.3_10;
  char iftmp.3_11;
  const char & _13;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (i_2(D) >= 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = this_4(D)->size;
  if (_5 > i_2(D))
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _6 = this_4(D)->source;
  i.4_7 = (sizetype) i_2(D);
  _8 = _6 + i.4_7;
  _9 = *_8;
  iftmp.3_10 = (char) _9;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
  iftmp.3_11 = 0;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # iftmp.3_1 = PHI <iftmp.3_10(4), iftmp.3_11(5)>
  D.20987 = iftmp.3_1;
  _13 = 0;
  D.20987 ={v} {CLOBBER};
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
<L5>:
  return _13;
;;    succ:       EXIT

}



Partition map 

Partition 1 (iftmp.3_1 - 1 )
Partition 2 (i_2(D) - 2 )
Partition 4 (this_4(D) - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (i.4_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (iftmp.3_10 - 10 )
Partition 11 (iftmp.3_11 - 11 )
Partition 13 (_13 - 13 )


Partition map 

Partition 0 (iftmp.3_1 - 1 )
Partition 1 (i_2(D) - 2 )
Partition 2 (this_4(D) - 4 )
Partition 3 (iftmp.3_10 - 10 )
Partition 4 (iftmp.3_11 - 11 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (iftmp.3_1 - 1 )
Partition 1 (i_2(D) - 2 )
Partition 2 (this_4(D) - 4 )
Partition 3 (iftmp.3_10 - 10 )
Partition 4 (iftmp.3_11 - 11 )

Coalesce list: (1)iftmp.3_1 & (11)iftmp.3_11 [map: 0, 4] : Success -> 0
Coalesce list: (1)iftmp.3_1 & (10)iftmp.3_10 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (iftmp.3_1 - 1 10 11 )
Partition 1 (i_2(D) - 2 )
Partition 2 (this_4(D) - 4 )
Partition 3 (_5 - 5 )
Partition 4 (_6 - 6 )
Partition 5 (i.4_7 - 7 )
Partition 6 (_8 - 8 )
Partition 7 (_9 - 9 )
Partition 8 (_13 - 13 )

const char& Str::operator[](int) const (const struct Str * const this, int i)
{
  unsigned char D.21182;
  unsigned char * D.21181;
  sizetype i.4;
  unsigned char * D.21179;
  int D.21177;
  char iftmp.3;
  const char D.20987;
  const char & D.21172;
  char iftmp.3_1;
  int _5;
  unsigned char * _6;
  sizetype i.4_7;
  unsigned char * _8;
  unsigned char _9;
  char iftmp.3_10;
  char iftmp.3_11;
  const char & _13;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (i_2(D) >= 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = this_4(D)->size;
  if (_5 > i_2(D))
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _6 = this_4(D)->source;
  i.4_7 = (sizetype) i_2(D);
  _8 = _6 + i.4_7;
  _9 = *_8;
  iftmp.3_10 = (char) _9;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
  iftmp.3_11 = 0;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # iftmp.3_1 = PHI <iftmp.3_10(4), iftmp.3_11(5)>
  D.20987 = iftmp.3_1;
  _13 = 0;
  D.20987 ={v} {CLOBBER};
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
<L5>:
  return _13;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (i_2(D) >= 0)

(insn 6 5 7 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 i+0 S4 A32])
            (const_int 0 [0]))) ..\Str\str.cpp:32 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:32 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _5 = this_4(D)->size;

(insn 9 8 10 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:32 -1
     (nil))

(insn 10 9 0 (set (reg:SI 88 [ D.21498 ])
        (mem/j:SI (plus:SI (reg/f:SI 95)
                (const_int 4 [0x4])) [0 this_4(D)->size+0 S4 A32])) ..\Str\str.cpp:32 -1
     (nil))

;; if (_5 > i_2(D))

(insn 11 10 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.21498 ])
            (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 i+0 S4 A32]))) ..\Str\str.cpp:32 -1
     (nil))

(jump_insn 12 11 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:32 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _6 = this_4(D)->source;

(insn 14 13 15 (set (reg/f:SI 96)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:32 -1
     (nil))

(insn 15 14 0 (set (reg/f:SI 89 [ D.21499 ])
        (mem/f/j:SI (reg/f:SI 96) [0 this_4(D)->source+0 S4 A32])) ..\Str\str.cpp:32 -1
     (nil))

;; _7 = (sizetype) i_2(D);

(insn 16 15 0 (set (reg:SI 90 [ D.21500 ])
        (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 i+0 S4 A32])) ..\Str\str.cpp:32 -1
     (nil))

;; _8 = _6 + _7;

(insn 17 16 0 (parallel [
            (set (reg/f:SI 91 [ D.21499 ])
                (plus:SI (reg/f:SI 89 [ D.21499 ])
                    (reg:SI 90 [ D.21500 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:32 -1
     (nil))

;; _9 = *_8;

(insn 18 17 0 (set (reg:QI 92 [ D.21501 ])
        (mem:QI (reg/f:SI 91 [ D.21499 ]) [0 *_8+0 S1 A8])) ..\Str\str.cpp:32 -1
     (nil))

;; _10 = (char) _9;

(insn 19 18 0 (set (reg:QI 87 [ D.21497 ])
        (reg:QI 92 [ D.21501 ])) ..\Str\str.cpp:32 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 22 21 23 14 "" [0 uses])

(note 23 22 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = 0;

(insn 24 23 0 (set (reg:QI 87 [ D.21497 ])
        (const_int 0 [0])) ..\Str\str.cpp:32 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 25 24 26 15 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; D.20987 = _1;

(insn 27 26 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 D.20987+0 S1 A8])
        (reg:QI 87 [ D.21497 ])) ..\Str\str.cpp:32 -1
     (nil))

;; _13 = 0;

(insn 28 27 0 (set (reg/f:SI 93 [ D.21502 ])
        (const_int 0 [0])) ..\Str\str.cpp:32 -1
     (nil))

;; D.20987 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 7

;; <L5>:

(code_label 29 28 30 16 "" [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; return _13;

(insn 31 30 32 (set (reg:SI 94 [ <retval> ])
        (reg/f:SI 93 [ D.21502 ])) ..\Str\str.cpp:32 -1
     (nil))

(jump_insn 32 31 33 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:32 -1
     (nil))

(barrier 33 32 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Removing jump 32.
Merging block 9 into block 7...
Merged blocks 7 and 9.
Merged 7 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:31 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 i+0 S4 A32])
            (const_int 0 [0]))) ..\Str\str.cpp:32 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ..\Str\str.cpp:32 -1
     (nil)
 -> 22)
;;  succ:       4 (FALLTHRU)
;;              6

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:32 -1
     (nil))
(insn 10 9 11 4 (set (reg:SI 88 [ D.21498 ])
        (mem/j:SI (plus:SI (reg/f:SI 95)
                (const_int 4 [0x4])) [0 this_4(D)->size+0 S4 A32])) ..\Str\str.cpp:32 -1
     (nil))
(insn 11 10 12 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.21498 ])
            (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 i+0 S4 A32]))) ..\Str\str.cpp:32 -1
     (nil))
(jump_insn 12 11 13 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ..\Str\str.cpp:32 -1
     (nil)
 -> 22)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 5 (set (reg/f:SI 96)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:32 -1
     (nil))
(insn 15 14 16 5 (set (reg/f:SI 89 [ D.21499 ])
        (mem/f/j:SI (reg/f:SI 96) [0 this_4(D)->source+0 S4 A32])) ..\Str\str.cpp:32 -1
     (nil))
(insn 16 15 17 5 (set (reg:SI 90 [ D.21500 ])
        (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 i+0 S4 A32])) ..\Str\str.cpp:32 -1
     (nil))
(insn 17 16 18 5 (parallel [
            (set (reg/f:SI 91 [ D.21499 ])
                (plus:SI (reg/f:SI 89 [ D.21499 ])
                    (reg:SI 90 [ D.21500 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:32 -1
     (nil))
(insn 18 17 19 5 (set (reg:QI 92 [ D.21501 ])
        (mem:QI (reg/f:SI 91 [ D.21499 ]) [0 *_8+0 S1 A8])) ..\Str\str.cpp:32 -1
     (nil))
(insn 19 18 20 5 (set (reg:QI 87 [ D.21497 ])
        (reg:QI 92 [ D.21501 ])) ..\Str\str.cpp:32 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (label_ref 25)) ..\Str\str.cpp:32 -1
     (nil)
 -> 25)
;;  succ:       7

(barrier 21 20 22)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4
(code_label 22 21 23 6 14 "" [2 uses])
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (reg:QI 87 [ D.21497 ])
        (const_int 0 [0])) ..\Str\str.cpp:32 -1
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU)
(code_label 25 24 26 7 15 "" [1 uses])
(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 D.20987+0 S1 A8])
        (reg:QI 87 [ D.21497 ])) ..\Str\str.cpp:32 -1
     (nil))
(insn 28 27 31 7 (set (reg/f:SI 93 [ D.21502 ])
        (const_int 0 [0])) ..\Str\str.cpp:32 -1
     (nil))
(insn 31 28 35 7 (set (reg:SI 94 [ <retval> ])
        (reg/f:SI 93 [ D.21502 ])) ..\Str\str.cpp:32 -1
     (nil))
(insn 35 31 36 7 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) ..\Str\str.cpp:33 -1
     (nil))
(insn 36 35 0 7 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:33 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function unsigned char& Str::operator[](int) (_ZN3StrixEi, funcdef_no=1020, decl_uid=20931, cgraph_uid=197, symbol_order=198)

unsigned char& Str::operator[](int) (struct Str * const this, int i)
{
  static unsigned char DUMMY;
  sizetype i.6;
  unsigned char * D.21192;
  int D.21190;
  unsigned char * iftmp.5;
  unsigned char & D.21185;
  unsigned char * iftmp.5_1;
  int _5;
  unsigned char * _6;
  sizetype i.6_7;
  unsigned char * iftmp.5_8;
  unsigned char * iftmp.5_9;
  unsigned char & _10;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (i_2(D) >= 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = this_4(D)->size;
  if (_5 > i_2(D))
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _6 = this_4(D)->source;
  i.6_7 = (sizetype) i_2(D);
  iftmp.5_8 = _6 + i.6_7;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
  iftmp.5_9 = &DUMMY;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # iftmp.5_1 = PHI <iftmp.5_8(4), iftmp.5_9(5)>
  _10 = iftmp.5_1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
<L4>:
  return _10;
;;    succ:       EXIT

}



Partition map 

Partition 1 (iftmp.5_1 - 1 )
Partition 2 (i_2(D) - 2 )
Partition 4 (this_4(D) - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (i.6_7 - 7 )
Partition 8 (iftmp.5_8 - 8 )
Partition 9 (iftmp.5_9 - 9 )
Partition 10 (_10 - 10 )


Partition map 

Partition 0 (iftmp.5_1 - 1 )
Partition 1 (i_2(D) - 2 )
Partition 2 (this_4(D) - 4 )
Partition 3 (iftmp.5_8 - 8 )
Partition 4 (iftmp.5_9 - 9 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (iftmp.5_1 - 1 )
Partition 1 (i_2(D) - 2 )
Partition 2 (this_4(D) - 4 )
Partition 3 (iftmp.5_8 - 8 )
Partition 4 (iftmp.5_9 - 9 )

Coalesce list: (1)iftmp.5_1 & (9)iftmp.5_9 [map: 0, 4] : Success -> 0
Coalesce list: (1)iftmp.5_1 & (8)iftmp.5_8 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (iftmp.5_1 - 1 8 9 )
Partition 1 (i_2(D) - 2 )
Partition 2 (this_4(D) - 4 )
Partition 3 (_5 - 5 )
Partition 4 (_6 - 6 )
Partition 5 (i.6_7 - 7 )
Partition 6 (_10 - 10 )

unsigned char& Str::operator[](int) (struct Str * const this, int i)
{
  static unsigned char DUMMY;
  sizetype i.6;
  unsigned char * D.21192;
  int D.21190;
  unsigned char * iftmp.5;
  unsigned char & D.21185;
  unsigned char * iftmp.5_1;
  int _5;
  unsigned char * _6;
  sizetype i.6_7;
  unsigned char * iftmp.5_8;
  unsigned char * iftmp.5_9;
  unsigned char & _10;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (i_2(D) >= 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = this_4(D)->size;
  if (_5 > i_2(D))
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _6 = this_4(D)->source;
  i.6_7 = (sizetype) i_2(D);
  iftmp.5_8 = _6 + i.6_7;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
  iftmp.5_9 = &DUMMY;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # iftmp.5_1 = PHI <iftmp.5_8(4), iftmp.5_9(5)>
  _10 = iftmp.5_1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
<L4>:
  return _10;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (i_2(D) >= 0)

(insn 6 5 7 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 i+0 S4 A32])
            (const_int 0 [0]))) ..\Str\str.cpp:38 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:38 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _5 = this_4(D)->size;

(insn 9 8 10 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:38 -1
     (nil))

(insn 10 9 0 (set (reg:SI 88 [ D.21504 ])
        (mem/j:SI (plus:SI (reg/f:SI 93)
                (const_int 4 [0x4])) [0 this_4(D)->size+0 S4 A32])) ..\Str\str.cpp:38 -1
     (nil))

;; if (_5 > i_2(D))

(insn 11 10 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.21504 ])
            (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 i+0 S4 A32]))) ..\Str\str.cpp:38 -1
     (nil))

(jump_insn 12 11 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:38 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _6 = this_4(D)->source;

(insn 14 13 15 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:38 -1
     (nil))

(insn 15 14 0 (set (reg/f:SI 89 [ D.21503 ])
        (mem/f/j:SI (reg/f:SI 94) [0 this_4(D)->source+0 S4 A32])) ..\Str\str.cpp:38 -1
     (nil))

;; _7 = (sizetype) i_2(D);

(insn 16 15 0 (set (reg:SI 90 [ D.21505 ])
        (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 i+0 S4 A32])) ..\Str\str.cpp:38 -1
     (nil))

;; _8 = _6 + _7;

(insn 17 16 0 (parallel [
            (set (reg/f:SI 87 [ D.21503 ])
                (plus:SI (reg/f:SI 89 [ D.21503 ])
                    (reg:SI 90 [ D.21505 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:38 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 20 19 21 18 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; _9 = &DUMMY;

(insn 22 21 0 (set (reg/f:SI 87 [ D.21503 ])
        (symbol_ref:SI ("_ZZN3StrixEiE5DUMMY") [flags 0x2]  <var_decl 04e13b00 DUMMY>)) ..\Str\str.cpp:38 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 23 22 24 19 "" [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; _10 = _1;

(insn 25 24 0 (set (reg/f:SI 91 [ D.21506 ])
        (reg/f:SI 87 [ D.21503 ])) ..\Str\str.cpp:38 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; <L4>:

(code_label 26 25 27 20 "" [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; return _10;

(insn 28 27 29 (set (reg:SI 92 [ <retval> ])
        (reg/f:SI 91 [ D.21506 ])) ..\Str\str.cpp:38 -1
     (nil))

(jump_insn 29 28 30 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:38 -1
     (nil))

(barrier 30 29 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Removing jump 29.
Merging block 9 into block 7...
Merged blocks 7 and 9.
Merged 7 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:36 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 i+0 S4 A32])
            (const_int 0 [0]))) ..\Str\str.cpp:38 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) ..\Str\str.cpp:38 -1
     (nil)
 -> 20)
;;  succ:       4 (FALLTHRU)
;;              6

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:38 -1
     (nil))
(insn 10 9 11 4 (set (reg:SI 88 [ D.21504 ])
        (mem/j:SI (plus:SI (reg/f:SI 93)
                (const_int 4 [0x4])) [0 this_4(D)->size+0 S4 A32])) ..\Str\str.cpp:38 -1
     (nil))
(insn 11 10 12 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.21504 ])
            (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 i+0 S4 A32]))) ..\Str\str.cpp:38 -1
     (nil))
(jump_insn 12 11 13 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) ..\Str\str.cpp:38 -1
     (nil)
 -> 20)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 5 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:38 -1
     (nil))
(insn 15 14 16 5 (set (reg/f:SI 89 [ D.21503 ])
        (mem/f/j:SI (reg/f:SI 94) [0 this_4(D)->source+0 S4 A32])) ..\Str\str.cpp:38 -1
     (nil))
(insn 16 15 17 5 (set (reg:SI 90 [ D.21505 ])
        (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 i+0 S4 A32])) ..\Str\str.cpp:38 -1
     (nil))
(insn 17 16 18 5 (parallel [
            (set (reg/f:SI 87 [ D.21503 ])
                (plus:SI (reg/f:SI 89 [ D.21503 ])
                    (reg:SI 90 [ D.21505 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:38 -1
     (nil))
(jump_insn 18 17 19 5 (set (pc)
        (label_ref 23)) ..\Str\str.cpp:38 -1
     (nil)
 -> 23)
;;  succ:       7

(barrier 19 18 20)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4
(code_label 20 19 21 6 18 "" [2 uses])
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:SI 87 [ D.21503 ])
        (symbol_ref:SI ("_ZZN3StrixEiE5DUMMY") [flags 0x2]  <var_decl 04e13b00 DUMMY>)) ..\Str\str.cpp:38 -1
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU)
(code_label 23 22 24 7 19 "" [1 uses])
(note 24 23 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 28 7 (set (reg/f:SI 91 [ D.21506 ])
        (reg/f:SI 87 [ D.21503 ])) ..\Str\str.cpp:38 -1
     (nil))
(insn 28 25 32 7 (set (reg:SI 92 [ <retval> ])
        (reg/f:SI 91 [ D.21506 ])) ..\Str\str.cpp:38 -1
     (nil))
(insn 32 28 33 7 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) ..\Str\str.cpp:39 -1
     (nil))
(insn 33 32 0 7 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:39 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function bool operator>(const Str&, const Str&) (_ZgtRK3StrS1_, funcdef_no=1021, decl_uid=20917, cgraph_uid=198, symbol_order=199)

bool operator>(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  unsigned char tmp_r;
  unsigned char tmp_l;
  int i;
  int min_size;
  bool result;
  bool D.21224;
  int D.21218;
  int D.21217;
  unsigned char D.21216;
  unsigned char * D.21215;
  sizetype i.10;
  unsigned char * D.21213;
  int D.21212;
  int D.21211;
  unsigned char D.21210;
  unsigned char * D.21209;
  sizetype i.9;
  unsigned char * D.21207;
  int D.21205;
  int D.21200;
  int D.21199;
  const int iftmp.8;
  bool retval.7;
  const int iftmp.8_4;
  bool retval.7_13;
  int _14;
  int _15;
  const int iftmp.8_16;
  const int iftmp.8_17;
  int _20;
  unsigned char * _21;
  sizetype i.9_22;
  unsigned char * _23;
  unsigned char _24;
  int _25;
  int _27;
  unsigned char * _29;
  sizetype i.10_30;
  unsigned char * _31;
  unsigned char _32;
  int _33;
  int _35;
  bool _40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  result_8 = 0;
  retval.7_13 = operator!= (left_10(D), right_11(D));
  if (retval.7_13 != 0)
    goto <bb 3>;
  else
    goto <bb 14>;
;;    succ:       3
;;                14

;;   basic block 3, loop depth 0
;;    pred:       2
  _14 = left_10(D)->size;
  _15 = right_11(D)->size;
  if (_14 > _15)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  iftmp.8_16 = right_11(D)->size;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       3
  iftmp.8_17 = left_10(D)->size;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # iftmp.8_4 = PHI <iftmp.8_16(4), iftmp.8_17(5)>
  min_size_18 = iftmp.8_4;
  i_19 = 0;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       6
;;                12
  # i_3 = PHI <i_19(6), i_37(12)>
  _20 = min_size_18 + 1;
  if (_20 <= i_3)
    goto <bb 13>;
  else
    goto <bb 8>;
;;    succ:       13
;;                8

;;   basic block 8, loop depth 1
;;    pred:       7
  _21 = left_10(D)->source;
  i.9_22 = (sizetype) i_3;
  _23 = _21 + i.9_22;
  _24 = *_23;
  _25 = (int) _24;
  _27 = lowerCase (_25);
  tmp_l_28 = (unsigned char) _27;
  _29 = right_11(D)->source;
  i.10_30 = (sizetype) i_3;
  _31 = _29 + i.10_30;
  _32 = *_31;
  _33 = (int) _32;
  _35 = lowerCase (_33);
  tmp_r_36 = (unsigned char) _35;
  if (tmp_l_28 < tmp_r_36)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  result_39 = 1;
  goto <bb 13>;
;;    succ:       13

;;   basic block 10, loop depth 1
;;    pred:       8
  if (tmp_l_28 > tmp_r_36)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  result_38 = 0;
  goto <bb 13>;
;;    succ:       13

;;   basic block 12, loop depth 1
;;    pred:       10
  i_37 = i_3 + 1;
  goto <bb 7>;
;;    succ:       7

;;   basic block 13, loop depth 0
;;    pred:       7
;;                9
;;                11
  # result_1 = PHI <result_8(7), result_39(9), result_38(11)>
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       2
;;                13
  # result_2 = PHI <result_8(2), result_1(13)>
  _40 = result_2;
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       14
<L13>:
  return _40;
;;    succ:       EXIT

}



Partition map 

Partition 1 (result_1 - 1 )
Partition 2 (result_2 - 2 )
Partition 3 (i_3 - 3 )
Partition 4 (iftmp.8_4 - 4 )
Partition 8 (result_8 - 8 )
Partition 10 (left_10(D) - 10 )
Partition 11 (right_11(D) - 11 )
Partition 13 (retval.7_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (iftmp.8_16 - 16 )
Partition 17 (iftmp.8_17 - 17 )
Partition 18 (min_size_18 - 18 )
Partition 19 (i_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (i.9_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 27 (_27 - 27 )
Partition 28 (tmp_l_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (i.10_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 35 (_35 - 35 )
Partition 36 (tmp_r_36 - 36 )
Partition 37 (i_37 - 37 )
Partition 38 (result_38 - 38 )
Partition 39 (result_39 - 39 )
Partition 40 (_40 - 40 )


Partition map 

Partition 0 (result_1 - 1 )
Partition 1 (result_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (iftmp.8_4 - 4 )
Partition 4 (result_8 - 8 )
Partition 5 (left_10(D) - 10 )
Partition 6 (right_11(D) - 11 )
Partition 7 (iftmp.8_16 - 16 )
Partition 8 (iftmp.8_17 - 17 )
Partition 9 (i_19 - 19 )
Partition 10 (i_37 - 37 )
Partition 11 (result_38 - 38 )
Partition 12 (result_39 - 39 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) result_1 <-> result_2
(2147483646) result_1 <-> result_8
(2147483646) result_1 <-> result_38
(2147483646) result_1 <-> result_39
(2147483646) i_3 <-> i_19
(2147483646) i_3 <-> i_37
(2) result_2 <-> result_8

Partition map 

Partition 0 (result_1 - 1 )
Partition 1 (result_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (iftmp.8_4 - 4 )
Partition 4 (result_8 - 8 )
Partition 5 (left_10(D) - 10 )
Partition 6 (right_11(D) - 11 )
Partition 7 (iftmp.8_16 - 16 )
Partition 8 (iftmp.8_17 - 17 )
Partition 9 (i_19 - 19 )
Partition 10 (i_37 - 37 )
Partition 11 (result_38 - 38 )
Partition 12 (result_39 - 39 )

Coalesce list: (1)result_1 & (2)result_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)result_1 & (8)result_8 [map: 0, 4] : Success -> 0
Coalesce list: (1)result_1 & (38)result_38 [map: 0, 11] : Success -> 0
Coalesce list: (1)result_1 & (39)result_39 [map: 0, 12] : Success -> 0
Coalesce list: (3)i_3 & (19)i_19 [map: 2, 9] : Success -> 2
Coalesce list: (3)i_3 & (37)i_37 [map: 2, 10] : Success -> 2
Coalesce list: (2)result_1 & (8)result_1: Already Coalesced.
Coalesce list: (2)result_1 & (1)result_1: Already Coalesced.
Coalesce list: (1)result_1 & (38)result_1: Already Coalesced.
Coalesce list: (1)result_1 & (39)result_1: Already Coalesced.
Coalesce list: (3)i_3 & (37)i_3: Already Coalesced.
Coalesce list: (3)i_3 & (19)i_3: Already Coalesced.
Coalesce list: (4)iftmp.8_4 & (17)iftmp.8_17 [map: 3, 8] : Success -> 3
Coalesce list: (4)iftmp.8_4 & (16)iftmp.8_16 [map: 3, 7] : Success -> 3
After Coalescing:

Partition map 

Partition 0 (result_1 - 1 2 8 38 39 )
Partition 1 (i_3 - 3 19 37 )
Partition 2 (iftmp.8_4 - 4 16 17 )
Partition 3 (left_10(D) - 10 )
Partition 4 (right_11(D) - 11 )
Partition 5 (retval.7_13 - 13 )
Partition 6 (_14 - 14 )
Partition 7 (_15 - 15 )
Partition 8 (min_size_18 - 18 )
Partition 9 (_20 - 20 )
Partition 10 (_21 - 21 )
Partition 11 (i.9_22 - 22 )
Partition 12 (_23 - 23 )
Partition 13 (_24 - 24 )
Partition 14 (_25 - 25 )
Partition 15 (_27 - 27 )
Partition 16 (tmp_l_28 - 28 )
Partition 17 (_29 - 29 )
Partition 18 (i.10_30 - 30 )
Partition 19 (_31 - 31 )
Partition 20 (_32 - 32 )
Partition 21 (_33 - 33 )
Partition 22 (_35 - 35 )
Partition 23 (tmp_r_36 - 36 )
Partition 24 (_40 - 40 )

bool operator>(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  unsigned char tmp_r;
  unsigned char tmp_l;
  int i;
  int min_size;
  bool result;
  bool D.21224;
  int D.21218;
  int D.21217;
  unsigned char D.21216;
  unsigned char * D.21215;
  sizetype i.10;
  unsigned char * D.21213;
  int D.21212;
  int D.21211;
  unsigned char D.21210;
  unsigned char * D.21209;
  sizetype i.9;
  unsigned char * D.21207;
  int D.21205;
  int D.21200;
  int D.21199;
  const int iftmp.8;
  bool retval.7;
  const int iftmp.8_4;
  bool retval.7_13;
  int _14;
  int _15;
  const int iftmp.8_16;
  const int iftmp.8_17;
  int _20;
  unsigned char * _21;
  sizetype i.9_22;
  unsigned char * _23;
  unsigned char _24;
  int _25;
  int _27;
  unsigned char * _29;
  sizetype i.10_30;
  unsigned char * _31;
  unsigned char _32;
  int _33;
  int _35;
  bool _40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  result_8 = 0;
  retval.7_13 = operator!= (left_10(D), right_11(D));
  if (retval.7_13 != 0)
    goto <bb 3>;
  else
    goto <bb 14>;
;;    succ:       3
;;                14

;;   basic block 3, loop depth 0
;;    pred:       2
  _14 = left_10(D)->size;
  _15 = right_11(D)->size;
  if (_14 > _15)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  iftmp.8_16 = right_11(D)->size;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       3
  iftmp.8_17 = left_10(D)->size;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # iftmp.8_4 = PHI <iftmp.8_16(4), iftmp.8_17(5)>
  min_size_18 = iftmp.8_4;
  i_19 = 0;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       6
;;                12
  # i_3 = PHI <i_19(6), i_37(12)>
  _20 = min_size_18 + 1;
  if (_20 <= i_3)
    goto <bb 13>;
  else
    goto <bb 8>;
;;    succ:       13
;;                8

;;   basic block 8, loop depth 1
;;    pred:       7
  _21 = left_10(D)->source;
  i.9_22 = (sizetype) i_3;
  _23 = _21 + i.9_22;
  _24 = *_23;
  _25 = (int) _24;
  _27 = lowerCase (_25);
  tmp_l_28 = (unsigned char) _27;
  _29 = right_11(D)->source;
  i.10_30 = (sizetype) i_3;
  _31 = _29 + i.10_30;
  _32 = *_31;
  _33 = (int) _32;
  _35 = lowerCase (_33);
  tmp_r_36 = (unsigned char) _35;
  if (tmp_l_28 < tmp_r_36)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  result_39 = 1;
  goto <bb 13>;
;;    succ:       13

;;   basic block 10, loop depth 1
;;    pred:       8
  if (tmp_l_28 > tmp_r_36)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  result_38 = 0;
  goto <bb 13>;
;;    succ:       13

;;   basic block 12, loop depth 1
;;    pred:       10
  i_37 = i_3 + 1;
  goto <bb 7>;
;;    succ:       7

;;   basic block 13, loop depth 0
;;    pred:       7
;;                9
;;                11
  # result_1 = PHI <result_8(7), result_39(9), result_38(11)>
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       2
;;                13
  # result_2 = PHI <result_8(2), result_1(13)>
  _40 = result_2;
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       14
<L13>:
  return _40;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; result_8 = 0;

(insn 5 4 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:42 -1
     (nil))

;; _13 = operator!= (left_10(D), right_11(D));

(insn 6 5 7 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:44 -1
     (nil))

(insn 7 6 8 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 106)) ..\Str\str.cpp:44 -1
     (nil))

(insn 8 7 9 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:44 -1
     (nil))

(insn 9 8 10 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 107)) ..\Str\str.cpp:44 -1
     (nil))

(call_insn 10 9 11 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZneRK3StrS1_") [flags 0x3]  <function_decl 04e59800 operator!=>) [0 operator!= S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:44 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

(insn 11 10 0 (set (reg:QI 88 [ D.21508 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:44 -1
     (nil))

;; if (_13 != 0)

(insn 12 11 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.21508 ])
            (const_int 0 [0]))) ..\Str\str.cpp:44 -1
     (nil))

(jump_insn 13 12 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:44 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _14 = left_10(D)->size;

(insn 15 14 16 (set (reg/f:SI 108)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))

(insn 16 15 0 (set (reg:SI 89 [ D.21509 ])
        (mem/j:SI (plus:SI (reg/f:SI 108)
                (const_int 4 [0x4])) [0 left_10(D)->size+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))

;; _15 = right_11(D)->size;

(insn 17 16 18 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))

(insn 18 17 0 (set (reg:SI 90 [ D.21509 ])
        (mem/j:SI (plus:SI (reg/f:SI 109)
                (const_int 4 [0x4])) [0 right_11(D)->size+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))

;; if (_14 > _15)

(insn 19 18 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ D.21509 ])
            (reg:SI 90 [ D.21509 ]))) ..\Str\str.cpp:45 -1
     (nil))

(jump_insn 20 19 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:45 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _16 = right_11(D)->size;

(insn 22 21 23 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))

(insn 23 22 0 (set (reg:SI 87 [ D.21507 ])
        (mem/j:SI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [0 right_11(D)->size+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 26 25 27 23 "" [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; _17 = left_10(D)->size;

(insn 28 27 29 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))

(insn 29 28 0 (set (reg:SI 87 [ D.21507 ])
        (mem/j:SI (plus:SI (reg/f:SI 111)
                (const_int 4 [0x4])) [0 left_10(D)->size+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 30 29 31 24 "" [0 uses])

(note 31 30 0 NOTE_INSN_BASIC_BLOCK)

;; min_size_18 = _4;

(insn 32 31 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 min_size+0 S4 A32])
        (reg:SI 87 [ D.21507 ])) ..\Str\str.cpp:45 -1
     (nil))

;; i_19 = 0;

(insn 33 32 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:46 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _20 = min_size_18 + 1;

(insn 35 34 36 (set (reg:SI 112)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 min_size+0 S4 A32])) ..\Str\str.cpp:46 -1
     (nil))

(insn 36 35 0 (parallel [
            (set (reg:SI 91 [ D.21509 ])
                (plus:SI (reg:SI 112)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:46 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 min_size+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; if (_20 <= i_3)

(insn 37 36 38 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91 [ D.21509 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) ..\Str\str.cpp:46 -1
     (nil))

(jump_insn 38 37 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:46 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _21 = left_10(D)->source;

(insn 40 39 41 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:47 -1
     (nil))

(insn 41 40 0 (set (reg/f:SI 92 [ D.21510 ])
        (mem/f/j:SI (reg/f:SI 113) [0 left_10(D)->source+0 S4 A32])) ..\Str\str.cpp:47 -1
     (nil))

;; _22 = (sizetype) i_3;

(insn 42 41 0 (set (reg:SI 93 [ D.21511 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) ..\Str\str.cpp:47 -1
     (nil))

;; _23 = _21 + _22;

(insn 43 42 0 (parallel [
            (set (reg/f:SI 94 [ D.21510 ])
                (plus:SI (reg/f:SI 92 [ D.21510 ])
                    (reg:SI 93 [ D.21511 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:47 -1
     (nil))

;; _24 = *_23;

(insn 44 43 0 (set (reg:QI 95 [ D.21512 ])
        (mem:QI (reg/f:SI 94 [ D.21510 ]) [0 *_23+0 S1 A8])) ..\Str\str.cpp:47 -1
     (nil))

;; _25 = (int) _24;

(insn 45 44 0 (set (reg:SI 96 [ D.21509 ])
        (zero_extend:SI (reg:QI 95 [ D.21512 ]))) ..\Str\str.cpp:47 -1
     (nil))

;; _27 = lowerCase (_25);

(insn 46 45 47 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 96 [ D.21509 ])) ..\Str\str.cpp:47 -1
     (nil))

(call_insn 47 46 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Z9lowerCasei") [flags 0x3]  <function_decl 04e5f200 lowerCase>) [0 lowerCase S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:47 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 48 47 0 (set (reg:SI 97 [ D.21509 ])
        (reg:SI 0 ax)) ..\Str\str.cpp:47 -1
     (nil))

;; tmp_l_28 = (unsigned char) _27;

(insn 49 48 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 tmp_l+0 S1 A8])
        (subreg:QI (reg:SI 97 [ D.21509 ]) 0)) ..\Str\str.cpp:47 -1
     (nil))

;; _29 = right_11(D)->source;

(insn 50 49 51 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:48 -1
     (nil))

(insn 51 50 0 (set (reg/f:SI 98 [ D.21510 ])
        (mem/f/j:SI (reg/f:SI 114) [0 right_11(D)->source+0 S4 A32])) ..\Str\str.cpp:48 -1
     (nil))

;; _30 = (sizetype) i_3;

(insn 52 51 0 (set (reg:SI 99 [ D.21511 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) ..\Str\str.cpp:48 -1
     (nil))

;; _31 = _29 + _30;

(insn 53 52 0 (parallel [
            (set (reg/f:SI 100 [ D.21510 ])
                (plus:SI (reg/f:SI 98 [ D.21510 ])
                    (reg:SI 99 [ D.21511 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:48 -1
     (nil))

;; _32 = *_31;

(insn 54 53 0 (set (reg:QI 101 [ D.21512 ])
        (mem:QI (reg/f:SI 100 [ D.21510 ]) [0 *_31+0 S1 A8])) ..\Str\str.cpp:48 -1
     (nil))

;; _33 = (int) _32;

(insn 55 54 0 (set (reg:SI 102 [ D.21509 ])
        (zero_extend:SI (reg:QI 101 [ D.21512 ]))) ..\Str\str.cpp:48 -1
     (nil))

;; _35 = lowerCase (_33);

(insn 56 55 57 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 102 [ D.21509 ])) ..\Str\str.cpp:48 -1
     (nil))

(call_insn 57 56 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Z9lowerCasei") [flags 0x3]  <function_decl 04e5f200 lowerCase>) [0 lowerCase S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:48 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 58 57 0 (set (reg:SI 103 [ D.21509 ])
        (reg:SI 0 ax)) ..\Str\str.cpp:48 -1
     (nil))

;; tmp_r_36 = (unsigned char) _35;

(insn 59 58 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -14 [0xfffffffffffffff2])) [0 tmp_r+0 S1 A8])
        (subreg:QI (reg:SI 103 [ D.21509 ]) 0)) ..\Str\str.cpp:48 -1
     (nil))

;; if (tmp_l_28 < tmp_r_36)

(insn 60 59 61 (set (reg:QI 115)
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 tmp_l+0 S1 A8])) ..\Str\str.cpp:49 -1
     (nil))

(insn 61 60 62 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 115)
            (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -14 [0xfffffffffffffff2])) [0 tmp_r+0 S1 A8]))) ..\Str\str.cpp:49 -1
     (nil))

(jump_insn 62 61 0 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:49 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; result_39 = 1;

(insn 64 63 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 1 [0x1])) ..\Str\str.cpp:51 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 67 66 68 26 "" [0 uses])

(note 68 67 0 NOTE_INSN_BASIC_BLOCK)

;; if (tmp_l_28 > tmp_r_36)

(insn 69 68 70 (set (reg:QI 116)
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 tmp_l+0 S1 A8])) ..\Str\str.cpp:53 -1
     (nil))

(insn 70 69 71 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 116)
            (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -14 [0xfffffffffffffff2])) [0 tmp_r+0 S1 A8]))) ..\Str\str.cpp:53 -1
     (nil))

(jump_insn 71 70 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:53 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; result_38 = 0;

(insn 73 72 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:54 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 76 75 77 27 "" [0 uses])

(note 77 76 0 NOTE_INSN_BASIC_BLOCK)

;; i_37 = i_3 + 1;

(insn 78 77 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:46 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 82 81 83 25 "" [0 uses])

(note 83 82 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 14

;; 

(code_label 84 83 85 22 "" [0 uses])

(note 85 84 0 NOTE_INSN_BASIC_BLOCK)

;; _40 = result_2;

(insn 86 85 0 (set (reg:QI 104 [ D.21508 ])
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])) ..\Str\str.cpp:59 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; <L13>:

(code_label 87 86 88 29 "" [0 uses])

(note 88 87 0 NOTE_INSN_BASIC_BLOCK)

;; return _40;

(insn 89 88 90 (set (reg:QI 105 [ <retval> ])
        (reg:QI 104 [ D.21508 ])) ..\Str\str.cpp:59 -1
     (nil))

(jump_insn 90 89 91 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:59 -1
     (nil))

(barrier 91 90 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 8->14 redirected to 15
Redirecting jump 65 from 14 to 15.
Redirecting jump 74 from 14 to 15.
deleting block 14
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.
Removing jump 90.
Merging block 17 into block 15...
Merged blocks 15 and 17.
Merged 15 and 17 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:42 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:44 -1
     (nil))
(insn 7 6 8 2 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 106)) ..\Str\str.cpp:44 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:44 -1
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 107)) ..\Str\str.cpp:44 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZneRK3StrS1_") [flags 0x3]  <function_decl 04e59800 operator!=>) [0 operator!= S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:44 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 11 10 12 2 (set (reg:QI 88 [ D.21508 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:44 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.21508 ])
            (const_int 0 [0]))) ..\Str\str.cpp:44 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) ..\Str\str.cpp:44 -1
     (nil)
 -> 84)
;;  succ:       4 (FALLTHRU)
;;              15

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 108)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 89 [ D.21509 ])
        (mem/j:SI (plus:SI (reg/f:SI 108)
                (const_int 4 [0x4])) [0 left_10(D)->size+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 90 [ D.21509 ])
        (mem/j:SI (plus:SI (reg/f:SI 109)
                (const_int 4 [0x4])) [0 right_11(D)->size+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))
(insn 19 18 20 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ D.21509 ])
            (reg:SI 90 [ D.21509 ]))) ..\Str\str.cpp:45 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) ..\Str\str.cpp:45 -1
     (nil)
 -> 26)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))
(insn 23 22 24 5 (set (reg:SI 87 [ D.21507 ])
        (mem/j:SI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [0 right_11(D)->size+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (label_ref 30)) -1
     (nil)
 -> 30)
;;  succ:       7

(barrier 25 24 26)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 26 25 27 6 23 "" [1 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))
(insn 29 28 30 6 (set (reg:SI 87 [ D.21507 ])
        (mem/j:SI (plus:SI (reg/f:SI 111)
                (const_int 4 [0x4])) [0 left_10(D)->size+0 S4 A32])) ..\Str\str.cpp:45 -1
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU)
(code_label 30 29 31 7 24 "" [1 uses])
(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 7 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 min_size+0 S4 A32])
        (reg:SI 87 [ D.21507 ])) ..\Str\str.cpp:45 -1
     (nil))
(insn 33 32 79 7 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:46 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              13 (DFS_BACK)
(code_label 79 33 34 8 28 "" [1 uses])
(note 34 79 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 8 (set (reg:SI 112)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 min_size+0 S4 A32])) ..\Str\str.cpp:46 -1
     (nil))
(insn 36 35 37 8 (parallel [
            (set (reg:SI 91 [ D.21509 ])
                (plus:SI (reg:SI 112)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:46 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 min_size+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 37 36 38 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91 [ D.21509 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) ..\Str\str.cpp:46 -1
     (nil))
(jump_insn 38 37 39 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 84)
            (pc))) ..\Str\str.cpp:46 509 {*jcc_1}
     (nil)
 -> 84)
;;  succ:       15
;;              9 (FALLTHRU)

;; basic block 9, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:47 -1
     (nil))
(insn 41 40 42 9 (set (reg/f:SI 92 [ D.21510 ])
        (mem/f/j:SI (reg/f:SI 113) [0 left_10(D)->source+0 S4 A32])) ..\Str\str.cpp:47 -1
     (nil))
(insn 42 41 43 9 (set (reg:SI 93 [ D.21511 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) ..\Str\str.cpp:47 -1
     (nil))
(insn 43 42 44 9 (parallel [
            (set (reg/f:SI 94 [ D.21510 ])
                (plus:SI (reg/f:SI 92 [ D.21510 ])
                    (reg:SI 93 [ D.21511 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:47 -1
     (nil))
(insn 44 43 45 9 (set (reg:QI 95 [ D.21512 ])
        (mem:QI (reg/f:SI 94 [ D.21510 ]) [0 *_23+0 S1 A8])) ..\Str\str.cpp:47 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 96 [ D.21509 ])
        (zero_extend:SI (reg:QI 95 [ D.21512 ]))) ..\Str\str.cpp:47 -1
     (nil))
(insn 46 45 47 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 96 [ D.21509 ])) ..\Str\str.cpp:47 -1
     (nil))
(call_insn 47 46 48 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Z9lowerCasei") [flags 0x3]  <function_decl 04e5f200 lowerCase>) [0 lowerCase S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:47 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 48 47 49 9 (set (reg:SI 97 [ D.21509 ])
        (reg:SI 0 ax)) ..\Str\str.cpp:47 -1
     (nil))
(insn 49 48 50 9 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 tmp_l+0 S1 A8])
        (subreg:QI (reg:SI 97 [ D.21509 ]) 0)) ..\Str\str.cpp:47 -1
     (nil))
(insn 50 49 51 9 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:48 -1
     (nil))
(insn 51 50 52 9 (set (reg/f:SI 98 [ D.21510 ])
        (mem/f/j:SI (reg/f:SI 114) [0 right_11(D)->source+0 S4 A32])) ..\Str\str.cpp:48 -1
     (nil))
(insn 52 51 53 9 (set (reg:SI 99 [ D.21511 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) ..\Str\str.cpp:48 -1
     (nil))
(insn 53 52 54 9 (parallel [
            (set (reg/f:SI 100 [ D.21510 ])
                (plus:SI (reg/f:SI 98 [ D.21510 ])
                    (reg:SI 99 [ D.21511 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:48 -1
     (nil))
(insn 54 53 55 9 (set (reg:QI 101 [ D.21512 ])
        (mem:QI (reg/f:SI 100 [ D.21510 ]) [0 *_31+0 S1 A8])) ..\Str\str.cpp:48 -1
     (nil))
(insn 55 54 56 9 (set (reg:SI 102 [ D.21509 ])
        (zero_extend:SI (reg:QI 101 [ D.21512 ]))) ..\Str\str.cpp:48 -1
     (nil))
(insn 56 55 57 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 102 [ D.21509 ])) ..\Str\str.cpp:48 -1
     (nil))
(call_insn 57 56 58 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Z9lowerCasei") [flags 0x3]  <function_decl 04e5f200 lowerCase>) [0 lowerCase S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:48 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 58 57 59 9 (set (reg:SI 103 [ D.21509 ])
        (reg:SI 0 ax)) ..\Str\str.cpp:48 -1
     (nil))
(insn 59 58 60 9 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -14 [0xfffffffffffffff2])) [0 tmp_r+0 S1 A8])
        (subreg:QI (reg:SI 103 [ D.21509 ]) 0)) ..\Str\str.cpp:48 -1
     (nil))
(insn 60 59 61 9 (set (reg:QI 115)
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 tmp_l+0 S1 A8])) ..\Str\str.cpp:49 -1
     (nil))
(insn 61 60 62 9 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 115)
            (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -14 [0xfffffffffffffff2])) [0 tmp_r+0 S1 A8]))) ..\Str\str.cpp:49 -1
     (nil))
(jump_insn 62 61 63 9 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) ..\Str\str.cpp:49 -1
     (nil)
 -> 67)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 1 [0x1])) ..\Str\str.cpp:51 -1
     (nil))
(jump_insn 65 64 66 10 (set (pc)
        (label_ref:SI 84)) ..\Str\str.cpp:52 551 {jump}
     (nil)
 -> 84)
;;  succ:       15 [100,0%] 

(barrier 66 65 67)
;; basic block 11, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 67 66 68 11 26 "" [1 uses])
(note 68 67 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 11 (set (reg:QI 116)
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 tmp_l+0 S1 A8])) ..\Str\str.cpp:53 -1
     (nil))
(insn 70 69 71 11 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 116)
            (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -14 [0xfffffffffffffff2])) [0 tmp_r+0 S1 A8]))) ..\Str\str.cpp:53 -1
     (nil))
(jump_insn 71 70 72 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) ..\Str\str.cpp:53 -1
     (nil)
 -> 76)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
(note 72 71 73 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 12 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:54 -1
     (nil))
(jump_insn 74 73 75 12 (set (pc)
        (label_ref:SI 84)) ..\Str\str.cpp:55 551 {jump}
     (nil)
 -> 84)
;;  succ:       15 [100,0%] 

(barrier 75 74 76)
;; basic block 13, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 12, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 76 75 77 13 27 "" [1 uses])
(note 77 76 78 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 80 13 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:46 -1
     (nil))
(jump_insn 80 78 81 13 (set (pc)
        (label_ref 79)) ..\Str\str.cpp:46 -1
     (nil)
 -> 79)
;;  succ:       8 (DFS_BACK)

(barrier 81 80 84)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              12 [100,0%] 
;;              8
;;              10 [100,0%] 
(code_label 84 81 85 15 22 "" [4 uses])
(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 89 15 (set (reg:QI 104 [ D.21508 ])
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])) ..\Str\str.cpp:59 -1
     (nil))
(insn 89 86 93 15 (set (reg:QI 105 [ <retval> ])
        (reg:QI 104 [ D.21508 ])) ..\Str\str.cpp:59 -1
     (nil))
(insn 93 89 94 15 (set (reg/i:QI 0 ax)
        (reg:QI 105 [ <retval> ])) ..\Str\str.cpp:60 -1
     (nil))
(insn 94 93 0 15 (use (reg/i:QI 0 ax)) ..\Str\str.cpp:60 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function bool operator<(const Str&, const Str&) (_ZltRK3StrS1_, funcdef_no=1022, decl_uid=20923, cgraph_uid=199, symbol_order=200)

bool operator<(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  bool result;
  bool D.21231;
  bool D.21229;
  bool retval.11;
  bool retval.11_8;
  bool _10;
  bool _12;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  result_3 = 0;
  retval.11_8 = operator!= (left_5(D), right_6(D));
  if (retval.11_8 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _10 = operator> (left_5(D), right_6(D));
  result_11 = ~_10;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # result_1 = PHI <result_3(2), result_11(3)>
  _12 = result_1;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L3>:
  return _12;
;;    succ:       EXIT

}



Partition map 

Partition 1 (result_1 - 1 )
Partition 3 (result_3 - 3 )
Partition 5 (left_5(D) - 5 )
Partition 6 (right_6(D) - 6 )
Partition 8 (retval.11_8 - 8 )
Partition 10 (_10 - 10 )
Partition 11 (result_11 - 11 )
Partition 12 (_12 - 12 )


Partition map 

Partition 0 (result_1 - 1 )
Partition 1 (result_3 - 3 )
Partition 2 (left_5(D) - 5 )
Partition 3 (right_6(D) - 6 )
Partition 4 (result_11 - 11 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) result_1 <-> result_11
(2147483646) result_1 <-> result_3

Partition map 

Partition 0 (result_1 - 1 )
Partition 1 (result_3 - 3 )
Partition 2 (left_5(D) - 5 )
Partition 3 (right_6(D) - 6 )
Partition 4 (result_11 - 11 )

Coalesce list: (1)result_1 & (11)result_11 [map: 0, 4] : Success -> 0
Coalesce list: (1)result_1 & (3)result_3 [map: 0, 1] : Success -> 0
Coalesce list: (1)result_1 & (11)result_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (result_1 - 1 3 11 )
Partition 1 (left_5(D) - 5 )
Partition 2 (right_6(D) - 6 )
Partition 3 (retval.11_8 - 8 )
Partition 4 (_10 - 10 )
Partition 5 (_12 - 12 )

bool operator<(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  bool result;
  bool D.21231;
  bool D.21229;
  bool retval.11;
  bool retval.11_8;
  bool _10;
  bool _12;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  result_3 = 0;
  retval.11_8 = operator!= (left_5(D), right_6(D));
  if (retval.11_8 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _10 = operator> (left_5(D), right_6(D));
  result_11 = ~_10;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # result_1 = PHI <result_3(2), result_11(3)>
  _12 = result_1;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L3>:
  return _12;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; result_3 = 0;

(insn 5 4 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:63 -1
     (nil))

;; _8 = operator!= (left_5(D), right_6(D));

(insn 6 5 7 (set (reg/f:SI 91)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:64 -1
     (nil))

(insn 7 6 8 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:64 -1
     (nil))

(insn 8 7 9 (set (reg/f:SI 92)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:64 -1
     (nil))

(insn 9 8 10 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 92)) ..\Str\str.cpp:64 -1
     (nil))

(call_insn 10 9 11 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZneRK3StrS1_") [flags 0x3]  <function_decl 04e59800 operator!=>) [0 operator!= S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:64 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

(insn 11 10 0 (set (reg:QI 87 [ D.21513 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:64 -1
     (nil))

;; if (_8 != 0)

(insn 12 11 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.21513 ])
            (const_int 0 [0]))) ..\Str\str.cpp:64 -1
     (nil))

(jump_insn 13 12 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:64 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _10 = operator> (left_5(D), right_6(D));

(insn 15 14 16 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:65 -1
     (nil))

(insn 16 15 17 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 93)) ..\Str\str.cpp:65 -1
     (nil))

(insn 17 16 18 (set (reg/f:SI 94)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:65 -1
     (nil))

(insn 18 17 19 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 94)) ..\Str\str.cpp:65 -1
     (nil))

(call_insn 19 18 20 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZgtRK3StrS1_") [flags 0x3]  <function_decl 04e59880 operator>>) [0 operator> S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:65 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

(insn 20 19 0 (set (reg:QI 88 [ D.21513 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:65 -1
     (nil))

;; result_11 = ~_10;

(insn 21 20 22 (parallel [
            (set (reg:QI 95)
                (xor:QI (reg:QI 88 [ D.21513 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:65 -1
     (nil))

(insn 22 21 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (reg:QI 95)) ..\Str\str.cpp:65 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 23 22 24 31 "" [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; _12 = result_1;

(insn 25 24 0 (set (reg:QI 89 [ D.21513 ])
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])) ..\Str\str.cpp:66 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L3>:

(code_label 26 25 27 32 "" [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; return _12;

(insn 28 27 29 (set (reg:QI 90 [ <retval> ])
        (reg:QI 89 [ D.21513 ])) ..\Str\str.cpp:66 -1
     (nil))

(jump_insn 29 28 30 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:66 -1
     (nil))

(barrier 30 29 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 29.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:63 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 91)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:64 -1
     (nil))
(insn 7 6 8 2 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:64 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 92)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:64 -1
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 92)) ..\Str\str.cpp:64 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZneRK3StrS1_") [flags 0x3]  <function_decl 04e59800 operator!=>) [0 operator!= S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:64 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 11 10 12 2 (set (reg:QI 87 [ D.21513 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:64 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.21513 ])
            (const_int 0 [0]))) ..\Str\str.cpp:64 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) ..\Str\str.cpp:64 -1
     (nil)
 -> 23)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:65 -1
     (nil))
(insn 16 15 17 4 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 93)) ..\Str\str.cpp:65 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:SI 94)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:65 -1
     (nil))
(insn 18 17 19 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 94)) ..\Str\str.cpp:65 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZgtRK3StrS1_") [flags 0x3]  <function_decl 04e59880 operator>>) [0 operator> S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:65 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 20 19 21 4 (set (reg:QI 88 [ D.21513 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:65 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:QI 95)
                (xor:QI (reg:QI 88 [ D.21513 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:65 -1
     (nil))
(insn 22 21 23 4 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (reg:QI 95)) ..\Str\str.cpp:65 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 23 22 24 5 31 "" [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 28 5 (set (reg:QI 89 [ D.21513 ])
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])) ..\Str\str.cpp:66 -1
     (nil))
(insn 28 25 32 5 (set (reg:QI 90 [ <retval> ])
        (reg:QI 89 [ D.21513 ])) ..\Str\str.cpp:66 -1
     (nil))
(insn 32 28 33 5 (set (reg/i:QI 0 ax)
        (reg:QI 90 [ <retval> ])) ..\Str\str.cpp:67 -1
     (nil))
(insn 33 32 0 5 (use (reg/i:QI 0 ax)) ..\Str\str.cpp:67 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function bool operator>=(const Str&, const Str&) (_ZgeRK3StrS1_, funcdef_no=1023, decl_uid=20920, cgraph_uid=200, symbol_order=201)

bool operator>=(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  bool result;
  bool D.21237;
  bool retval.12;
  bool retval.12_8;
  bool _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  result_3 = 1;
  retval.12_8 = operator!= (left_5(D), right_6(D));
  if (retval.12_8 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  result_10 = operator> (left_5(D), right_6(D));
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # result_1 = PHI <result_3(2), result_10(3)>
  _11 = result_1;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L3>:
  return _11;
;;    succ:       EXIT

}



Partition map 

Partition 1 (result_1 - 1 )
Partition 3 (result_3 - 3 )
Partition 5 (left_5(D) - 5 )
Partition 6 (right_6(D) - 6 )
Partition 8 (retval.12_8 - 8 )
Partition 10 (result_10 - 10 )
Partition 11 (_11 - 11 )


Partition map 

Partition 0 (result_1 - 1 )
Partition 1 (result_3 - 3 )
Partition 2 (left_5(D) - 5 )
Partition 3 (right_6(D) - 6 )
Partition 4 (result_10 - 10 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) result_1 <-> result_10
(2147483646) result_1 <-> result_3

Partition map 

Partition 0 (result_1 - 1 )
Partition 1 (result_3 - 3 )
Partition 2 (left_5(D) - 5 )
Partition 3 (right_6(D) - 6 )
Partition 4 (result_10 - 10 )

Coalesce list: (1)result_1 & (10)result_10 [map: 0, 4] : Success -> 0
Coalesce list: (1)result_1 & (3)result_3 [map: 0, 1] : Success -> 0
Coalesce list: (1)result_1 & (10)result_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (result_1 - 1 3 10 )
Partition 1 (left_5(D) - 5 )
Partition 2 (right_6(D) - 6 )
Partition 3 (retval.12_8 - 8 )
Partition 4 (_11 - 11 )

bool operator>=(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  bool result;
  bool D.21237;
  bool retval.12;
  bool retval.12_8;
  bool _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  result_3 = 1;
  retval.12_8 = operator!= (left_5(D), right_6(D));
  if (retval.12_8 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  result_10 = operator> (left_5(D), right_6(D));
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # result_1 = PHI <result_3(2), result_10(3)>
  _11 = result_1;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L3>:
  return _11;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; result_3 = 1;

(insn 5 4 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 1 [0x1])) ..\Str\str.cpp:70 -1
     (nil))

;; _8 = operator!= (left_5(D), right_6(D));

(insn 6 5 7 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:71 -1
     (nil))

(insn 7 6 8 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90)) ..\Str\str.cpp:71 -1
     (nil))

(insn 8 7 9 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:71 -1
     (nil))

(insn 9 8 10 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:71 -1
     (nil))

(call_insn 10 9 11 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZneRK3StrS1_") [flags 0x3]  <function_decl 04e59800 operator!=>) [0 operator!= S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:71 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

(insn 11 10 0 (set (reg:QI 87 [ D.21514 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:71 -1
     (nil))

;; if (_8 != 0)

(insn 12 11 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.21514 ])
            (const_int 0 [0]))) ..\Str\str.cpp:71 -1
     (nil))

(jump_insn 13 12 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:71 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; result_10 = operator> (left_5(D), right_6(D));

(insn 15 14 16 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:72 -1
     (nil))

(insn 16 15 17 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 92)) ..\Str\str.cpp:72 -1
     (nil))

(insn 17 16 18 (set (reg/f:SI 93)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:72 -1
     (nil))

(insn 18 17 19 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 93)) ..\Str\str.cpp:72 -1
     (nil))

(call_insn 19 18 20 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZgtRK3StrS1_") [flags 0x3]  <function_decl 04e59880 operator>>) [0 operator> S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:72 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

(insn 20 19 21 (set (reg:QI 94)
        (reg:QI 0 ax)) ..\Str\str.cpp:72 -1
     (nil))

(insn 21 20 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (reg:QI 94)) ..\Str\str.cpp:72 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 22 21 23 34 "" [0 uses])

(note 23 22 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = result_1;

(insn 24 23 0 (set (reg:QI 88 [ D.21514 ])
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])) ..\Str\str.cpp:73 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L3>:

(code_label 25 24 26 35 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; return _11;

(insn 27 26 28 (set (reg:QI 89 [ <retval> ])
        (reg:QI 88 [ D.21514 ])) ..\Str\str.cpp:73 -1
     (nil))

(jump_insn 28 27 29 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:73 -1
     (nil))

(barrier 29 28 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 28.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 1 [0x1])) ..\Str\str.cpp:70 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:71 -1
     (nil))
(insn 7 6 8 2 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90)) ..\Str\str.cpp:71 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:71 -1
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:71 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZneRK3StrS1_") [flags 0x3]  <function_decl 04e59800 operator!=>) [0 operator!= S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:71 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 11 10 12 2 (set (reg:QI 87 [ D.21514 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:71 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.21514 ])
            (const_int 0 [0]))) ..\Str\str.cpp:71 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ..\Str\str.cpp:71 -1
     (nil)
 -> 22)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:72 -1
     (nil))
(insn 16 15 17 4 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 92)) ..\Str\str.cpp:72 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:SI 93)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:72 -1
     (nil))
(insn 18 17 19 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 93)) ..\Str\str.cpp:72 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZgtRK3StrS1_") [flags 0x3]  <function_decl 04e59880 operator>>) [0 operator> S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:72 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 20 19 21 4 (set (reg:QI 94)
        (reg:QI 0 ax)) ..\Str\str.cpp:72 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (reg:QI 94)) ..\Str\str.cpp:72 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 22 21 23 5 34 "" [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 27 5 (set (reg:QI 88 [ D.21514 ])
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])) ..\Str\str.cpp:73 -1
     (nil))
(insn 27 24 31 5 (set (reg:QI 89 [ <retval> ])
        (reg:QI 88 [ D.21514 ])) ..\Str\str.cpp:73 -1
     (nil))
(insn 31 27 32 5 (set (reg/i:QI 0 ax)
        (reg:QI 89 [ <retval> ])) ..\Str\str.cpp:74 -1
     (nil))
(insn 32 31 0 5 (use (reg/i:QI 0 ax)) ..\Str\str.cpp:74 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function bool operator<=(const Str&, const Str&) (_ZleRK3StrS1_, funcdef_no=1024, decl_uid=20926, cgraph_uid=201, symbol_order=202)

bool operator<=(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  bool result;
  bool D.21243;
  bool retval.13;
  bool retval.13_8;
  bool _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  result_3 = 1;
  retval.13_8 = operator!= (left_5(D), right_6(D));
  if (retval.13_8 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  result_10 = operator< (left_5(D), right_6(D));
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # result_1 = PHI <result_3(2), result_10(3)>
  _11 = result_1;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L3>:
  return _11;
;;    succ:       EXIT

}



Partition map 

Partition 1 (result_1 - 1 )
Partition 3 (result_3 - 3 )
Partition 5 (left_5(D) - 5 )
Partition 6 (right_6(D) - 6 )
Partition 8 (retval.13_8 - 8 )
Partition 10 (result_10 - 10 )
Partition 11 (_11 - 11 )


Partition map 

Partition 0 (result_1 - 1 )
Partition 1 (result_3 - 3 )
Partition 2 (left_5(D) - 5 )
Partition 3 (right_6(D) - 6 )
Partition 4 (result_10 - 10 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) result_1 <-> result_10
(2147483646) result_1 <-> result_3

Partition map 

Partition 0 (result_1 - 1 )
Partition 1 (result_3 - 3 )
Partition 2 (left_5(D) - 5 )
Partition 3 (right_6(D) - 6 )
Partition 4 (result_10 - 10 )

Coalesce list: (1)result_1 & (10)result_10 [map: 0, 4] : Success -> 0
Coalesce list: (1)result_1 & (3)result_3 [map: 0, 1] : Success -> 0
Coalesce list: (1)result_1 & (10)result_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (result_1 - 1 3 10 )
Partition 1 (left_5(D) - 5 )
Partition 2 (right_6(D) - 6 )
Partition 3 (retval.13_8 - 8 )
Partition 4 (_11 - 11 )

bool operator<=(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  bool result;
  bool D.21243;
  bool retval.13;
  bool retval.13_8;
  bool _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  result_3 = 1;
  retval.13_8 = operator!= (left_5(D), right_6(D));
  if (retval.13_8 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  result_10 = operator< (left_5(D), right_6(D));
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # result_1 = PHI <result_3(2), result_10(3)>
  _11 = result_1;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L3>:
  return _11;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; result_3 = 1;

(insn 5 4 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 1 [0x1])) ..\Str\str.cpp:77 -1
     (nil))

;; _8 = operator!= (left_5(D), right_6(D));

(insn 6 5 7 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:78 -1
     (nil))

(insn 7 6 8 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90)) ..\Str\str.cpp:78 -1
     (nil))

(insn 8 7 9 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:78 -1
     (nil))

(insn 9 8 10 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:78 -1
     (nil))

(call_insn 10 9 11 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZneRK3StrS1_") [flags 0x3]  <function_decl 04e59800 operator!=>) [0 operator!= S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:78 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

(insn 11 10 0 (set (reg:QI 87 [ D.21515 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:78 -1
     (nil))

;; if (_8 != 0)

(insn 12 11 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.21515 ])
            (const_int 0 [0]))) ..\Str\str.cpp:78 -1
     (nil))

(jump_insn 13 12 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:78 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; result_10 = operator< (left_5(D), right_6(D));

(insn 15 14 16 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:79 -1
     (nil))

(insn 16 15 17 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 92)) ..\Str\str.cpp:79 -1
     (nil))

(insn 17 16 18 (set (reg/f:SI 93)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:79 -1
     (nil))

(insn 18 17 19 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 93)) ..\Str\str.cpp:79 -1
     (nil))

(call_insn 19 18 20 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZltRK3StrS1_") [flags 0x3]  <function_decl 04e59980 operator<>) [0 operator< S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:79 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

(insn 20 19 21 (set (reg:QI 94)
        (reg:QI 0 ax)) ..\Str\str.cpp:79 -1
     (nil))

(insn 21 20 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (reg:QI 94)) ..\Str\str.cpp:79 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 22 21 23 37 "" [0 uses])

(note 23 22 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = result_1;

(insn 24 23 0 (set (reg:QI 88 [ D.21515 ])
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])) ..\Str\str.cpp:80 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L3>:

(code_label 25 24 26 38 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; return _11;

(insn 27 26 28 (set (reg:QI 89 [ <retval> ])
        (reg:QI 88 [ D.21515 ])) ..\Str\str.cpp:80 -1
     (nil))

(jump_insn 28 27 29 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:80 -1
     (nil))

(barrier 29 28 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 28.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 1 [0x1])) ..\Str\str.cpp:77 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:78 -1
     (nil))
(insn 7 6 8 2 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90)) ..\Str\str.cpp:78 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:78 -1
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:78 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZneRK3StrS1_") [flags 0x3]  <function_decl 04e59800 operator!=>) [0 operator!= S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:78 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 11 10 12 2 (set (reg:QI 87 [ D.21515 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:78 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.21515 ])
            (const_int 0 [0]))) ..\Str\str.cpp:78 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ..\Str\str.cpp:78 -1
     (nil)
 -> 22)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:79 -1
     (nil))
(insn 16 15 17 4 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 92)) ..\Str\str.cpp:79 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:SI 93)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 left+0 S4 A32])) ..\Str\str.cpp:79 -1
     (nil))
(insn 18 17 19 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 93)) ..\Str\str.cpp:79 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZltRK3StrS1_") [flags 0x3]  <function_decl 04e59980 operator<>) [0 operator< S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:79 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 20 19 21 4 (set (reg:QI 94)
        (reg:QI 0 ax)) ..\Str\str.cpp:79 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (reg:QI 94)) ..\Str\str.cpp:79 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 22 21 23 5 37 "" [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 27 5 (set (reg:QI 88 [ D.21515 ])
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])) ..\Str\str.cpp:80 -1
     (nil))
(insn 27 24 31 5 (set (reg:QI 89 [ <retval> ])
        (reg:QI 88 [ D.21515 ])) ..\Str\str.cpp:80 -1
     (nil))
(insn 31 27 32 5 (set (reg/i:QI 0 ax)
        (reg:QI 89 [ <retval> ])) ..\Str\str.cpp:81 -1
     (nil))
(insn 32 31 0 5 (use (reg/i:QI 0 ax)) ..\Str\str.cpp:81 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Str& Str::operator+=(const Str&) (_ZN3StrpLERKS_, funcdef_no=1025, decl_uid=20907, cgraph_uid=202, symbol_order=203)

Str& Str::operator+=(const Str&) (struct Str * const this, const struct Str & right)
{
  unsigned char * D.21276;
  int j;
  int ii;
  int i;
  unsigned char * ts;
  int sz;
  struct Str & D.21274;
  unsigned char * D.21272;
  unsigned char * D.21269;
  int D.21268;
  int D.21267;
  int D.21266;
  unsigned char D.21265;
  unsigned char * D.21264;
  sizetype j.17;
  unsigned char * D.21262;
  unsigned char * D.21261;
  sizetype ii.16;
  unsigned char D.21257;
  unsigned char * D.21256;
  sizetype i.15;
  unsigned char * D.21254;
  unsigned char * D.21253;
  sizetype i.14;
  int D.21250;
  sizetype D.21248;
  int D.21247;
  int D.21246;
  int D.21245;
  int _9;
  int _11;
  int _13;
  sizetype _14;
  unsigned char * _16;
  int _19;
  sizetype i.14_20;
  unsigned char * _21;
  unsigned char * _22;
  sizetype i.15_23;
  unsigned char * _24;
  unsigned char _25;
  sizetype ii.16_30;
  unsigned char * _31;
  unsigned char * _32;
  sizetype j.17_33;
  unsigned char * _34;
  unsigned char _35;
  int _39;
  int _40;
  int _41;
  unsigned char * _43;
  unsigned char * _44;
  struct Str & _47;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _9 = this_8(D)->size;
  _11 = right_10(D)->size;
  sz_12 = _9 + _11;
  _13 = sz_12 + 1;
  _14 = (sizetype) _13;
  _16 = operator new [] (_14);
  ts_17 = _16;
  i_18 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                4
  # i_1 = PHI <i_18(2), i_27(4)>
  _19 = this_8(D)->size;
  if (_19 <= i_1)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i.14_20 = (sizetype) i_1;
  _21 = ts_17 + i.14_20;
  _22 = this_8(D)->source;
  i.15_23 = (sizetype) i_1;
  _24 = _22 + i.15_23;
  _25 = *_24;
  *_21 = _25;
  i_27 = i_1 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
  ii_28 = this_8(D)->size;
  j_29 = 0;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       5
;;                7
  # ii_2 = PHI <ii_28(5), ii_37(7)>
  # j_3 = PHI <j_29(5), j_38(7)>
  if (ii_2 > sz_12)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  ii.16_30 = (sizetype) ii_2;
  _31 = ts_17 + ii.16_30;
  _32 = right_10(D)->source;
  j.17_33 = (sizetype) j_3;
  _34 = _32 + j.17_33;
  _35 = *_34;
  *_31 = _35;
  ii_37 = ii_2 + 1;
  j_38 = j_3 + 1;
  goto <bb 6>;
;;    succ:       6

;;   basic block 8, loop depth 0
;;    pred:       6
  _39 = this_8(D)->size;
  _40 = right_10(D)->size;
  _41 = _39 + _40;
  this_8(D)->size = _41;
  _43 = this_8(D)->source;
  if (_43 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  _44 = this_8(D)->source;
  operator delete [] (_44);
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       8
;;                9
  this_8(D)->source = ts_17;
  _47 = this_8(D);
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
<L9>:
  return _47;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (ii_2 - 2 )
Partition 3 (j_3 - 3 )
Partition 8 (this_8(D) - 8 )
Partition 9 (_9 - 9 )
Partition 10 (right_10(D) - 10 )
Partition 11 (_11 - 11 )
Partition 12 (sz_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 16 (_16 - 16 )
Partition 17 (ts_17 - 17 )
Partition 18 (i_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (i.14_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (i.15_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 27 (i_27 - 27 )
Partition 28 (ii_28 - 28 )
Partition 29 (j_29 - 29 )
Partition 30 (ii.16_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (j.17_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 37 (ii_37 - 37 )
Partition 38 (j_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 47 (_47 - 47 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (ii_2 - 2 )
Partition 2 (j_3 - 3 )
Partition 3 (this_8(D) - 8 )
Partition 4 (right_10(D) - 10 )
Partition 5 (i_18 - 18 )
Partition 6 (i_27 - 27 )
Partition 7 (ii_28 - 28 )
Partition 8 (j_29 - 29 )
Partition 9 (ii_37 - 37 )
Partition 10 (j_38 - 38 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_18
(2147483646) i_1 <-> i_27
(2147483646) ii_2 <-> ii_28
(2147483646) ii_2 <-> ii_37
(2147483646) j_3 <-> j_29
(2147483646) j_3 <-> j_38

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (ii_2 - 2 )
Partition 2 (j_3 - 3 )
Partition 3 (this_8(D) - 8 )
Partition 4 (right_10(D) - 10 )
Partition 5 (i_18 - 18 )
Partition 6 (i_27 - 27 )
Partition 7 (ii_28 - 28 )
Partition 8 (j_29 - 29 )
Partition 9 (ii_37 - 37 )
Partition 10 (j_38 - 38 )

Coalesce list: (1)i_1 & (18)i_18 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (27)i_27 [map: 0, 6] : Success -> 0
Coalesce list: (2)ii_2 & (28)ii_28 [map: 1, 7] : Success -> 1
Coalesce list: (2)ii_2 & (37)ii_37 [map: 1, 9] : Success -> 1
Coalesce list: (3)j_3 & (29)j_29 [map: 2, 8] : Success -> 2
Coalesce list: (3)j_3 & (38)j_38 [map: 2, 10] : Success -> 2
Coalesce list: (3)j_3 & (38)j_3: Already Coalesced.
Coalesce list: (3)j_3 & (29)j_3: Already Coalesced.
Coalesce list: (2)ii_2 & (37)ii_2: Already Coalesced.
Coalesce list: (2)ii_2 & (28)ii_2: Already Coalesced.
Coalesce list: (1)i_1 & (27)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (18)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 18 27 )
Partition 1 (ii_2 - 2 28 37 )
Partition 2 (j_3 - 3 29 38 )
Partition 3 (this_8(D) - 8 )
Partition 4 (_9 - 9 )
Partition 5 (right_10(D) - 10 )
Partition 6 (_11 - 11 )
Partition 7 (sz_12 - 12 )
Partition 8 (_13 - 13 )
Partition 9 (_14 - 14 )
Partition 10 (_16 - 16 )
Partition 11 (ts_17 - 17 )
Partition 12 (_19 - 19 )
Partition 13 (i.14_20 - 20 )
Partition 14 (_21 - 21 )
Partition 15 (_22 - 22 )
Partition 16 (i.15_23 - 23 )
Partition 17 (_24 - 24 )
Partition 18 (_25 - 25 )
Partition 19 (ii.16_30 - 30 )
Partition 20 (_31 - 31 )
Partition 21 (_32 - 32 )
Partition 22 (j.17_33 - 33 )
Partition 23 (_34 - 34 )
Partition 24 (_35 - 35 )
Partition 25 (_39 - 39 )
Partition 26 (_40 - 40 )
Partition 27 (_41 - 41 )
Partition 28 (_43 - 43 )
Partition 29 (_44 - 44 )
Partition 30 (_47 - 47 )

Str& Str::operator+=(const Str&) (struct Str * const this, const struct Str & right)
{
  unsigned char * D.21276;
  int j;
  int ii;
  int i;
  unsigned char * ts;
  int sz;
  struct Str & D.21274;
  unsigned char * D.21272;
  unsigned char * D.21269;
  int D.21268;
  int D.21267;
  int D.21266;
  unsigned char D.21265;
  unsigned char * D.21264;
  sizetype j.17;
  unsigned char * D.21262;
  unsigned char * D.21261;
  sizetype ii.16;
  unsigned char D.21257;
  unsigned char * D.21256;
  sizetype i.15;
  unsigned char * D.21254;
  unsigned char * D.21253;
  sizetype i.14;
  int D.21250;
  sizetype D.21248;
  int D.21247;
  int D.21246;
  int D.21245;
  int _9;
  int _11;
  int _13;
  sizetype _14;
  unsigned char * _16;
  int _19;
  sizetype i.14_20;
  unsigned char * _21;
  unsigned char * _22;
  sizetype i.15_23;
  unsigned char * _24;
  unsigned char _25;
  sizetype ii.16_30;
  unsigned char * _31;
  unsigned char * _32;
  sizetype j.17_33;
  unsigned char * _34;
  unsigned char _35;
  int _39;
  int _40;
  int _41;
  unsigned char * _43;
  unsigned char * _44;
  struct Str & _47;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _9 = this_8(D)->size;
  _11 = right_10(D)->size;
  sz_12 = _9 + _11;
  _13 = sz_12 + 1;
  _14 = (sizetype) _13;
  _16 = operator new [] (_14);
  ts_17 = _16;
  i_18 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                4
  # i_1 = PHI <i_18(2), i_27(4)>
  _19 = this_8(D)->size;
  if (_19 <= i_1)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i.14_20 = (sizetype) i_1;
  _21 = ts_17 + i.14_20;
  _22 = this_8(D)->source;
  i.15_23 = (sizetype) i_1;
  _24 = _22 + i.15_23;
  _25 = *_24;
  *_21 = _25;
  i_27 = i_1 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
  ii_28 = this_8(D)->size;
  j_29 = 0;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       5
;;                7
  # ii_2 = PHI <ii_28(5), ii_37(7)>
  # j_3 = PHI <j_29(5), j_38(7)>
  if (ii_2 > sz_12)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  ii.16_30 = (sizetype) ii_2;
  _31 = ts_17 + ii.16_30;
  _32 = right_10(D)->source;
  j.17_33 = (sizetype) j_3;
  _34 = _32 + j.17_33;
  _35 = *_34;
  *_31 = _35;
  ii_37 = ii_2 + 1;
  j_38 = j_3 + 1;
  goto <bb 6>;
;;    succ:       6

;;   basic block 8, loop depth 0
;;    pred:       6
  _39 = this_8(D)->size;
  _40 = right_10(D)->size;
  _41 = _39 + _40;
  this_8(D)->size = _41;
  _43 = this_8(D)->source;
  if (_43 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  _44 = this_8(D)->source;
  operator delete [] (_44);
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       8
;;                9
  this_8(D)->source = ts_17;
  _47 = this_8(D);
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
<L9>:
  return _47;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _9 = this_8(D)->size;

(insn 6 5 7 (set (reg/f:SI 112)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:85 -1
     (nil))

(insn 7 6 0 (set (reg:SI 87 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 112)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])) ..\Str\str.cpp:85 -1
     (nil))

;; _11 = right_10(D)->size;

(insn 8 7 9 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:85 -1
     (nil))

(insn 9 8 0 (set (reg:SI 88 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 113)
                (const_int 4 [0x4])) [0 right_10(D)->size+0 S4 A32])) ..\Str\str.cpp:85 -1
     (nil))

;; sz_12 = _9 + _11;

(insn 10 9 11 (parallel [
            (set (reg:SI 114)
                (plus:SI (reg:SI 87 [ D.21516 ])
                    (reg:SI 88 [ D.21516 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:85 -1
     (nil))

(insn 11 10 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 sz+0 S4 A32])
        (reg:SI 114)) ..\Str\str.cpp:85 -1
     (nil))

;; _13 = sz_12 + 1;

(insn 12 11 13 (set (reg:SI 115)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 sz+0 S4 A32])) ..\Str\str.cpp:86 -1
     (nil))

(insn 13 12 0 (parallel [
            (set (reg:SI 89 [ D.21516 ])
                (plus:SI (reg:SI 115)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:86 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 sz+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _14 = (sizetype) _13;

(insn 14 13 0 (set (reg:SI 90 [ D.21517 ])
        (reg:SI 89 [ D.21516 ])) ..\Str\str.cpp:86 -1
     (nil))

;; _16 = operator new [] (_14);

(insn 15 14 16 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 90 [ D.21517 ])) ..\Str\str.cpp:86 -1
     (nil))

(call_insn 16 15 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:86 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 17 16 18 (set (reg/f:SI 116)
        (reg:SI 0 ax)) ..\Str\str.cpp:86 -1
     (expr_list:REG_NOALIAS (reg/f:SI 116)
        (nil)))

(insn 18 17 0 (set (reg/f:SI 91 [ D.21518 ])
        (reg/f:SI 116)) ..\Str\str.cpp:86 -1
     (nil))

;; ts_17 = _16;

(insn 19 18 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])
        (reg/f:SI 91 [ D.21518 ])) ..\Str\str.cpp:86 -1
     (nil))

;; i_18 = 0;

(insn 20 19 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:88 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _19 = this_8(D)->size;

(insn 22 21 23 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:88 -1
     (nil))

(insn 23 22 0 (set (reg:SI 92 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 117)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])) ..\Str\str.cpp:88 -1
     (nil))

;; if (_19 <= i_1)

(insn 24 23 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 92 [ D.21516 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:88 -1
     (nil))

(jump_insn 25 24 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:88 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _20 = (sizetype) i_1;

(insn 27 26 0 (set (reg:SI 93 [ D.21517 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:89 -1
     (nil))

;; _21 = ts_17 + _20;

(insn 28 27 29 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])) ..\Str\str.cpp:89 -1
     (nil))

(insn 29 28 0 (parallel [
            (set (reg/f:SI 94 [ D.21518 ])
                (plus:SI (reg:SI 93 [ D.21517 ])
                    (reg/f:SI 118)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:89 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])
            (reg:SI 93 [ D.21517 ]))
        (nil)))

;; _22 = this_8(D)->source;

(insn 30 29 31 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:89 -1
     (nil))

(insn 31 30 0 (set (reg/f:SI 95 [ D.21518 ])
        (mem/f/j:SI (reg/f:SI 119) [0 this_8(D)->source+0 S4 A32])) ..\Str\str.cpp:89 -1
     (nil))

;; _23 = (sizetype) i_1;

(insn 32 31 0 (set (reg:SI 96 [ D.21517 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:89 -1
     (nil))

;; _24 = _22 + _23;

(insn 33 32 0 (parallel [
            (set (reg/f:SI 97 [ D.21518 ])
                (plus:SI (reg/f:SI 95 [ D.21518 ])
                    (reg:SI 96 [ D.21517 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:89 -1
     (nil))

;; _25 = *_24;

(insn 34 33 0 (set (reg:QI 98 [ D.21519 ])
        (mem:QI (reg/f:SI 97 [ D.21518 ]) [0 *_24+0 S1 A8])) ..\Str\str.cpp:89 -1
     (nil))

;; *_21 = _25;

(insn 35 34 0 (set (mem:QI (reg/f:SI 94 [ D.21518 ]) [0 *_21+0 S1 A8])
        (reg:QI 98 [ D.21519 ])) ..\Str\str.cpp:89 -1
     (nil))

;; i_27 = i_1 + 1;

(insn 36 35 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:88 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 40 39 41 40 "" [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; ii_28 = this_8(D)->size;

(insn 42 41 43 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:90 -1
     (nil))

(insn 43 42 44 (set (reg:SI 121)
        (mem/j:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])) ..\Str\str.cpp:90 -1
     (nil))

(insn 44 43 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])
        (reg:SI 121)) ..\Str\str.cpp:90 -1
     (nil))

;; j_29 = 0;

(insn 45 44 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:90 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; if (ii_2 > sz_12)

(insn 47 46 48 (set (reg:SI 122)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])) ..\Str\str.cpp:90 -1
     (nil))

(insn 48 47 49 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 122)
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 sz+0 S4 A32]))) ..\Str\str.cpp:90 -1
     (nil))

(jump_insn 49 48 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:90 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _30 = (sizetype) ii_2;

(insn 51 50 0 (set (reg:SI 99 [ D.21517 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])) ..\Str\str.cpp:91 -1
     (nil))

;; _31 = ts_17 + _30;

(insn 52 51 53 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])) ..\Str\str.cpp:91 -1
     (nil))

(insn 53 52 0 (parallel [
            (set (reg/f:SI 100 [ D.21518 ])
                (plus:SI (reg:SI 99 [ D.21517 ])
                    (reg/f:SI 123)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:91 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])
            (reg:SI 99 [ D.21517 ]))
        (nil)))

;; _32 = right_10(D)->source;

(insn 54 53 55 (set (reg/f:SI 124)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:91 -1
     (nil))

(insn 55 54 0 (set (reg/f:SI 101 [ D.21518 ])
        (mem/f/j:SI (reg/f:SI 124) [0 right_10(D)->source+0 S4 A32])) ..\Str\str.cpp:91 -1
     (nil))

;; _33 = (sizetype) j_3;

(insn 56 55 0 (set (reg:SI 102 [ D.21517 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ..\Str\str.cpp:91 -1
     (nil))

;; _34 = _32 + _33;

(insn 57 56 0 (parallel [
            (set (reg/f:SI 103 [ D.21518 ])
                (plus:SI (reg/f:SI 101 [ D.21518 ])
                    (reg:SI 102 [ D.21517 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:91 -1
     (nil))

;; _35 = *_34;

(insn 58 57 0 (set (reg:QI 104 [ D.21519 ])
        (mem:QI (reg/f:SI 103 [ D.21518 ]) [0 *_34+0 S1 A8])) ..\Str\str.cpp:91 -1
     (nil))

;; *_31 = _35;

(insn 59 58 0 (set (mem:QI (reg/f:SI 100 [ D.21518 ]) [0 *_31+0 S1 A8])
        (reg:QI 104 [ D.21519 ])) ..\Str\str.cpp:91 -1
     (nil))

;; ii_37 = ii_2 + 1;

(insn 60 59 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:90 -1
     (nil))

;; j_38 = j_3 + 1;

(insn 61 60 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:90 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 65 64 66 42 "" [0 uses])

(note 66 65 0 NOTE_INSN_BASIC_BLOCK)

;; _39 = this_8(D)->size;

(insn 67 66 68 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:93 -1
     (nil))

(insn 68 67 0 (set (reg:SI 105 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 125)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])) ..\Str\str.cpp:93 -1
     (nil))

;; _40 = right_10(D)->size;

(insn 69 68 70 (set (reg/f:SI 126)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:93 -1
     (nil))

(insn 70 69 0 (set (reg:SI 106 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 126)
                (const_int 4 [0x4])) [0 right_10(D)->size+0 S4 A32])) ..\Str\str.cpp:93 -1
     (nil))

;; _41 = _39 + _40;

(insn 71 70 0 (parallel [
            (set (reg:SI 107 [ D.21516 ])
                (plus:SI (reg:SI 105 [ D.21516 ])
                    (reg:SI 106 [ D.21516 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:93 -1
     (nil))

;; this_8(D)->size = _41;

(insn 72 71 73 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:93 -1
     (nil))

(insn 73 72 0 (set (mem/j:SI (plus:SI (reg/f:SI 127)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])
        (reg:SI 107 [ D.21516 ])) ..\Str\str.cpp:93 -1
     (nil))

;; _43 = this_8(D)->source;

(insn 74 73 75 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:94 -1
     (nil))

(insn 75 74 0 (set (reg/f:SI 108 [ D.21518 ])
        (mem/f/j:SI (reg/f:SI 128) [0 this_8(D)->source+0 S4 A32])) ..\Str\str.cpp:94 -1
     (nil))

;; if (_43 != 0B)

(insn 76 75 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 108 [ D.21518 ])
            (const_int 0 [0]))) ..\Str\str.cpp:94 -1
     (nil))

(jump_insn 77 76 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:94 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _44 = this_8(D)->source;

(insn 79 78 80 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:94 -1
     (nil))

(insn 80 79 0 (set (reg/f:SI 109 [ D.21518 ])
        (mem/f/j:SI (reg/f:SI 129) [0 this_8(D)->source+0 S4 A32])) ..\Str\str.cpp:94 -1
     (nil))

;; operator delete [] (_44);

(insn 81 80 82 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 109 [ D.21518 ])) ..\Str\str.cpp:94 -1
     (nil))

(call_insn 82 81 0 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:94 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; Generating RTL for gimple basic block 10

;; 

(code_label 83 82 84 44 "" [0 uses])

(note 84 83 0 NOTE_INSN_BASIC_BLOCK)

;; this_8(D)->source = ts_17;

(insn 85 84 86 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:95 -1
     (nil))

(insn 86 85 87 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])) ..\Str\str.cpp:95 -1
     (nil))

(insn 87 86 0 (set (mem/f/j:SI (reg/f:SI 130) [0 this_8(D)->source+0 S4 A32])
        (reg/f:SI 131)) ..\Str\str.cpp:95 -1
     (nil))

;; _47 = this_8(D);

(insn 88 87 0 (set (reg/f:SI 110 [ D.21520 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:97 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; <L9>:

(code_label 89 88 90 45 "" [0 uses])

(note 90 89 0 NOTE_INSN_BASIC_BLOCK)

;; return _47;

(insn 91 90 92 (set (reg:SI 111 [ <retval> ])
        (reg/f:SI 110 [ D.21520 ])) ..\Str\str.cpp:97 -1
     (nil))

(jump_insn 92 91 93 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:97 -1
     (nil))

(barrier 93 92 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 92.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:84 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 112)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:85 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 87 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 112)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])) ..\Str\str.cpp:85 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:85 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 113)
                (const_int 4 [0x4])) [0 right_10(D)->size+0 S4 A32])) ..\Str\str.cpp:85 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 114)
                (plus:SI (reg:SI 87 [ D.21516 ])
                    (reg:SI 88 [ D.21516 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:85 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 sz+0 S4 A32])
        (reg:SI 114)) ..\Str\str.cpp:85 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 115)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 sz+0 S4 A32])) ..\Str\str.cpp:86 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 89 [ D.21516 ])
                (plus:SI (reg:SI 115)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:86 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 sz+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 14 13 15 2 (set (reg:SI 90 [ D.21517 ])
        (reg:SI 89 [ D.21516 ])) ..\Str\str.cpp:86 -1
     (nil))
(insn 15 14 16 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 90 [ D.21517 ])) ..\Str\str.cpp:86 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:86 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 17 16 18 2 (set (reg/f:SI 116)
        (reg:SI 0 ax)) ..\Str\str.cpp:86 -1
     (expr_list:REG_NOALIAS (reg/f:SI 116)
        (nil)))
(insn 18 17 19 2 (set (reg/f:SI 91 [ D.21518 ])
        (reg/f:SI 116)) ..\Str\str.cpp:86 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])
        (reg/f:SI 91 [ D.21518 ])) ..\Str\str.cpp:86 -1
     (nil))
(insn 20 19 37 2 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:88 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              5 (DFS_BACK)
(code_label 37 20 21 4 41 "" [1 uses])
(note 21 37 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:88 -1
     (nil))
(insn 23 22 24 4 (set (reg:SI 92 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 117)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])) ..\Str\str.cpp:88 -1
     (nil))
(insn 24 23 25 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 92 [ D.21516 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:88 -1
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) ..\Str\str.cpp:88 -1
     (nil)
 -> 40)
;;  succ:       6
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg:SI 93 [ D.21517 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:89 -1
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])) ..\Str\str.cpp:89 -1
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg/f:SI 94 [ D.21518 ])
                (plus:SI (reg:SI 93 [ D.21517 ])
                    (reg/f:SI 118)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:89 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])
            (reg:SI 93 [ D.21517 ]))
        (nil)))
(insn 30 29 31 5 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:89 -1
     (nil))
(insn 31 30 32 5 (set (reg/f:SI 95 [ D.21518 ])
        (mem/f/j:SI (reg/f:SI 119) [0 this_8(D)->source+0 S4 A32])) ..\Str\str.cpp:89 -1
     (nil))
(insn 32 31 33 5 (set (reg:SI 96 [ D.21517 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:89 -1
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg/f:SI 97 [ D.21518 ])
                (plus:SI (reg/f:SI 95 [ D.21518 ])
                    (reg:SI 96 [ D.21517 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:89 -1
     (nil))
(insn 34 33 35 5 (set (reg:QI 98 [ D.21519 ])
        (mem:QI (reg/f:SI 97 [ D.21518 ]) [0 *_24+0 S1 A8])) ..\Str\str.cpp:89 -1
     (nil))
(insn 35 34 36 5 (set (mem:QI (reg/f:SI 94 [ D.21518 ]) [0 *_21+0 S1 A8])
        (reg:QI 98 [ D.21519 ])) ..\Str\str.cpp:89 -1
     (nil))
(insn 36 35 38 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:88 -1
     (nil))
(jump_insn 38 36 39 5 (set (pc)
        (label_ref 37)) ..\Str\str.cpp:88 -1
     (nil)
 -> 37)
;;  succ:       4 (DFS_BACK)

(barrier 39 38 40)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 40 39 41 6 40 "" [1 uses])
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:90 -1
     (nil))
(insn 43 42 44 6 (set (reg:SI 121)
        (mem/j:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])) ..\Str\str.cpp:90 -1
     (nil))
(insn 44 43 45 6 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])
        (reg:SI 121)) ..\Str\str.cpp:90 -1
     (nil))
(insn 45 44 62 6 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:90 -1
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
;;              8 (DFS_BACK)
(code_label 62 45 46 7 43 "" [1 uses])
(note 46 62 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg:SI 122)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])) ..\Str\str.cpp:90 -1
     (nil))
(insn 48 47 49 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 122)
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 sz+0 S4 A32]))) ..\Str\str.cpp:90 -1
     (nil))
(jump_insn 49 48 50 7 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) ..\Str\str.cpp:90 -1
     (nil)
 -> 65)
;;  succ:       9
;;              8 (FALLTHRU)

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (set (reg:SI 99 [ D.21517 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])) ..\Str\str.cpp:91 -1
     (nil))
(insn 52 51 53 8 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])) ..\Str\str.cpp:91 -1
     (nil))
(insn 53 52 54 8 (parallel [
            (set (reg/f:SI 100 [ D.21518 ])
                (plus:SI (reg:SI 99 [ D.21517 ])
                    (reg/f:SI 123)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:91 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])
            (reg:SI 99 [ D.21517 ]))
        (nil)))
(insn 54 53 55 8 (set (reg/f:SI 124)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:91 -1
     (nil))
(insn 55 54 56 8 (set (reg/f:SI 101 [ D.21518 ])
        (mem/f/j:SI (reg/f:SI 124) [0 right_10(D)->source+0 S4 A32])) ..\Str\str.cpp:91 -1
     (nil))
(insn 56 55 57 8 (set (reg:SI 102 [ D.21517 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ..\Str\str.cpp:91 -1
     (nil))
(insn 57 56 58 8 (parallel [
            (set (reg/f:SI 103 [ D.21518 ])
                (plus:SI (reg/f:SI 101 [ D.21518 ])
                    (reg:SI 102 [ D.21517 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:91 -1
     (nil))
(insn 58 57 59 8 (set (reg:QI 104 [ D.21519 ])
        (mem:QI (reg/f:SI 103 [ D.21518 ]) [0 *_34+0 S1 A8])) ..\Str\str.cpp:91 -1
     (nil))
(insn 59 58 60 8 (set (mem:QI (reg/f:SI 100 [ D.21518 ]) [0 *_31+0 S1 A8])
        (reg:QI 104 [ D.21519 ])) ..\Str\str.cpp:91 -1
     (nil))
(insn 60 59 61 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:90 -1
     (nil))
(insn 61 60 63 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:90 -1
     (nil))
(jump_insn 63 61 64 8 (set (pc)
        (label_ref 62)) ..\Str\str.cpp:90 -1
     (nil)
 -> 62)
;;  succ:       7 (DFS_BACK)

(barrier 64 63 65)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 65 64 66 9 42 "" [1 uses])
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:93 -1
     (nil))
(insn 68 67 69 9 (set (reg:SI 105 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 125)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])) ..\Str\str.cpp:93 -1
     (nil))
(insn 69 68 70 9 (set (reg/f:SI 126)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:93 -1
     (nil))
(insn 70 69 71 9 (set (reg:SI 106 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 126)
                (const_int 4 [0x4])) [0 right_10(D)->size+0 S4 A32])) ..\Str\str.cpp:93 -1
     (nil))
(insn 71 70 72 9 (parallel [
            (set (reg:SI 107 [ D.21516 ])
                (plus:SI (reg:SI 105 [ D.21516 ])
                    (reg:SI 106 [ D.21516 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:93 -1
     (nil))
(insn 72 71 73 9 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:93 -1
     (nil))
(insn 73 72 74 9 (set (mem/j:SI (plus:SI (reg/f:SI 127)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])
        (reg:SI 107 [ D.21516 ])) ..\Str\str.cpp:93 -1
     (nil))
(insn 74 73 75 9 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:94 -1
     (nil))
(insn 75 74 76 9 (set (reg/f:SI 108 [ D.21518 ])
        (mem/f/j:SI (reg/f:SI 128) [0 this_8(D)->source+0 S4 A32])) ..\Str\str.cpp:94 -1
     (nil))
(insn 76 75 77 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 108 [ D.21518 ])
            (const_int 0 [0]))) ..\Str\str.cpp:94 -1
     (nil))
(jump_insn 77 76 78 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) ..\Str\str.cpp:94 -1
     (nil)
 -> 83)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 78 77 79 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 10 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:94 -1
     (nil))
(insn 80 79 81 10 (set (reg/f:SI 109 [ D.21518 ])
        (mem/f/j:SI (reg/f:SI 129) [0 this_8(D)->source+0 S4 A32])) ..\Str\str.cpp:94 -1
     (nil))
(insn 81 80 82 10 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 109 [ D.21518 ])) ..\Str\str.cpp:94 -1
     (nil))
(call_insn 82 81 83 10 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:94 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU)
(code_label 83 82 84 11 44 "" [1 uses])
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 11 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:95 -1
     (nil))
(insn 86 85 87 11 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])) ..\Str\str.cpp:95 -1
     (nil))
(insn 87 86 88 11 (set (mem/f/j:SI (reg/f:SI 130) [0 this_8(D)->source+0 S4 A32])
        (reg/f:SI 131)) ..\Str\str.cpp:95 -1
     (nil))
(insn 88 87 91 11 (set (reg/f:SI 110 [ D.21520 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:97 -1
     (nil))
(insn 91 88 95 11 (set (reg:SI 111 [ <retval> ])
        (reg/f:SI 110 [ D.21520 ])) ..\Str\str.cpp:97 -1
     (nil))
(insn 95 91 96 11 (set (reg/i:SI 0 ax)
        (reg:SI 111 [ <retval> ])) ..\Str\str.cpp:98 -1
     (nil))
(insn 96 95 0 11 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:98 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Str& Str::operator+=(char) (_ZN3StrpLEc, funcdef_no=1026, decl_uid=20910, cgraph_uid=203, symbol_order=204)

Str& Str::operator+=(char) (struct Str * const this, const char right)
{
  unsigned char * D.21310;
  int i;
  unsigned char * ts;
  int sz;
  struct Str & D.21308;
  unsigned char * D.21307;
  sizetype D.21306;
  int D.21305;
  unsigned char * D.21304;
  unsigned char * D.21301;
  unsigned char * D.21298;
  unsigned char * D.21295;
  int D.21294;
  int D.21293;
  unsigned char right.20;
  unsigned char * D.21291;
  sizetype D.21290;
  int D.21289;
  unsigned char D.21288;
  unsigned char * D.21287;
  sizetype i.19;
  unsigned char * D.21285;
  unsigned char * D.21284;
  sizetype i.18;
  int D.21281;
  sizetype D.21279;
  int D.21278;
  int D.21277;
  int _6;
  int _8;
  sizetype _9;
  unsigned char * _11;
  int _14;
  sizetype i.18_15;
  unsigned char * _16;
  unsigned char * _17;
  sizetype i.19_18;
  unsigned char * _19;
  unsigned char _20;
  int _23;
  sizetype _24;
  unsigned char * _25;
  unsigned char right.20_27;
  int _29;
  int _30;
  unsigned char * _32;
  unsigned char * _33;
  unsigned char * _34;
  unsigned char * _37;
  int _38;
  sizetype _39;
  unsigned char * _40;
  struct Str & _42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _6 = this_5(D)->size;
  sz_7 = _6 + 1;
  _8 = sz_7 + 1;
  _9 = (sizetype) _8;
  _11 = operator new [] (_9);
  ts_12 = _11;
  i_13 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                4
  # i_1 = PHI <i_13(2), i_22(4)>
  _14 = this_5(D)->size;
  if (_14 <= i_1)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i.18_15 = (sizetype) i_1;
  _16 = ts_12 + i.18_15;
  _17 = this_5(D)->source;
  i.19_18 = (sizetype) i_1;
  _19 = _17 + i.19_18;
  _20 = *_19;
  *_16 = _20;
  i_22 = i_1 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
  _23 = this_5(D)->size;
  _24 = (sizetype) _23;
  _25 = ts_12 + _24;
  right.20_27 = (unsigned char) right_26(D);
  *_25 = right.20_27;
  _29 = this_5(D)->size;
  _30 = _29 + 1;
  this_5(D)->size = _30;
  _32 = this_5(D)->source;
  if (_32 != 0B)
    goto <bb 6>;
  else
    goto <bb 8>;
;;    succ:       6
;;                8

;;   basic block 6, loop depth 0
;;    pred:       5
  _33 = this_5(D)->source;
  if (_33 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _34 = this_5(D)->source;
  operator delete [] (_34);
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       5
;;                7
;;                6
  this_5(D)->source = ts_12;
  _37 = this_5(D)->source;
  _38 = this_5(D)->size;
  _39 = (sizetype) _38;
  _40 = _37 + _39;
  *_40 = 0;
  _42 = this_5(D);
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L9>:
  return _42;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 5 (this_5(D) - 5 )
Partition 6 (_6 - 6 )
Partition 7 (sz_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 11 (_11 - 11 )
Partition 12 (ts_12 - 12 )
Partition 13 (i_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (i.18_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (i.19_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 22 (i_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (right_26(D) - 26 )
Partition 27 (right.20_27 - 27 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 42 (_42 - 42 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (this_5(D) - 5 )
Partition 2 (i_13 - 13 )
Partition 3 (i_22 - 22 )
Partition 4 (right_26(D) - 26 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_22
(2147483646) i_1 <-> i_13

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (this_5(D) - 5 )
Partition 2 (i_13 - 13 )
Partition 3 (i_22 - 22 )
Partition 4 (right_26(D) - 26 )

Coalesce list: (1)i_1 & (22)i_22 [map: 0, 3] : Success -> 0
Coalesce list: (1)i_1 & (13)i_13 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (22)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (13)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 13 22 )
Partition 1 (this_5(D) - 5 )
Partition 2 (_6 - 6 )
Partition 3 (sz_7 - 7 )
Partition 4 (_8 - 8 )
Partition 5 (_9 - 9 )
Partition 6 (_11 - 11 )
Partition 7 (ts_12 - 12 )
Partition 8 (_14 - 14 )
Partition 9 (i.18_15 - 15 )
Partition 10 (_16 - 16 )
Partition 11 (_17 - 17 )
Partition 12 (i.19_18 - 18 )
Partition 13 (_19 - 19 )
Partition 14 (_20 - 20 )
Partition 15 (_23 - 23 )
Partition 16 (_24 - 24 )
Partition 17 (_25 - 25 )
Partition 18 (right_26(D) - 26 )
Partition 19 (right.20_27 - 27 )
Partition 20 (_29 - 29 )
Partition 21 (_30 - 30 )
Partition 22 (_32 - 32 )
Partition 23 (_33 - 33 )
Partition 24 (_34 - 34 )
Partition 25 (_37 - 37 )
Partition 26 (_38 - 38 )
Partition 27 (_39 - 39 )
Partition 28 (_40 - 40 )
Partition 29 (_42 - 42 )

Str& Str::operator+=(char) (struct Str * const this, const char right)
{
  unsigned char * D.21310;
  int i;
  unsigned char * ts;
  int sz;
  struct Str & D.21308;
  unsigned char * D.21307;
  sizetype D.21306;
  int D.21305;
  unsigned char * D.21304;
  unsigned char * D.21301;
  unsigned char * D.21298;
  unsigned char * D.21295;
  int D.21294;
  int D.21293;
  unsigned char right.20;
  unsigned char * D.21291;
  sizetype D.21290;
  int D.21289;
  unsigned char D.21288;
  unsigned char * D.21287;
  sizetype i.19;
  unsigned char * D.21285;
  unsigned char * D.21284;
  sizetype i.18;
  int D.21281;
  sizetype D.21279;
  int D.21278;
  int D.21277;
  int _6;
  int _8;
  sizetype _9;
  unsigned char * _11;
  int _14;
  sizetype i.18_15;
  unsigned char * _16;
  unsigned char * _17;
  sizetype i.19_18;
  unsigned char * _19;
  unsigned char _20;
  int _23;
  sizetype _24;
  unsigned char * _25;
  unsigned char right.20_27;
  int _29;
  int _30;
  unsigned char * _32;
  unsigned char * _33;
  unsigned char * _34;
  unsigned char * _37;
  int _38;
  sizetype _39;
  unsigned char * _40;
  struct Str & _42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _6 = this_5(D)->size;
  sz_7 = _6 + 1;
  _8 = sz_7 + 1;
  _9 = (sizetype) _8;
  _11 = operator new [] (_9);
  ts_12 = _11;
  i_13 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                4
  # i_1 = PHI <i_13(2), i_22(4)>
  _14 = this_5(D)->size;
  if (_14 <= i_1)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i.18_15 = (sizetype) i_1;
  _16 = ts_12 + i.18_15;
  _17 = this_5(D)->source;
  i.19_18 = (sizetype) i_1;
  _19 = _17 + i.19_18;
  _20 = *_19;
  *_16 = _20;
  i_22 = i_1 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
  _23 = this_5(D)->size;
  _24 = (sizetype) _23;
  _25 = ts_12 + _24;
  right.20_27 = (unsigned char) right_26(D);
  *_25 = right.20_27;
  _29 = this_5(D)->size;
  _30 = _29 + 1;
  this_5(D)->size = _30;
  _32 = this_5(D)->source;
  if (_32 != 0B)
    goto <bb 6>;
  else
    goto <bb 8>;
;;    succ:       6
;;                8

;;   basic block 6, loop depth 0
;;    pred:       5
  _33 = this_5(D)->source;
  if (_33 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _34 = this_5(D)->source;
  operator delete [] (_34);
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       5
;;                7
;;                6
  this_5(D)->source = ts_12;
  _37 = this_5(D)->source;
  _38 = this_5(D)->size;
  _39 = (sizetype) _38;
  _40 = _37 + _39;
  *_40 = 0;
  _42 = this_5(D);
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L9>:
  return _42;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _6 = this_5(D)->size;

(insn 8 7 9 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:102 -1
     (nil))

(insn 9 8 0 (set (reg:SI 87 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:102 -1
     (nil))

;; sz_7 = _6 + 1;

(insn 10 9 11 (parallel [
            (set (reg:SI 115)
                (plus:SI (reg:SI 87 [ D.21521 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:102 -1
     (nil))

(insn 11 10 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 sz+0 S4 A32])
        (reg:SI 115)) ..\Str\str.cpp:102 -1
     (nil))

;; _8 = sz_7 + 1;

(insn 12 11 13 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 sz+0 S4 A32])) ..\Str\str.cpp:103 -1
     (nil))

(insn 13 12 0 (parallel [
            (set (reg:SI 88 [ D.21521 ])
                (plus:SI (reg:SI 116)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:103 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 sz+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _9 = (sizetype) _8;

(insn 14 13 0 (set (reg:SI 89 [ D.21522 ])
        (reg:SI 88 [ D.21521 ])) ..\Str\str.cpp:103 -1
     (nil))

;; _11 = operator new [] (_9);

(insn 15 14 16 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 89 [ D.21522 ])) ..\Str\str.cpp:103 -1
     (nil))

(call_insn 16 15 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:103 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 17 16 18 (set (reg/f:SI 117)
        (reg:SI 0 ax)) ..\Str\str.cpp:103 -1
     (expr_list:REG_NOALIAS (reg/f:SI 117)
        (nil)))

(insn 18 17 0 (set (reg/f:SI 90 [ D.21523 ])
        (reg/f:SI 117)) ..\Str\str.cpp:103 -1
     (nil))

;; ts_12 = _11;

(insn 19 18 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])
        (reg/f:SI 90 [ D.21523 ])) ..\Str\str.cpp:103 -1
     (nil))

;; i_13 = 0;

(insn 20 19 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:105 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _14 = this_5(D)->size;

(insn 22 21 23 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:105 -1
     (nil))

(insn 23 22 0 (set (reg:SI 91 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 118)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:105 -1
     (nil))

;; if (_14 <= i_1)

(insn 24 23 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91 [ D.21521 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:105 -1
     (nil))

(jump_insn 25 24 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:105 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _15 = (sizetype) i_1;

(insn 27 26 0 (set (reg:SI 92 [ D.21522 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:106 -1
     (nil))

;; _16 = ts_12 + _15;

(insn 28 27 29 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])) ..\Str\str.cpp:106 -1
     (nil))

(insn 29 28 0 (parallel [
            (set (reg/f:SI 93 [ D.21523 ])
                (plus:SI (reg:SI 92 [ D.21522 ])
                    (reg/f:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:106 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])
            (reg:SI 92 [ D.21522 ]))
        (nil)))

;; _17 = this_5(D)->source;

(insn 30 29 31 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:106 -1
     (nil))

(insn 31 30 0 (set (reg/f:SI 94 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 120) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:106 -1
     (nil))

;; _18 = (sizetype) i_1;

(insn 32 31 0 (set (reg:SI 95 [ D.21522 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:106 -1
     (nil))

;; _19 = _17 + _18;

(insn 33 32 0 (parallel [
            (set (reg/f:SI 96 [ D.21523 ])
                (plus:SI (reg/f:SI 94 [ D.21523 ])
                    (reg:SI 95 [ D.21522 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:106 -1
     (nil))

;; _20 = *_19;

(insn 34 33 0 (set (reg:QI 97 [ D.21524 ])
        (mem:QI (reg/f:SI 96 [ D.21523 ]) [0 *_19+0 S1 A8])) ..\Str\str.cpp:106 -1
     (nil))

;; *_16 = _20;

(insn 35 34 0 (set (mem:QI (reg/f:SI 93 [ D.21523 ]) [0 *_16+0 S1 A8])
        (reg:QI 97 [ D.21524 ])) ..\Str\str.cpp:106 -1
     (nil))

;; i_22 = i_1 + 1;

(insn 36 35 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:105 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 40 39 41 47 "" [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; _23 = this_5(D)->size;

(insn 42 41 43 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:107 -1
     (nil))

(insn 43 42 0 (set (reg:SI 98 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 121)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:107 -1
     (nil))

;; _24 = (sizetype) _23;

(insn 44 43 0 (set (reg:SI 99 [ D.21522 ])
        (reg:SI 98 [ D.21521 ])) ..\Str\str.cpp:107 -1
     (nil))

;; _25 = ts_12 + _24;

(insn 45 44 46 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])) ..\Str\str.cpp:107 -1
     (nil))

(insn 46 45 0 (parallel [
            (set (reg/f:SI 100 [ D.21523 ])
                (plus:SI (reg:SI 99 [ D.21522 ])
                    (reg/f:SI 122)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:107 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])
            (reg:SI 99 [ D.21522 ]))
        (nil)))

;; _27 = (unsigned char) right_26(D);

(insn 47 46 0 (set (reg:QI 101 [ D.21524 ])
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 right+0 S1 A32])) ..\Str\str.cpp:107 -1
     (nil))

;; *_25 = _27;

(insn 48 47 0 (set (mem:QI (reg/f:SI 100 [ D.21523 ]) [0 *_25+0 S1 A8])
        (reg:QI 101 [ D.21524 ])) ..\Str\str.cpp:107 -1
     (nil))

;; _29 = this_5(D)->size;

(insn 49 48 50 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:109 -1
     (nil))

(insn 50 49 0 (set (reg:SI 102 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 123)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:109 -1
     (nil))

;; _30 = _29 + 1;

(insn 51 50 0 (parallel [
            (set (reg:SI 103 [ D.21521 ])
                (plus:SI (reg:SI 102 [ D.21521 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:109 -1
     (nil))

;; this_5(D)->size = _30;

(insn 52 51 53 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:109 -1
     (nil))

(insn 53 52 0 (set (mem/j:SI (plus:SI (reg/f:SI 124)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])
        (reg:SI 103 [ D.21521 ])) ..\Str\str.cpp:109 -1
     (nil))

;; _32 = this_5(D)->source;

(insn 54 53 55 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:110 -1
     (nil))

(insn 55 54 0 (set (reg/f:SI 104 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 125) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:110 -1
     (nil))

;; if (_32 != 0B)

(insn 56 55 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 104 [ D.21523 ])
            (const_int 0 [0]))) ..\Str\str.cpp:110 -1
     (nil))

(jump_insn 57 56 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:110 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _33 = this_5(D)->source;

(insn 59 58 60 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:111 -1
     (nil))

(insn 60 59 0 (set (reg/f:SI 105 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 126) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:111 -1
     (nil))

;; if (_33 != 0B)

(insn 61 60 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 105 [ D.21523 ])
            (const_int 0 [0]))) ..\Str\str.cpp:111 -1
     (nil))

(jump_insn 62 61 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:111 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _34 = this_5(D)->source;

(insn 64 63 65 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:111 -1
     (nil))

(insn 65 64 0 (set (reg/f:SI 106 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 127) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:111 -1
     (nil))

;; operator delete [] (_34);

(insn 66 65 67 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 106 [ D.21523 ])) ..\Str\str.cpp:111 -1
     (nil))

(call_insn 67 66 0 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:111 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; Generating RTL for gimple basic block 8

;; 

(code_label 68 67 69 49 "" [0 uses])

(note 69 68 0 NOTE_INSN_BASIC_BLOCK)

;; this_5(D)->source = ts_12;

(insn 70 69 71 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:112 -1
     (nil))

(insn 71 70 72 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])) ..\Str\str.cpp:112 -1
     (nil))

(insn 72 71 0 (set (mem/f/j:SI (reg/f:SI 128) [0 this_5(D)->source+0 S4 A32])
        (reg/f:SI 129)) ..\Str\str.cpp:112 -1
     (nil))

;; _37 = this_5(D)->source;

(insn 73 72 74 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:113 -1
     (nil))

(insn 74 73 0 (set (reg/f:SI 107 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 130) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:113 -1
     (nil))

;; _38 = this_5(D)->size;

(insn 75 74 76 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:113 -1
     (nil))

(insn 76 75 0 (set (reg:SI 108 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 131)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:113 -1
     (nil))

;; _39 = (sizetype) _38;

(insn 77 76 0 (set (reg:SI 109 [ D.21522 ])
        (reg:SI 108 [ D.21521 ])) ..\Str\str.cpp:113 -1
     (nil))

;; _40 = _37 + _39;

(insn 78 77 0 (parallel [
            (set (reg/f:SI 110 [ D.21523 ])
                (plus:SI (reg/f:SI 107 [ D.21523 ])
                    (reg:SI 109 [ D.21522 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:113 -1
     (nil))

;; *_40 = 0;

(insn 79 78 0 (set (mem:QI (reg/f:SI 110 [ D.21523 ]) [0 *_40+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:113 -1
     (nil))

;; _42 = this_5(D);

(insn 80 79 0 (set (reg/f:SI 111 [ D.21525 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:114 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; <L9>:

(code_label 81 80 82 50 "" [0 uses])

(note 82 81 0 NOTE_INSN_BASIC_BLOCK)

;; return _42;

(insn 83 82 84 (set (reg:SI 112 [ <retval> ])
        (reg/f:SI 111 [ D.21525 ])) ..\Str\str.cpp:114 -1
     (nil))

(jump_insn 84 83 85 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:114 -1
     (nil))

(barrier 85 84 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Removing jump 84.
Merging block 11 into block 9...
Merged blocks 9 and 11.
Merged 9 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:101 -1
     (nil))
(insn 3 2 4 2 (set (reg:SI 113)
        (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:101 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 right+0 S1 A32])
        (subreg:QI (reg:SI 113) 0)) ..\Str\str.cpp:101 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:102 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 87 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:102 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 115)
                (plus:SI (reg:SI 87 [ D.21521 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:102 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 sz+0 S4 A32])
        (reg:SI 115)) ..\Str\str.cpp:102 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 sz+0 S4 A32])) ..\Str\str.cpp:103 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 88 [ D.21521 ])
                (plus:SI (reg:SI 116)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:103 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 sz+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 14 13 15 2 (set (reg:SI 89 [ D.21522 ])
        (reg:SI 88 [ D.21521 ])) ..\Str\str.cpp:103 -1
     (nil))
(insn 15 14 16 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 89 [ D.21522 ])) ..\Str\str.cpp:103 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:103 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 17 16 18 2 (set (reg/f:SI 117)
        (reg:SI 0 ax)) ..\Str\str.cpp:103 -1
     (expr_list:REG_NOALIAS (reg/f:SI 117)
        (nil)))
(insn 18 17 19 2 (set (reg/f:SI 90 [ D.21523 ])
        (reg/f:SI 117)) ..\Str\str.cpp:103 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])
        (reg/f:SI 90 [ D.21523 ])) ..\Str\str.cpp:103 -1
     (nil))
(insn 20 19 37 2 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:105 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              5 (DFS_BACK)
(code_label 37 20 21 4 48 "" [1 uses])
(note 21 37 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:105 -1
     (nil))
(insn 23 22 24 4 (set (reg:SI 91 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 118)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:105 -1
     (nil))
(insn 24 23 25 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91 [ D.21521 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:105 -1
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) ..\Str\str.cpp:105 -1
     (nil)
 -> 40)
;;  succ:       6
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg:SI 92 [ D.21522 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:106 -1
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])) ..\Str\str.cpp:106 -1
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg/f:SI 93 [ D.21523 ])
                (plus:SI (reg:SI 92 [ D.21522 ])
                    (reg/f:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:106 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])
            (reg:SI 92 [ D.21522 ]))
        (nil)))
(insn 30 29 31 5 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:106 -1
     (nil))
(insn 31 30 32 5 (set (reg/f:SI 94 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 120) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:106 -1
     (nil))
(insn 32 31 33 5 (set (reg:SI 95 [ D.21522 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:106 -1
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg/f:SI 96 [ D.21523 ])
                (plus:SI (reg/f:SI 94 [ D.21523 ])
                    (reg:SI 95 [ D.21522 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:106 -1
     (nil))
(insn 34 33 35 5 (set (reg:QI 97 [ D.21524 ])
        (mem:QI (reg/f:SI 96 [ D.21523 ]) [0 *_19+0 S1 A8])) ..\Str\str.cpp:106 -1
     (nil))
(insn 35 34 36 5 (set (mem:QI (reg/f:SI 93 [ D.21523 ]) [0 *_16+0 S1 A8])
        (reg:QI 97 [ D.21524 ])) ..\Str\str.cpp:106 -1
     (nil))
(insn 36 35 38 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:105 -1
     (nil))
(jump_insn 38 36 39 5 (set (pc)
        (label_ref 37)) ..\Str\str.cpp:105 -1
     (nil)
 -> 37)
;;  succ:       4 (DFS_BACK)

(barrier 39 38 40)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 40 39 41 6 47 "" [1 uses])
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:107 -1
     (nil))
(insn 43 42 44 6 (set (reg:SI 98 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 121)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:107 -1
     (nil))
(insn 44 43 45 6 (set (reg:SI 99 [ D.21522 ])
        (reg:SI 98 [ D.21521 ])) ..\Str\str.cpp:107 -1
     (nil))
(insn 45 44 46 6 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])) ..\Str\str.cpp:107 -1
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg/f:SI 100 [ D.21523 ])
                (plus:SI (reg:SI 99 [ D.21522 ])
                    (reg/f:SI 122)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:107 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])
            (reg:SI 99 [ D.21522 ]))
        (nil)))
(insn 47 46 48 6 (set (reg:QI 101 [ D.21524 ])
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 right+0 S1 A32])) ..\Str\str.cpp:107 -1
     (nil))
(insn 48 47 49 6 (set (mem:QI (reg/f:SI 100 [ D.21523 ]) [0 *_25+0 S1 A8])
        (reg:QI 101 [ D.21524 ])) ..\Str\str.cpp:107 -1
     (nil))
(insn 49 48 50 6 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:109 -1
     (nil))
(insn 50 49 51 6 (set (reg:SI 102 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 123)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:109 -1
     (nil))
(insn 51 50 52 6 (parallel [
            (set (reg:SI 103 [ D.21521 ])
                (plus:SI (reg:SI 102 [ D.21521 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:109 -1
     (nil))
(insn 52 51 53 6 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:109 -1
     (nil))
(insn 53 52 54 6 (set (mem/j:SI (plus:SI (reg/f:SI 124)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])
        (reg:SI 103 [ D.21521 ])) ..\Str\str.cpp:109 -1
     (nil))
(insn 54 53 55 6 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:110 -1
     (nil))
(insn 55 54 56 6 (set (reg/f:SI 104 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 125) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:110 -1
     (nil))
(insn 56 55 57 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 104 [ D.21523 ])
            (const_int 0 [0]))) ..\Str\str.cpp:110 -1
     (nil))
(jump_insn 57 56 58 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) ..\Str\str.cpp:110 -1
     (nil)
 -> 68)
;;  succ:       7 (FALLTHRU)
;;              9

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 7 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:111 -1
     (nil))
(insn 60 59 61 7 (set (reg/f:SI 105 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 126) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:111 -1
     (nil))
(insn 61 60 62 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 105 [ D.21523 ])
            (const_int 0 [0]))) ..\Str\str.cpp:111 -1
     (nil))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) ..\Str\str.cpp:111 -1
     (nil)
 -> 68)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:111 -1
     (nil))
(insn 65 64 66 8 (set (reg/f:SI 106 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 127) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:111 -1
     (nil))
(insn 66 65 67 8 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 106 [ D.21523 ])) ..\Str\str.cpp:111 -1
     (nil))
(call_insn 67 66 68 8 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:111 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              8 (FALLTHRU)
;;              7
(code_label 68 67 69 9 49 "" [2 uses])
(note 69 68 70 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 9 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:112 -1
     (nil))
(insn 71 70 72 9 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])) ..\Str\str.cpp:112 -1
     (nil))
(insn 72 71 73 9 (set (mem/f/j:SI (reg/f:SI 128) [0 this_5(D)->source+0 S4 A32])
        (reg/f:SI 129)) ..\Str\str.cpp:112 -1
     (nil))
(insn 73 72 74 9 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:113 -1
     (nil))
(insn 74 73 75 9 (set (reg/f:SI 107 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 130) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:113 -1
     (nil))
(insn 75 74 76 9 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:113 -1
     (nil))
(insn 76 75 77 9 (set (reg:SI 108 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 131)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:113 -1
     (nil))
(insn 77 76 78 9 (set (reg:SI 109 [ D.21522 ])
        (reg:SI 108 [ D.21521 ])) ..\Str\str.cpp:113 -1
     (nil))
(insn 78 77 79 9 (parallel [
            (set (reg/f:SI 110 [ D.21523 ])
                (plus:SI (reg/f:SI 107 [ D.21523 ])
                    (reg:SI 109 [ D.21522 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:113 -1
     (nil))
(insn 79 78 80 9 (set (mem:QI (reg/f:SI 110 [ D.21523 ]) [0 *_40+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:113 -1
     (nil))
(insn 80 79 83 9 (set (reg/f:SI 111 [ D.21525 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:114 -1
     (nil))
(insn 83 80 87 9 (set (reg:SI 112 [ <retval> ])
        (reg/f:SI 111 [ D.21525 ])) ..\Str\str.cpp:114 -1
     (nil))
(insn 87 83 88 9 (set (reg/i:SI 0 ax)
        (reg:SI 112 [ <retval> ])) ..\Str\str.cpp:115 -1
     (nil))
(insn 88 87 0 9 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:115 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Str& Str::operator=(const char*) (_ZN3StraSEPKc, funcdef_no=1027, decl_uid=20898, cgraph_uid=204, symbol_order=205)

Str& Str::operator=(const char*) (struct Str * const this, const char * right)
{
  void * D.21344;
  int i;
  struct Str & D.21342;
  unsigned char * D.21341;
  sizetype D.21340;
  int D.21339;
  unsigned char * D.21338;
  unsigned char D.21337;
  char D.21336;
  const char * D.21335;
  sizetype i.22;
  unsigned char * D.21333;
  sizetype i.21;
  unsigned char * D.21331;
  int D.21329;
  void * D.21327;
  sizetype D.21326;
  int D.21325;
  int D.21324;
  int D.21323;
  int D.21322;
  char D.21320;
  const char * D.21319;
  sizetype D.21318;
  int D.21317;
  unsigned char * D.21314;
  unsigned char * D.21311;
  unsigned char * _7;
  unsigned char * _8;
  int _11;
  sizetype _12;
  const char * _14;
  char _15;
  int _16;
  int _17;
  int _19;
  int _20;
  sizetype _21;
  void * _23;
  void * _24;
  int _27;
  unsigned char * _28;
  sizetype i.21_29;
  unsigned char * _30;
  sizetype i.22_31;
  const char * _32;
  char _33;
  unsigned char _34;
  unsigned char * _37;
  int _38;
  sizetype _39;
  unsigned char * _40;
  struct Str & _42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _7 = this_6(D)->source;
  if (_7 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _8 = this_6(D)->source;
  operator delete [] (_8);
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  this_6(D)->size = 0;
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       4
;;                6
  _11 = this_6(D)->size;
  _12 = (sizetype) _11;
  _14 = right_13(D) + _12;
  _15 = *_14;
  if (_15 == 0)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  _16 = this_6(D)->size;
  _17 = _16 + 1;
  this_6(D)->size = _17;
  goto <bb 5>;
;;    succ:       5

;;   basic block 7, loop depth 0
;;    pred:       5
  _19 = this_6(D)->size;
  _20 = _19 + 1;
  _21 = (sizetype) _20;
  _23 = operator new [] (_21);
  _24 = _23;
  this_6(D)->source = _24;
  i_26 = 0;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       7
;;                9
  # i_1 = PHI <i_26(7), i_36(9)>
  _27 = this_6(D)->size;
  if (_27 <= i_1)
    goto <bb 10>;
  else
    goto <bb 9>;
;;    succ:       10
;;                9

;;   basic block 9, loop depth 1
;;    pred:       8
  _28 = this_6(D)->source;
  i.21_29 = (sizetype) i_1;
  _30 = _28 + i.21_29;
  i.22_31 = (sizetype) i_1;
  _32 = right_13(D) + i.22_31;
  _33 = *_32;
  _34 = (unsigned char) _33;
  *_30 = _34;
  i_36 = i_1 + 1;
  goto <bb 8>;
;;    succ:       8

;;   basic block 10, loop depth 0
;;    pred:       8
  _37 = this_6(D)->source;
  _38 = this_6(D)->size;
  _39 = (sizetype) _38;
  _40 = _37 + _39;
  *_40 = 0;
  _42 = this_6(D);
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
<L9>:
  return _42;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 6 (this_6(D) - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (right_13(D) - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 26 (i_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (i.21_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (i.22_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 36 (i_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 42 (_42 - 42 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (this_6(D) - 6 )
Partition 2 (right_13(D) - 13 )
Partition 3 (_23 - 23 )
Partition 4 (_24 - 24 )
Partition 5 (i_26 - 26 )
Partition 6 (i_36 - 36 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_26
(2147483646) i_1 <-> i_36
(1) _23 <-> _24

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (this_6(D) - 6 )
Partition 2 (right_13(D) - 13 )
Partition 3 (_23 - 23 )
Partition 4 (_24 - 24 )
Partition 5 (i_26 - 26 )
Partition 6 (i_36 - 36 )

Coalesce list: (1)i_1 & (26)i_26 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (36)i_36 [map: 0, 6] : Success -> 0
Coalesce list: (23)_23 & (24)_24 [map: 3, 4] : Success -> 3
Coalesce list: (1)i_1 & (36)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (26)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 26 36 )
Partition 1 (this_6(D) - 6 )
Partition 2 (_7 - 7 )
Partition 3 (_8 - 8 )
Partition 4 (_11 - 11 )
Partition 5 (_12 - 12 )
Partition 6 (right_13(D) - 13 )
Partition 7 (_14 - 14 )
Partition 8 (_15 - 15 )
Partition 9 (_16 - 16 )
Partition 10 (_17 - 17 )
Partition 11 (_19 - 19 )
Partition 12 (_20 - 20 )
Partition 13 (_21 - 21 )
Partition 14 (_23 - 23 24 )
Partition 15 (_27 - 27 )
Partition 16 (_28 - 28 )
Partition 17 (i.21_29 - 29 )
Partition 18 (_30 - 30 )
Partition 19 (i.22_31 - 31 )
Partition 20 (_32 - 32 )
Partition 21 (_33 - 33 )
Partition 22 (_34 - 34 )
Partition 23 (_37 - 37 )
Partition 24 (_38 - 38 )
Partition 25 (_39 - 39 )
Partition 26 (_40 - 40 )
Partition 27 (_42 - 42 )

Str& Str::operator=(const char*) (struct Str * const this, const char * right)
{
  void * D.21344;
  int i;
  struct Str & D.21342;
  unsigned char * D.21341;
  sizetype D.21340;
  int D.21339;
  unsigned char * D.21338;
  unsigned char D.21337;
  char D.21336;
  const char * D.21335;
  sizetype i.22;
  unsigned char * D.21333;
  sizetype i.21;
  unsigned char * D.21331;
  int D.21329;
  void * D.21327;
  sizetype D.21326;
  int D.21325;
  int D.21324;
  int D.21323;
  int D.21322;
  char D.21320;
  const char * D.21319;
  sizetype D.21318;
  int D.21317;
  unsigned char * D.21314;
  unsigned char * D.21311;
  unsigned char * _7;
  unsigned char * _8;
  int _11;
  sizetype _12;
  const char * _14;
  char _15;
  int _16;
  int _17;
  int _19;
  int _20;
  sizetype _21;
  void * _23;
  void * _24;
  int _27;
  unsigned char * _28;
  sizetype i.21_29;
  unsigned char * _30;
  sizetype i.22_31;
  const char * _32;
  char _33;
  unsigned char _34;
  unsigned char * _37;
  int _38;
  sizetype _39;
  unsigned char * _40;
  struct Str & _42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _7 = this_6(D)->source;
  if (_7 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _8 = this_6(D)->source;
  operator delete [] (_8);
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  this_6(D)->size = 0;
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       4
;;                6
  _11 = this_6(D)->size;
  _12 = (sizetype) _11;
  _14 = right_13(D) + _12;
  _15 = *_14;
  if (_15 == 0)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  _16 = this_6(D)->size;
  _17 = _16 + 1;
  this_6(D)->size = _17;
  goto <bb 5>;
;;    succ:       5

;;   basic block 7, loop depth 0
;;    pred:       5
  _19 = this_6(D)->size;
  _20 = _19 + 1;
  _21 = (sizetype) _20;
  _23 = operator new [] (_21);
  _24 = _23;
  this_6(D)->source = _24;
  i_26 = 0;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       7
;;                9
  # i_1 = PHI <i_26(7), i_36(9)>
  _27 = this_6(D)->size;
  if (_27 <= i_1)
    goto <bb 10>;
  else
    goto <bb 9>;
;;    succ:       10
;;                9

;;   basic block 9, loop depth 1
;;    pred:       8
  _28 = this_6(D)->source;
  i.21_29 = (sizetype) i_1;
  _30 = _28 + i.21_29;
  i.22_31 = (sizetype) i_1;
  _32 = right_13(D) + i.22_31;
  _33 = *_32;
  _34 = (unsigned char) _33;
  *_30 = _34;
  i_36 = i_1 + 1;
  goto <bb 8>;
;;    succ:       8

;;   basic block 10, loop depth 0
;;    pred:       8
  _37 = this_6(D)->source;
  _38 = this_6(D)->size;
  _39 = (sizetype) _38;
  _40 = _37 + _39;
  *_40 = 0;
  _42 = this_6(D);
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
<L9>:
  return _42;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _7 = this_6(D)->source;

(insn 6 5 7 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:121 -1
     (nil))

(insn 7 6 0 (set (reg/f:SI 87 [ D.21526 ])
        (mem/f/j:SI (reg/f:SI 113) [0 this_6(D)->source+0 S4 A32])) ..\Str\str.cpp:121 -1
     (nil))

;; if (_7 != 0B)

(insn 8 7 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.21526 ])
            (const_int 0 [0]))) ..\Str\str.cpp:121 -1
     (nil))

(jump_insn 9 8 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:121 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _8 = this_6(D)->source;

(insn 11 10 12 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:121 -1
     (nil))

(insn 12 11 0 (set (reg/f:SI 88 [ D.21526 ])
        (mem/f/j:SI (reg/f:SI 114) [0 this_6(D)->source+0 S4 A32])) ..\Str\str.cpp:121 -1
     (nil))

;; operator delete [] (_8);

(insn 13 12 14 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 88 [ D.21526 ])) ..\Str\str.cpp:121 -1
     (nil))

(call_insn 14 13 0 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:121 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 15 14 16 52 "" [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; this_6(D)->size = 0;

(insn 17 16 18 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:122 -1
     (nil))

(insn 18 17 0 (set (mem/j:SI (plus:SI (reg/f:SI 115)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:122 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _11 = this_6(D)->size;

(insn 20 19 21 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:123 -1
     (nil))

(insn 21 20 0 (set (reg:SI 89 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 116)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:123 -1
     (nil))

;; _12 = (sizetype) _11;

(insn 22 21 0 (set (reg:SI 90 [ D.21528 ])
        (reg:SI 89 [ D.21527 ])) ..\Str\str.cpp:123 -1
     (nil))

;; _14 = right_13(D) + _12;

(insn 23 22 24 (set (reg/f:SI 117)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:123 -1
     (nil))

(insn 24 23 0 (parallel [
            (set (reg/f:SI 91 [ D.21529 ])
                (plus:SI (reg:SI 90 [ D.21528 ])
                    (reg/f:SI 117)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:123 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])
            (reg:SI 90 [ D.21528 ]))
        (nil)))

;; _15 = *_14;

(insn 25 24 0 (set (reg:QI 92 [ D.21530 ])
        (mem:QI (reg/f:SI 91 [ D.21529 ]) [0 *_14+0 S1 A8])) ..\Str\str.cpp:123 -1
     (nil))

;; if (_15 == 0)

(insn 26 25 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.21530 ])
            (const_int 0 [0]))) ..\Str\str.cpp:123 -1
     (nil))

(jump_insn 27 26 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:123 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _16 = this_6(D)->size;

(insn 29 28 30 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:123 -1
     (nil))

(insn 30 29 0 (set (reg:SI 93 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 118)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:123 -1
     (nil))

;; _17 = _16 + 1;

(insn 31 30 0 (parallel [
            (set (reg:SI 94 [ D.21527 ])
                (plus:SI (reg:SI 93 [ D.21527 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:123 -1
     (nil))

;; this_6(D)->size = _17;

(insn 32 31 33 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:123 -1
     (nil))

(insn 33 32 0 (set (mem/j:SI (plus:SI (reg/f:SI 119)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])
        (reg:SI 94 [ D.21527 ])) ..\Str\str.cpp:123 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 37 36 38 53 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; _19 = this_6(D)->size;

(insn 39 38 40 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:124 -1
     (nil))

(insn 40 39 0 (set (reg:SI 95 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:124 -1
     (nil))

;; _20 = _19 + 1;

(insn 41 40 0 (parallel [
            (set (reg:SI 96 [ D.21527 ])
                (plus:SI (reg:SI 95 [ D.21527 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:124 -1
     (nil))

;; _21 = (sizetype) _20;

(insn 42 41 0 (set (reg:SI 97 [ D.21528 ])
        (reg:SI 96 [ D.21527 ])) ..\Str\str.cpp:124 -1
     (nil))

;; _23 = operator new [] (_21);

(insn 43 42 44 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 97 [ D.21528 ])) ..\Str\str.cpp:124 -1
     (nil))

(call_insn 44 43 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:124 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 45 44 46 (set (reg/f:SI 121)
        (reg:SI 0 ax)) ..\Str\str.cpp:124 -1
     (expr_list:REG_NOALIAS (reg/f:SI 121)
        (nil)))

(insn 46 45 0 (set (reg/f:SI 98 [ D.21531 ])
        (reg/f:SI 121)) ..\Str\str.cpp:124 -1
     (nil))

;; _24 = _23;

(nil)

;; this_6(D)->source = _24;

(insn 47 46 48 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:124 -1
     (nil))

(insn 48 47 0 (set (mem/f/j:SI (reg/f:SI 122) [0 this_6(D)->source+0 S4 A32])
        (reg/f:SI 98 [ D.21531 ])) ..\Str\str.cpp:124 -1
     (nil))

;; i_26 = 0;

(insn 49 48 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:125 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _27 = this_6(D)->size;

(insn 51 50 52 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:125 -1
     (nil))

(insn 52 51 0 (set (reg:SI 99 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 123)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:125 -1
     (nil))

;; if (_27 <= i_1)

(insn 53 52 54 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 99 [ D.21527 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:125 -1
     (nil))

(jump_insn 54 53 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:125 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _28 = this_6(D)->source;

(insn 56 55 57 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:126 -1
     (nil))

(insn 57 56 0 (set (reg/f:SI 100 [ D.21526 ])
        (mem/f/j:SI (reg/f:SI 124) [0 this_6(D)->source+0 S4 A32])) ..\Str\str.cpp:126 -1
     (nil))

;; _29 = (sizetype) i_1;

(insn 58 57 0 (set (reg:SI 101 [ D.21528 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:126 -1
     (nil))

;; _30 = _28 + _29;

(insn 59 58 0 (parallel [
            (set (reg/f:SI 102 [ D.21526 ])
                (plus:SI (reg/f:SI 100 [ D.21526 ])
                    (reg:SI 101 [ D.21528 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:126 -1
     (nil))

;; _31 = (sizetype) i_1;

(insn 60 59 0 (set (reg:SI 103 [ D.21528 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:126 -1
     (nil))

;; _32 = right_13(D) + _31;

(insn 61 60 62 (set (reg/f:SI 125)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:126 -1
     (nil))

(insn 62 61 0 (parallel [
            (set (reg/f:SI 104 [ D.21529 ])
                (plus:SI (reg:SI 103 [ D.21528 ])
                    (reg/f:SI 125)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:126 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])
            (reg:SI 103 [ D.21528 ]))
        (nil)))

;; _33 = *_32;

(insn 63 62 0 (set (reg:QI 105 [ D.21530 ])
        (mem:QI (reg/f:SI 104 [ D.21529 ]) [0 *_32+0 S1 A8])) ..\Str\str.cpp:126 -1
     (nil))

;; _34 = (unsigned char) _33;

(insn 64 63 0 (set (reg:QI 106 [ D.21532 ])
        (reg:QI 105 [ D.21530 ])) ..\Str\str.cpp:126 -1
     (nil))

;; *_30 = _34;

(insn 65 64 0 (set (mem:QI (reg/f:SI 102 [ D.21526 ]) [0 *_30+0 S1 A8])
        (reg:QI 106 [ D.21532 ])) ..\Str\str.cpp:126 -1
     (nil))

;; i_36 = i_1 + 1;

(insn 66 65 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:125 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 70 69 71 55 "" [0 uses])

(note 71 70 0 NOTE_INSN_BASIC_BLOCK)

;; _37 = this_6(D)->source;

(insn 72 71 73 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:128 -1
     (nil))

(insn 73 72 0 (set (reg/f:SI 107 [ D.21526 ])
        (mem/f/j:SI (reg/f:SI 126) [0 this_6(D)->source+0 S4 A32])) ..\Str\str.cpp:128 -1
     (nil))

;; _38 = this_6(D)->size;

(insn 74 73 75 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:128 -1
     (nil))

(insn 75 74 0 (set (reg:SI 108 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 127)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:128 -1
     (nil))

;; _39 = (sizetype) _38;

(insn 76 75 0 (set (reg:SI 109 [ D.21528 ])
        (reg:SI 108 [ D.21527 ])) ..\Str\str.cpp:128 -1
     (nil))

;; _40 = _37 + _39;

(insn 77 76 0 (parallel [
            (set (reg/f:SI 110 [ D.21526 ])
                (plus:SI (reg/f:SI 107 [ D.21526 ])
                    (reg:SI 109 [ D.21528 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:128 -1
     (nil))

;; *_40 = 0;

(insn 78 77 0 (set (mem:QI (reg/f:SI 110 [ D.21526 ]) [0 *_40+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:128 -1
     (nil))

;; _42 = this_6(D);

(insn 79 78 0 (set (reg/f:SI 111 [ D.21533 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:130 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; <L9>:

(code_label 80 79 81 57 "" [0 uses])

(note 81 80 0 NOTE_INSN_BASIC_BLOCK)

;; return _42;

(insn 82 81 83 (set (reg:SI 112 [ <retval> ])
        (reg/f:SI 111 [ D.21533 ])) ..\Str\str.cpp:130 -1
     (nil))

(jump_insn 83 82 84 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:130 -1
     (nil))

(barrier 84 83 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 83.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:118 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:121 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 87 [ D.21526 ])
        (mem/f/j:SI (reg/f:SI 113) [0 this_6(D)->source+0 S4 A32])) ..\Str\str.cpp:121 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.21526 ])
            (const_int 0 [0]))) ..\Str\str.cpp:121 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) ..\Str\str.cpp:121 -1
     (nil)
 -> 15)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:121 -1
     (nil))
(insn 12 11 13 4 (set (reg/f:SI 88 [ D.21526 ])
        (mem/f/j:SI (reg/f:SI 114) [0 this_6(D)->source+0 S4 A32])) ..\Str\str.cpp:121 -1
     (nil))
(insn 13 12 14 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 88 [ D.21526 ])) ..\Str\str.cpp:121 -1
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:121 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 15 14 16 5 52 "" [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:122 -1
     (nil))
(insn 18 17 34 5 (set (mem/j:SI (plus:SI (reg/f:SI 115)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:122 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              7 (DFS_BACK)
(code_label 34 18 19 6 54 "" [1 uses])
(note 19 34 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 6 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:123 -1
     (nil))
(insn 21 20 22 6 (set (reg:SI 89 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 116)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:123 -1
     (nil))
(insn 22 21 23 6 (set (reg:SI 90 [ D.21528 ])
        (reg:SI 89 [ D.21527 ])) ..\Str\str.cpp:123 -1
     (nil))
(insn 23 22 24 6 (set (reg/f:SI 117)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:123 -1
     (nil))
(insn 24 23 25 6 (parallel [
            (set (reg/f:SI 91 [ D.21529 ])
                (plus:SI (reg:SI 90 [ D.21528 ])
                    (reg/f:SI 117)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:123 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])
            (reg:SI 90 [ D.21528 ]))
        (nil)))
(insn 25 24 26 6 (set (reg:QI 92 [ D.21530 ])
        (mem:QI (reg/f:SI 91 [ D.21529 ]) [0 *_14+0 S1 A8])) ..\Str\str.cpp:123 -1
     (nil))
(insn 26 25 27 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.21530 ])
            (const_int 0 [0]))) ..\Str\str.cpp:123 -1
     (nil))
(jump_insn 27 26 28 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) ..\Str\str.cpp:123 -1
     (nil)
 -> 37)
;;  succ:       8
;;              7 (FALLTHRU)

;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 7 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:123 -1
     (nil))
(insn 30 29 31 7 (set (reg:SI 93 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 118)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:123 -1
     (nil))
(insn 31 30 32 7 (parallel [
            (set (reg:SI 94 [ D.21527 ])
                (plus:SI (reg:SI 93 [ D.21527 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:123 -1
     (nil))
(insn 32 31 33 7 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:123 -1
     (nil))
(insn 33 32 35 7 (set (mem/j:SI (plus:SI (reg/f:SI 119)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])
        (reg:SI 94 [ D.21527 ])) ..\Str\str.cpp:123 -1
     (nil))
(jump_insn 35 33 36 7 (set (pc)
        (label_ref 34)) ..\Str\str.cpp:123 -1
     (nil)
 -> 34)
;;  succ:       6 (DFS_BACK)

(barrier 36 35 37)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 37 36 38 8 53 "" [1 uses])
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:124 -1
     (nil))
(insn 40 39 41 8 (set (reg:SI 95 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:124 -1
     (nil))
(insn 41 40 42 8 (parallel [
            (set (reg:SI 96 [ D.21527 ])
                (plus:SI (reg:SI 95 [ D.21527 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:124 -1
     (nil))
(insn 42 41 43 8 (set (reg:SI 97 [ D.21528 ])
        (reg:SI 96 [ D.21527 ])) ..\Str\str.cpp:124 -1
     (nil))
(insn 43 42 44 8 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 97 [ D.21528 ])) ..\Str\str.cpp:124 -1
     (nil))
(call_insn 44 43 45 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:124 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 45 44 46 8 (set (reg/f:SI 121)
        (reg:SI 0 ax)) ..\Str\str.cpp:124 -1
     (expr_list:REG_NOALIAS (reg/f:SI 121)
        (nil)))
(insn 46 45 47 8 (set (reg/f:SI 98 [ D.21531 ])
        (reg/f:SI 121)) ..\Str\str.cpp:124 -1
     (nil))
(insn 47 46 48 8 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:124 -1
     (nil))
(insn 48 47 49 8 (set (mem/f/j:SI (reg/f:SI 122) [0 this_6(D)->source+0 S4 A32])
        (reg/f:SI 98 [ D.21531 ])) ..\Str\str.cpp:124 -1
     (nil))
(insn 49 48 67 8 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:125 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
;;              10 (DFS_BACK)
(code_label 67 49 50 9 56 "" [1 uses])
(note 50 67 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:125 -1
     (nil))
(insn 52 51 53 9 (set (reg:SI 99 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 123)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:125 -1
     (nil))
(insn 53 52 54 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 99 [ D.21527 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:125 -1
     (nil))
(jump_insn 54 53 55 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) ..\Str\str.cpp:125 -1
     (nil)
 -> 70)
;;  succ:       11
;;              10 (FALLTHRU)

;; basic block 10, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 10 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:126 -1
     (nil))
(insn 57 56 58 10 (set (reg/f:SI 100 [ D.21526 ])
        (mem/f/j:SI (reg/f:SI 124) [0 this_6(D)->source+0 S4 A32])) ..\Str\str.cpp:126 -1
     (nil))
(insn 58 57 59 10 (set (reg:SI 101 [ D.21528 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:126 -1
     (nil))
(insn 59 58 60 10 (parallel [
            (set (reg/f:SI 102 [ D.21526 ])
                (plus:SI (reg/f:SI 100 [ D.21526 ])
                    (reg:SI 101 [ D.21528 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:126 -1
     (nil))
(insn 60 59 61 10 (set (reg:SI 103 [ D.21528 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:126 -1
     (nil))
(insn 61 60 62 10 (set (reg/f:SI 125)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:126 -1
     (nil))
(insn 62 61 63 10 (parallel [
            (set (reg/f:SI 104 [ D.21529 ])
                (plus:SI (reg:SI 103 [ D.21528 ])
                    (reg/f:SI 125)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:126 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])
            (reg:SI 103 [ D.21528 ]))
        (nil)))
(insn 63 62 64 10 (set (reg:QI 105 [ D.21530 ])
        (mem:QI (reg/f:SI 104 [ D.21529 ]) [0 *_32+0 S1 A8])) ..\Str\str.cpp:126 -1
     (nil))
(insn 64 63 65 10 (set (reg:QI 106 [ D.21532 ])
        (reg:QI 105 [ D.21530 ])) ..\Str\str.cpp:126 -1
     (nil))
(insn 65 64 66 10 (set (mem:QI (reg/f:SI 102 [ D.21526 ]) [0 *_30+0 S1 A8])
        (reg:QI 106 [ D.21532 ])) ..\Str\str.cpp:126 -1
     (nil))
(insn 66 65 68 10 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:125 -1
     (nil))
(jump_insn 68 66 69 10 (set (pc)
        (label_ref 67)) ..\Str\str.cpp:125 -1
     (nil)
 -> 67)
;;  succ:       9 (DFS_BACK)

(barrier 69 68 70)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 70 69 71 11 55 "" [1 uses])
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 11 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:128 -1
     (nil))
(insn 73 72 74 11 (set (reg/f:SI 107 [ D.21526 ])
        (mem/f/j:SI (reg/f:SI 126) [0 this_6(D)->source+0 S4 A32])) ..\Str\str.cpp:128 -1
     (nil))
(insn 74 73 75 11 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:128 -1
     (nil))
(insn 75 74 76 11 (set (reg:SI 108 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 127)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:128 -1
     (nil))
(insn 76 75 77 11 (set (reg:SI 109 [ D.21528 ])
        (reg:SI 108 [ D.21527 ])) ..\Str\str.cpp:128 -1
     (nil))
(insn 77 76 78 11 (parallel [
            (set (reg/f:SI 110 [ D.21526 ])
                (plus:SI (reg/f:SI 107 [ D.21526 ])
                    (reg:SI 109 [ D.21528 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:128 -1
     (nil))
(insn 78 77 79 11 (set (mem:QI (reg/f:SI 110 [ D.21526 ]) [0 *_40+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:128 -1
     (nil))
(insn 79 78 82 11 (set (reg/f:SI 111 [ D.21533 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:130 -1
     (nil))
(insn 82 79 86 11 (set (reg:SI 112 [ <retval> ])
        (reg/f:SI 111 [ D.21533 ])) ..\Str\str.cpp:130 -1
     (nil))
(insn 86 82 87 11 (set (reg/i:SI 0 ax)
        (reg:SI 112 [ <retval> ])) ..\Str\str.cpp:131 -1
     (nil))
(insn 87 86 0 11 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:131 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Str& Str::operator=(const Str&) (_ZN3StraSERKS_, funcdef_no=1028, decl_uid=20895, cgraph_uid=205, symbol_order=206)

Str& Str::operator=(const Str&) (struct Str * const this, const struct Str & right)
{
  void * D.21374;
  int i;
  struct Str & D.21372;
  int D.21371;
  unsigned char * D.21370;
  sizetype D.21369;
  int D.21368;
  unsigned char * D.21367;
  unsigned char D.21365;
  unsigned char * D.21364;
  sizetype i.24;
  unsigned char * D.21362;
  unsigned char * D.21361;
  sizetype i.23;
  unsigned char * D.21359;
  int D.21357;
  void * D.21355;
  unsigned int D.21354;
  int D.21353;
  int D.21352;
  unsigned char * D.21350;
  unsigned char * D.21347;
  unsigned char * _8;
  unsigned char * _9;
  int _11;
  int _12;
  unsigned int _13;
  void * _15;
  void * _16;
  int _19;
  unsigned char * _20;
  sizetype i.23_21;
  unsigned char * _22;
  unsigned char * _23;
  sizetype i.24_24;
  unsigned char * _25;
  unsigned char _26;
  unsigned char * _29;
  int _30;
  sizetype _31;
  unsigned char * _32;
  int _34;
  struct Str & _36;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (this_5(D) != right_6(D))
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3
;;                9

;;   basic block 3, loop depth 0
;;    pred:       2
  _8 = this_5(D)->source;
  if (_8 != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _9 = this_5(D)->source;
  operator delete [] (_9);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  _11 = right_6(D)->size;
  _12 = _11 + 1;
  _13 = (unsigned int) _12;
  _15 = operator new [] (_13);
  _16 = _15;
  this_5(D)->source = _16;
  i_18 = 0;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       5
;;                7
  # i_1 = PHI <i_18(5), i_28(7)>
  _19 = right_6(D)->size;
  if (_19 <= i_1)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  _20 = this_5(D)->source;
  i.23_21 = (sizetype) i_1;
  _22 = _20 + i.23_21;
  _23 = right_6(D)->source;
  i.24_24 = (sizetype) i_1;
  _25 = _23 + i.24_24;
  _26 = *_25;
  *_22 = _26;
  i_28 = i_1 + 1;
  goto <bb 6>;
;;    succ:       6

;;   basic block 8, loop depth 0
;;    pred:       6
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       2
;;                8
  _29 = this_5(D)->source;
  _30 = right_6(D)->size;
  _31 = (sizetype) _30;
  _32 = _29 + _31;
  *_32 = 0;
  _34 = right_6(D)->size;
  this_5(D)->size = _34;
  _36 = this_5(D);
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       9
<L9>:
  return _36;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 5 (this_5(D) - 5 )
Partition 6 (right_6(D) - 6 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 18 (i_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (i.23_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (i.24_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 28 (i_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 34 (_34 - 34 )
Partition 36 (_36 - 36 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (this_5(D) - 5 )
Partition 2 (right_6(D) - 6 )
Partition 3 (_15 - 15 )
Partition 4 (_16 - 16 )
Partition 5 (i_18 - 18 )
Partition 6 (i_28 - 28 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_18
(2147483646) i_1 <-> i_28
(1) _15 <-> _16

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (this_5(D) - 5 )
Partition 2 (right_6(D) - 6 )
Partition 3 (_15 - 15 )
Partition 4 (_16 - 16 )
Partition 5 (i_18 - 18 )
Partition 6 (i_28 - 28 )

Coalesce list: (1)i_1 & (18)i_18 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (28)i_28 [map: 0, 6] : Success -> 0
Coalesce list: (15)_15 & (16)_16 [map: 3, 4] : Success -> 3
Coalesce list: (1)i_1 & (28)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (18)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 18 28 )
Partition 1 (this_5(D) - 5 )
Partition 2 (right_6(D) - 6 )
Partition 3 (_8 - 8 )
Partition 4 (_9 - 9 )
Partition 5 (_11 - 11 )
Partition 6 (_12 - 12 )
Partition 7 (_13 - 13 )
Partition 8 (_15 - 15 16 )
Partition 9 (_19 - 19 )
Partition 10 (_20 - 20 )
Partition 11 (i.23_21 - 21 )
Partition 12 (_22 - 22 )
Partition 13 (_23 - 23 )
Partition 14 (i.24_24 - 24 )
Partition 15 (_25 - 25 )
Partition 16 (_26 - 26 )
Partition 17 (_29 - 29 )
Partition 18 (_30 - 30 )
Partition 19 (_31 - 31 )
Partition 20 (_32 - 32 )
Partition 21 (_34 - 34 )
Partition 22 (_36 - 36 )

Str& Str::operator=(const Str&) (struct Str * const this, const struct Str & right)
{
  void * D.21374;
  int i;
  struct Str & D.21372;
  int D.21371;
  unsigned char * D.21370;
  sizetype D.21369;
  int D.21368;
  unsigned char * D.21367;
  unsigned char D.21365;
  unsigned char * D.21364;
  sizetype i.24;
  unsigned char * D.21362;
  unsigned char * D.21361;
  sizetype i.23;
  unsigned char * D.21359;
  int D.21357;
  void * D.21355;
  unsigned int D.21354;
  int D.21353;
  int D.21352;
  unsigned char * D.21350;
  unsigned char * D.21347;
  unsigned char * _8;
  unsigned char * _9;
  int _11;
  int _12;
  unsigned int _13;
  void * _15;
  void * _16;
  int _19;
  unsigned char * _20;
  sizetype i.23_21;
  unsigned char * _22;
  unsigned char * _23;
  sizetype i.24_24;
  unsigned char * _25;
  unsigned char _26;
  unsigned char * _29;
  int _30;
  sizetype _31;
  unsigned char * _32;
  int _34;
  struct Str & _36;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (this_5(D) != right_6(D))
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3
;;                9

;;   basic block 3, loop depth 0
;;    pred:       2
  _8 = this_5(D)->source;
  if (_8 != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _9 = this_5(D)->source;
  operator delete [] (_9);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  _11 = right_6(D)->size;
  _12 = _11 + 1;
  _13 = (unsigned int) _12;
  _15 = operator new [] (_13);
  _16 = _15;
  this_5(D)->source = _16;
  i_18 = 0;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       5
;;                7
  # i_1 = PHI <i_18(5), i_28(7)>
  _19 = right_6(D)->size;
  if (_19 <= i_1)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  _20 = this_5(D)->source;
  i.23_21 = (sizetype) i_1;
  _22 = _20 + i.23_21;
  _23 = right_6(D)->source;
  i.24_24 = (sizetype) i_1;
  _25 = _23 + i.24_24;
  _26 = *_25;
  *_22 = _26;
  i_28 = i_1 + 1;
  goto <bb 6>;
;;    succ:       6

;;   basic block 8, loop depth 0
;;    pred:       6
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       2
;;                8
  _29 = this_5(D)->source;
  _30 = right_6(D)->size;
  _31 = (sizetype) _30;
  _32 = _29 + _31;
  *_32 = 0;
  _34 = right_6(D)->size;
  this_5(D)->size = _34;
  _36 = this_5(D);
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       9
<L9>:
  return _36;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (this_5(D) != right_6(D))

(insn 6 5 7 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:134 -1
     (nil))

(insn 7 6 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 108)
            (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32]))) ..\Str\str.cpp:134 -1
     (nil))

(jump_insn 8 7 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:134 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _8 = this_5(D)->source;

(insn 10 9 11 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:136 -1
     (nil))

(insn 11 10 0 (set (reg/f:SI 87 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 109) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:136 -1
     (nil))

;; if (_8 != 0B)

(insn 12 11 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.21534 ])
            (const_int 0 [0]))) ..\Str\str.cpp:136 -1
     (nil))

(jump_insn 13 12 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:136 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _9 = this_5(D)->source;

(insn 15 14 16 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:136 -1
     (nil))

(insn 16 15 0 (set (reg/f:SI 88 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 110) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:136 -1
     (nil))

;; operator delete [] (_9);

(insn 17 16 18 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 88 [ D.21534 ])) ..\Str\str.cpp:136 -1
     (nil))

(call_insn 18 17 0 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:136 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; Generating RTL for gimple basic block 5

;; 

(code_label 19 18 20 60 "" [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = right_6(D)->size;

(insn 21 20 22 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:137 -1
     (nil))

(insn 22 21 0 (set (reg:SI 89 [ D.21535 ])
        (mem/j:SI (plus:SI (reg/f:SI 111)
                (const_int 4 [0x4])) [0 right_6(D)->size+0 S4 A32])) ..\Str\str.cpp:137 -1
     (nil))

;; _12 = _11 + 1;

(insn 23 22 0 (parallel [
            (set (reg:SI 90 [ D.21535 ])
                (plus:SI (reg:SI 89 [ D.21535 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:137 -1
     (nil))

;; _13 = (unsigned int) _12;

(insn 24 23 0 (set (reg:SI 91 [ D.21536 ])
        (reg:SI 90 [ D.21535 ])) ..\Str\str.cpp:137 -1
     (nil))

;; _15 = operator new [] (_13);

(insn 25 24 26 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 91 [ D.21536 ])) ..\Str\str.cpp:137 -1
     (nil))

(call_insn 26 25 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:137 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 27 26 28 (set (reg/f:SI 112)
        (reg:SI 0 ax)) ..\Str\str.cpp:137 -1
     (expr_list:REG_NOALIAS (reg/f:SI 112)
        (nil)))

(insn 28 27 0 (set (reg/f:SI 92 [ D.21537 ])
        (reg/f:SI 112)) ..\Str\str.cpp:137 -1
     (nil))

;; _16 = _15;

(nil)

;; this_5(D)->source = _16;

(insn 29 28 30 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:137 -1
     (nil))

(insn 30 29 0 (set (mem/f/j:SI (reg/f:SI 113) [0 this_5(D)->source+0 S4 A32])
        (reg/f:SI 92 [ D.21537 ])) ..\Str\str.cpp:137 -1
     (nil))

;; i_18 = 0;

(insn 31 30 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:138 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _19 = right_6(D)->size;

(insn 33 32 34 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:138 -1
     (nil))

(insn 34 33 0 (set (reg:SI 93 [ D.21535 ])
        (mem/j:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [0 right_6(D)->size+0 S4 A32])) ..\Str\str.cpp:138 -1
     (nil))

;; if (_19 <= i_1)

(insn 35 34 36 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 93 [ D.21535 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:138 -1
     (nil))

(jump_insn 36 35 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:138 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _20 = this_5(D)->source;

(insn 38 37 39 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:139 -1
     (nil))

(insn 39 38 0 (set (reg/f:SI 94 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 115) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:139 -1
     (nil))

;; _21 = (sizetype) i_1;

(insn 40 39 0 (set (reg:SI 95 [ D.21538 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:139 -1
     (nil))

;; _22 = _20 + _21;

(insn 41 40 0 (parallel [
            (set (reg/f:SI 96 [ D.21534 ])
                (plus:SI (reg/f:SI 94 [ D.21534 ])
                    (reg:SI 95 [ D.21538 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:139 -1
     (nil))

;; _23 = right_6(D)->source;

(insn 42 41 43 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:139 -1
     (nil))

(insn 43 42 0 (set (reg/f:SI 97 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 116) [0 right_6(D)->source+0 S4 A32])) ..\Str\str.cpp:139 -1
     (nil))

;; _24 = (sizetype) i_1;

(insn 44 43 0 (set (reg:SI 98 [ D.21538 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:139 -1
     (nil))

;; _25 = _23 + _24;

(insn 45 44 0 (parallel [
            (set (reg/f:SI 99 [ D.21534 ])
                (plus:SI (reg/f:SI 97 [ D.21534 ])
                    (reg:SI 98 [ D.21538 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:139 -1
     (nil))

;; _26 = *_25;

(insn 46 45 0 (set (reg:QI 100 [ D.21539 ])
        (mem:QI (reg/f:SI 99 [ D.21534 ]) [0 *_25+0 S1 A8])) ..\Str\str.cpp:139 -1
     (nil))

;; *_22 = _26;

(insn 47 46 0 (set (mem:QI (reg/f:SI 96 [ D.21534 ]) [0 *_22+0 S1 A8])
        (reg:QI 100 [ D.21539 ])) ..\Str\str.cpp:139 -1
     (nil))

;; i_28 = i_1 + 1;

(insn 48 47 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:138 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 52 51 53 61 "" [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 9

;; 

(code_label 54 53 55 59 "" [0 uses])

(note 55 54 0 NOTE_INSN_BASIC_BLOCK)

;; _29 = this_5(D)->source;

(insn 56 55 57 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:141 -1
     (nil))

(insn 57 56 0 (set (reg/f:SI 101 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 117) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:141 -1
     (nil))

;; _30 = right_6(D)->size;

(insn 58 57 59 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:141 -1
     (nil))

(insn 59 58 0 (set (reg:SI 102 [ D.21535 ])
        (mem/j:SI (plus:SI (reg/f:SI 118)
                (const_int 4 [0x4])) [0 right_6(D)->size+0 S4 A32])) ..\Str\str.cpp:141 -1
     (nil))

;; _31 = (sizetype) _30;

(insn 60 59 0 (set (reg:SI 103 [ D.21538 ])
        (reg:SI 102 [ D.21535 ])) ..\Str\str.cpp:141 -1
     (nil))

;; _32 = _29 + _31;

(insn 61 60 0 (parallel [
            (set (reg/f:SI 104 [ D.21534 ])
                (plus:SI (reg/f:SI 101 [ D.21534 ])
                    (reg:SI 103 [ D.21538 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:141 -1
     (nil))

;; *_32 = 0;

(insn 62 61 0 (set (mem:QI (reg/f:SI 104 [ D.21534 ]) [0 *_32+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:141 -1
     (nil))

;; _34 = right_6(D)->size;

(insn 63 62 64 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:142 -1
     (nil))

(insn 64 63 0 (set (reg:SI 105 [ D.21535 ])
        (mem/j:SI (plus:SI (reg/f:SI 119)
                (const_int 4 [0x4])) [0 right_6(D)->size+0 S4 A32])) ..\Str\str.cpp:142 -1
     (nil))

;; this_5(D)->size = _34;

(insn 65 64 66 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:142 -1
     (nil))

(insn 66 65 0 (set (mem/j:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])
        (reg:SI 105 [ D.21535 ])) ..\Str\str.cpp:142 -1
     (nil))

;; _36 = this_5(D);

(insn 67 66 0 (set (reg/f:SI 106 [ D.21540 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:143 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; <L9>:

(code_label 68 67 69 63 "" [0 uses])

(note 69 68 0 NOTE_INSN_BASIC_BLOCK)

;; return _36;

(insn 70 69 71 (set (reg:SI 107 [ <retval> ])
        (reg/f:SI 106 [ D.21540 ])) ..\Str\str.cpp:143 -1
     (nil))

(jump_insn 71 70 72 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:143 -1
     (nil))

(barrier 72 71 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 7->9 redirected to 10
deleting block 9
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 71.
Merging block 12 into block 10...
Merged blocks 10 and 12.
Merged 10 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:133 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:134 -1
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 108)
            (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32]))) ..\Str\str.cpp:134 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) ..\Str\str.cpp:134 -1
     (nil)
 -> 54)
;;  succ:       4 (FALLTHRU)
;;              10

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:136 -1
     (nil))
(insn 11 10 12 4 (set (reg/f:SI 87 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 109) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:136 -1
     (nil))
(insn 12 11 13 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.21534 ])
            (const_int 0 [0]))) ..\Str\str.cpp:136 -1
     (nil))
(jump_insn 13 12 14 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ..\Str\str.cpp:136 -1
     (nil)
 -> 19)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:136 -1
     (nil))
(insn 16 15 17 5 (set (reg/f:SI 88 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 110) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:136 -1
     (nil))
(insn 17 16 18 5 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 88 [ D.21534 ])) ..\Str\str.cpp:136 -1
     (nil))
(call_insn 18 17 19 5 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:136 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              5 (FALLTHRU)
(code_label 19 18 20 6 60 "" [1 uses])
(note 20 19 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 6 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:137 -1
     (nil))
(insn 22 21 23 6 (set (reg:SI 89 [ D.21535 ])
        (mem/j:SI (plus:SI (reg/f:SI 111)
                (const_int 4 [0x4])) [0 right_6(D)->size+0 S4 A32])) ..\Str\str.cpp:137 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg:SI 90 [ D.21535 ])
                (plus:SI (reg:SI 89 [ D.21535 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:137 -1
     (nil))
(insn 24 23 25 6 (set (reg:SI 91 [ D.21536 ])
        (reg:SI 90 [ D.21535 ])) ..\Str\str.cpp:137 -1
     (nil))
(insn 25 24 26 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 91 [ D.21536 ])) ..\Str\str.cpp:137 -1
     (nil))
(call_insn 26 25 27 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:137 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 27 26 28 6 (set (reg/f:SI 112)
        (reg:SI 0 ax)) ..\Str\str.cpp:137 -1
     (expr_list:REG_NOALIAS (reg/f:SI 112)
        (nil)))
(insn 28 27 29 6 (set (reg/f:SI 92 [ D.21537 ])
        (reg/f:SI 112)) ..\Str\str.cpp:137 -1
     (nil))
(insn 29 28 30 6 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:137 -1
     (nil))
(insn 30 29 31 6 (set (mem/f/j:SI (reg/f:SI 113) [0 this_5(D)->source+0 S4 A32])
        (reg/f:SI 92 [ D.21537 ])) ..\Str\str.cpp:137 -1
     (nil))
(insn 31 30 49 6 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:138 -1
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              8 (DFS_BACK)
(code_label 49 31 32 7 62 "" [1 uses])
(note 32 49 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:138 -1
     (nil))
(insn 34 33 35 7 (set (reg:SI 93 [ D.21535 ])
        (mem/j:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [0 right_6(D)->size+0 S4 A32])) ..\Str\str.cpp:138 -1
     (nil))
(insn 35 34 36 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 93 [ D.21535 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:138 -1
     (nil))
(jump_insn 36 35 37 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 54)
            (pc))) ..\Str\str.cpp:138 509 {*jcc_1}
     (nil)
 -> 54)
;;  succ:       10
;;              8 (FALLTHRU)

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:139 -1
     (nil))
(insn 39 38 40 8 (set (reg/f:SI 94 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 115) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:139 -1
     (nil))
(insn 40 39 41 8 (set (reg:SI 95 [ D.21538 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:139 -1
     (nil))
(insn 41 40 42 8 (parallel [
            (set (reg/f:SI 96 [ D.21534 ])
                (plus:SI (reg/f:SI 94 [ D.21534 ])
                    (reg:SI 95 [ D.21538 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:139 -1
     (nil))
(insn 42 41 43 8 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:139 -1
     (nil))
(insn 43 42 44 8 (set (reg/f:SI 97 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 116) [0 right_6(D)->source+0 S4 A32])) ..\Str\str.cpp:139 -1
     (nil))
(insn 44 43 45 8 (set (reg:SI 98 [ D.21538 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:139 -1
     (nil))
(insn 45 44 46 8 (parallel [
            (set (reg/f:SI 99 [ D.21534 ])
                (plus:SI (reg/f:SI 97 [ D.21534 ])
                    (reg:SI 98 [ D.21538 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:139 -1
     (nil))
(insn 46 45 47 8 (set (reg:QI 100 [ D.21539 ])
        (mem:QI (reg/f:SI 99 [ D.21534 ]) [0 *_25+0 S1 A8])) ..\Str\str.cpp:139 -1
     (nil))
(insn 47 46 48 8 (set (mem:QI (reg/f:SI 96 [ D.21534 ]) [0 *_22+0 S1 A8])
        (reg:QI 100 [ D.21539 ])) ..\Str\str.cpp:139 -1
     (nil))
(insn 48 47 50 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:138 -1
     (nil))
(jump_insn 50 48 51 8 (set (pc)
        (label_ref 49)) ..\Str\str.cpp:138 -1
     (nil)
 -> 49)
;;  succ:       7 (DFS_BACK)

(barrier 51 50 54)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              7
(code_label 54 51 55 10 59 "" [2 uses])
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 10 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:141 -1
     (nil))
(insn 57 56 58 10 (set (reg/f:SI 101 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 117) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:141 -1
     (nil))
(insn 58 57 59 10 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:141 -1
     (nil))
(insn 59 58 60 10 (set (reg:SI 102 [ D.21535 ])
        (mem/j:SI (plus:SI (reg/f:SI 118)
                (const_int 4 [0x4])) [0 right_6(D)->size+0 S4 A32])) ..\Str\str.cpp:141 -1
     (nil))
(insn 60 59 61 10 (set (reg:SI 103 [ D.21538 ])
        (reg:SI 102 [ D.21535 ])) ..\Str\str.cpp:141 -1
     (nil))
(insn 61 60 62 10 (parallel [
            (set (reg/f:SI 104 [ D.21534 ])
                (plus:SI (reg/f:SI 101 [ D.21534 ])
                    (reg:SI 103 [ D.21538 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:141 -1
     (nil))
(insn 62 61 63 10 (set (mem:QI (reg/f:SI 104 [ D.21534 ]) [0 *_32+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:141 -1
     (nil))
(insn 63 62 64 10 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 right+0 S4 A32])) ..\Str\str.cpp:142 -1
     (nil))
(insn 64 63 65 10 (set (reg:SI 105 [ D.21535 ])
        (mem/j:SI (plus:SI (reg/f:SI 119)
                (const_int 4 [0x4])) [0 right_6(D)->size+0 S4 A32])) ..\Str\str.cpp:142 -1
     (nil))
(insn 65 64 66 10 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:142 -1
     (nil))
(insn 66 65 67 10 (set (mem/j:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])
        (reg:SI 105 [ D.21535 ])) ..\Str\str.cpp:142 -1
     (nil))
(insn 67 66 70 10 (set (reg/f:SI 106 [ D.21540 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:143 -1
     (nil))
(insn 70 67 74 10 (set (reg:SI 107 [ <retval> ])
        (reg/f:SI 106 [ D.21540 ])) ..\Str\str.cpp:143 -1
     (nil))
(insn 74 70 75 10 (set (reg/i:SI 0 ax)
        (reg:SI 107 [ <retval> ])) ..\Str\str.cpp:144 -1
     (nil))
(insn 75 74 0 10 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:144 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Str operator+(const Str&, const Str&) (_ZplRK3StrS1_, funcdef_no=1029, decl_uid=20902, cgraph_uid=206, symbol_order=207)

Str operator+(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  void * D.21541;
  struct Str tmp [value-expr: *<retval>];

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  Str::Str (tmp_2(D), left_3(D));
  Str::operator+= (tmp_2(D), right_5(D));
;;    succ:       5
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
<L0>:
  return tmp_2(D);
;;    succ:       EXIT

;;   basic block 5, loop depth 0
;;    pred:       2
<L1>:
  Str::~Str (tmp_2(D));
  _8 = __builtin_eh_pointer (1);
  __builtin_unwind_resume (_8);
;;    succ:      

}



Partition map 

Partition 2 (tmp_2(D) - 2 )
Partition 3 (left_3(D) - 3 )
Partition 5 (right_5(D) - 5 )
Partition 8 (_8 - 8 )


Partition map 

Partition 0 (tmp_2(D) - 2 )
Partition 1 (left_3(D) - 3 )
Partition 2 (right_5(D) - 5 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (tmp_2(D) - 2 )
Partition 1 (left_3(D) - 3 )
Partition 2 (right_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (tmp_2(D) - 2 )
Partition 1 (left_3(D) - 3 )
Partition 2 (right_5(D) - 5 )
Partition 3 (_8 - 8 )

Str operator+(const Str&, const Str&) (const struct Str & left, const struct Str & right)
{
  void * D.21541;
  struct Str tmp [value-expr: *<retval>];

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  Str::Str (tmp_2(D), left_3(D));
  Str::operator+= (tmp_2(D), right_5(D));
;;    succ:       5
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
<L0>:
  return tmp_2(D);
;;    succ:       EXIT

;;   basic block 5, loop depth 0
;;    pred:       2
<L1>:
  Str::~Str (tmp_2(D));
  _8 = __builtin_eh_pointer (1);
  __builtin_unwind_resume (_8);
;;    succ:      

}



;; Generating RTL for gimple basic block 2

;; Str::Str (tmp_2(D), left_3(D));

(insn 5 4 6 (set (reg/f:SI 88)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 left+0 S4 A32])) ..\Str\str.cpp:147 -1
     (nil))

(insn 6 5 7 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 88)) ..\Str\str.cpp:147 -1
     (nil))

(insn 7 6 8 (set (reg:SI 2 cx)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:147 -1
     (nil))

(call_insn 8 7 9 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZN3StrC1ERKS_") [flags 0x3]  <function_decl 04e59e00 __comp_ctor >) [0 __comp_ctor  S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) ..\Str\str.cpp:147 -1
     (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
            (nil))))

(insn 9 8 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:147 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; Str::operator+= (tmp_2(D), right_5(D));

(insn 10 9 11 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 right+0 S4 A32])) ..\Str\str.cpp:148 -1
     (nil))

(insn 11 10 12 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 89)) ..\Str\str.cpp:148 -1
     (nil))

(insn 12 11 13 (set (reg:SI 2 cx)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:148 -1
     (nil))

(call_insn 13 12 14 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("_ZN3StrpLERKS_") [flags 0x3]  <function_decl 04e59700 operator+=>) [0 operator+= S1 A8])
                    (const_int 4 [0x4])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) ..\Str\str.cpp:148 -1
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
            (nil))))

(insn 14 13 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:148 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; <L0>:

(code_label 16 15 17 65 "" [0 uses])

(note 17 16 0 NOTE_INSN_BASIC_BLOCK)

;; return tmp_2(D);

(jump_insn 18 17 19 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:149 -1
     (nil))

(barrier 19 18 0)

;; Generating RTL for gimple basic block 5

;; <L1>:

(code_label 20 19 21 66 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; Str::~Str (tmp_2(D));

(insn 22 21 23 (set (reg:SI 2 cx)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 .result_ptr+0 S4 A32])) -1
     (nil))

(call_insn 23 22 0 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))

;; _8 = __builtin_eh_pointer (1);

(insn 24 23 0 (set (reg/f:SI 87 [ D.21541 ])
        (reg:SI 90)) -1
     (nil))

;; __builtin_unwind_resume (_8);

(insn 25 24 26 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 87 [ D.21541 ])) -1
     (nil))

(call_insn 26 25 27 (call (mem:QI (symbol_ref:SI ("_Unwind_Resume") [flags 0x43]  <function_decl 041dff00 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 4 [0x4])) -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(barrier 27 26 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 5 into block 4...
Merged blocks 4 and 5.
Merged 4 and 5 without moving.
Merging block 6 into block 4...
Merged blocks 4 and 6.
Merged 4 and 6 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 88)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 left+0 S4 A32])) ..\Str\str.cpp:147 -1
     (nil))
(insn 6 5 7 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 88)) ..\Str\str.cpp:147 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 2 cx)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:147 -1
     (nil))
(call_insn 8 7 9 2 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZN3StrC1ERKS_") [flags 0x3]  <function_decl 04e59e00 __comp_ctor >) [0 __comp_ctor  S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) ..\Str\str.cpp:147 -1
     (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
            (nil))))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:147 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 10 9 11 2 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 right+0 S4 A32])) ..\Str\str.cpp:148 -1
     (nil))
(insn 11 10 12 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 89)) ..\Str\str.cpp:148 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 2 cx)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:148 -1
     (nil))
(call_insn 13 12 32 2 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("_ZN3StrpLERKS_") [flags 0x3]  <function_decl 04e59700 operator+=>) [0 operator+= S1 A8])
                    (const_int 4 [0x4])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) ..\Str\str.cpp:148 -1
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
            (nil))))
;;  succ:       7 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 32 13 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 32 18 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:148 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 18 14 19 4 (set (pc)
        (label_ref 28)) ..\Str\str.cpp:149 -1
     (nil)
 -> 28)
;;  succ:       9

(barrier 19 18 33)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 33 19 35 7 67 "" [1 uses])
(note 35 33 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 35 22 7 (set (reg:SI 90)
        (reg:SI 0 ax)) -1
     (nil))
(insn 22 34 23 7 (set (reg:SI 2 cx)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 .result_ptr+0 S4 A32])) -1
     (nil))
(call_insn 23 22 24 7 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn 24 23 25 7 (set (reg/f:SI 87 [ D.21541 ])
        (reg:SI 90)) -1
     (nil))
(insn 25 24 26 7 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 87 [ D.21541 ])) -1
     (nil))
(call_insn 26 25 27 7 (call (mem:QI (symbol_ref:SI ("_Unwind_Resume") [flags 0x43]  <function_decl 041dff00 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 4 [0x4])) -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
;;  succ:      

(barrier 27 26 28)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 28 27 31 9 64 "" [1 uses])
(note 31 28 29 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 29 31 30 9 (set (reg/i:SI 0 ax)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:150 -1
     (nil))
(insn 30 29 0 9 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:150 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Str operator+(char, const Str&) (_ZplcRK3Str, funcdef_no=1030, decl_uid=21066, cgraph_uid=207, symbol_order=208)

Str operator+(char, const Str&) (char left, const struct Str & right)
{
  void * D.21543;
  struct Str tmp;
  int D.21381;
  int D.21380;
  int _3;
  int _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = (int) left_2(D);
  Str::Str (&tmp, _3);
  _6 = (int) left_2(D);
  *_7(D) = operator+ (_6, &tmp); [return slot optimization]
;;    succ:       6
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
  Str::~Str (&tmp);
  tmp ={v} {CLOBBER};
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L2>:
  return _7(D);
;;    succ:       EXIT

;;   basic block 6, loop depth 0
;;    pred:       2
<L3>:
  Str::~Str (&tmp);
  _1 = __builtin_eh_pointer (2);
  __builtin_unwind_resume (_1);
;;    succ:      

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (left_2(D) - 2 )
Partition 3 (_3 - 3 )
Partition 6 (_6 - 6 )
Partition 7 (_7(D) - 7 )


Partition map 

Partition 0 (left_2(D) - 2 )
Partition 1 (_7(D) - 7 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (left_2(D) - 2 )
Partition 1 (_7(D) - 7 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (left_2(D) - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_6 - 6 )
Partition 4 (_7(D) - 7 )

Str operator+(char, const Str&) (char left, const struct Str & right)
{
  void * D.21543;
  struct Str tmp;
  int D.21381;
  int D.21380;
  int _3;
  int _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = (int) left_2(D);
  Str::Str (&tmp, _3);
  _6 = (int) left_2(D);
  *_7(D) = operator+ (_6, &tmp); [return slot optimization]
;;    succ:       6
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
  Str::~Str (&tmp);
  tmp ={v} {CLOBBER};
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L2>:
  return _7(D);
;;    succ:       EXIT

;;   basic block 6, loop depth 0
;;    pred:       2
<L3>:
  Str::~Str (&tmp);
  _1 = __builtin_eh_pointer (2);
  __builtin_unwind_resume (_1);
;;    succ:      

}



;; Generating RTL for gimple basic block 2

;; _3 = (int) left_2(D);

(insn 7 6 0 (set (reg:SI 88 [ D.21544 ])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 left+0 S1 A32]))) ..\Str\str.cpp:153 -1
     (nil))

;; Str::Str (&tmp, _3);

(insn 8 7 9 (parallel [
            (set (reg:SI 91)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:153 -1
     (nil))

(insn 9 8 10 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 88 [ D.21544 ])) ..\Str\str.cpp:153 -1
     (nil))

(insn 10 9 11 (set (reg:SI 2 cx)
        (reg:SI 91)) ..\Str\str.cpp:153 -1
     (nil))

(call_insn 11 10 12 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZN3StrC1Ec") [flags 0x3]  <function_decl 04e59f00 __comp_ctor >) [0 __comp_ctor  S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) ..\Str\str.cpp:153 -1
     (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
            (nil))))

(insn 12 11 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:153 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _6 = (int) left_2(D);

(insn 13 12 0 (set (reg:SI 89 [ D.21544 ])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 left+0 S1 A32]))) ..\Str\str.cpp:154 -1
     (nil))

;; *_7(D) = operator+ (_6, &tmp); [return slot optimization]

(insn 14 13 15 (set (reg/f:SI 92)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:154 -1
     (nil))

(insn 15 14 16 (parallel [
            (set (reg:SI 93)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:154 -1
     (nil))

(insn 16 15 17 (set (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 93)) ..\Str\str.cpp:154 -1
     (nil))

(insn 17 16 18 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg:SI 89 [ D.21544 ])) ..\Str\str.cpp:154 -1
     (nil))

(insn 18 17 19 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 92)) ..\Str\str.cpp:154 -1
     (nil))

(call_insn 19 18 0 (call (mem:QI (symbol_ref:SI ("_ZplcRK3Str") [flags 0x3]  <function_decl 04e5f900 operator+>) [0 operator+ S1 A8])
        (const_int 12 [0xc])) ..\Str\str.cpp:154 -1
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (nil)))))

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Str::~Str (&tmp);

(insn 22 21 23 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:153 -1
     (nil))

(insn 23 22 24 (set (reg:SI 2 cx)
        (reg:SI 94)) ..\Str\str.cpp:153 -1
     (nil))

(call_insn 24 23 0 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))

;; tmp ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 5

;; <L2>:

(code_label 25 24 26 70 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; return _7(D);

(jump_insn 27 26 28 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:154 -1
     (nil))

(barrier 28 27 0)

;; Generating RTL for gimple basic block 6

;; <L3>:

(code_label 29 28 30 71 "" [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; Str::~Str (&tmp);

(insn 31 30 32 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:153 -1
     (nil))

(insn 32 31 33 (set (reg:SI 2 cx)
        (reg:SI 95)) ..\Str\str.cpp:153 -1
     (nil))

(call_insn 33 32 0 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))

;; _1 = __builtin_eh_pointer (2);

(insn 34 33 0 (set (reg/f:SI 87 [ D.21543 ])
        (reg:SI 96)) -1
     (nil))

;; __builtin_unwind_resume (_1);

(insn 35 34 36 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 87 [ D.21543 ])) -1
     (nil))

(call_insn 36 35 37 (call (mem:QI (symbol_ref:SI ("_Unwind_Resume") [flags 0x43]  <function_decl 041dff00 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 4 [0x4])) -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(barrier 37 36 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Forwarding edge 2->4 to 5 failed.
Merging block 5 into block 4...
Merged blocks 4 and 5.
Merged 4 and 5 without moving.
Merging block 6 into block 4...
Merged blocks 4 and 6.
Merged 4 and 6 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg:SI 90)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 left+0 S4 A32])) ..\Str\str.cpp:152 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 left+0 S1 A32])
        (subreg:QI (reg:SI 90) 0)) ..\Str\str.cpp:152 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 88 [ D.21544 ])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 left+0 S1 A32]))) ..\Str\str.cpp:153 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:SI 91)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:153 -1
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 88 [ D.21544 ])) ..\Str\str.cpp:153 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 2 cx)
        (reg:SI 91)) ..\Str\str.cpp:153 -1
     (nil))
(call_insn 11 10 12 2 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZN3StrC1Ec") [flags 0x3]  <function_decl 04e59f00 __comp_ctor >) [0 __comp_ctor  S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) ..\Str\str.cpp:153 -1
     (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
            (nil))))
(insn 12 11 13 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:153 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 13 12 14 2 (set (reg:SI 89 [ D.21544 ])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 left+0 S1 A32]))) ..\Str\str.cpp:154 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 92)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:154 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:SI 93)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:154 -1
     (nil))
(insn 16 15 17 2 (set (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 93)) ..\Str\str.cpp:154 -1
     (nil))
(insn 17 16 18 2 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg:SI 89 [ D.21544 ])) ..\Str\str.cpp:154 -1
     (nil))
(insn 18 17 19 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 92)) ..\Str\str.cpp:154 -1
     (nil))
(call_insn 19 18 20 2 (call (mem:QI (symbol_ref:SI ("_ZplcRK3Str") [flags 0x3]  <function_decl 04e5f900 operator+>) [0 operator+ S1 A8])
        (const_int 12 [0xc])) ..\Str\str.cpp:154 -1
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (nil)))))
;;  succ:       7 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 20 19 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 45 20 22 4 (const_int 0 [0]) ..\Str\str.cpp:154 -1
     (nil))
(insn 22 45 23 4 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:153 -1
     (nil))
(insn 23 22 24 4 (set (reg:SI 2 cx)
        (reg:SI 94)) ..\Str\str.cpp:153 -1
     (nil))
(call_insn 24 23 27 4 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(jump_insn 27 24 28 4 (set (pc)
        (label_ref 38)) ..\Str\str.cpp:154 -1
     (nil)
 -> 38)
;;  succ:       9

(barrier 28 27 42)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 42 28 44 7 72 "" [1 uses])
(note 44 42 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 44 31 7 (set (reg:SI 96)
        (reg:SI 0 ax)) -1
     (nil))
(insn 31 43 32 7 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:153 -1
     (nil))
(insn 32 31 33 7 (set (reg:SI 2 cx)
        (reg:SI 95)) ..\Str\str.cpp:153 -1
     (nil))
(call_insn 33 32 34 7 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn 34 33 35 7 (set (reg/f:SI 87 [ D.21543 ])
        (reg:SI 96)) -1
     (nil))
(insn 35 34 36 7 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 87 [ D.21543 ])) -1
     (nil))
(call_insn 36 35 37 7 (call (mem:QI (symbol_ref:SI ("_Unwind_Resume") [flags 0x43]  <function_decl 041dff00 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 4 [0x4])) -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
;;  succ:      

(barrier 37 36 38)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 38 37 41 9 69 "" [1 uses])
(note 41 38 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 39 41 40 9 (set (reg/i:SI 0 ax)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:155 -1
     (nil))
(insn 40 39 0 9 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:155 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Str operator+(const Str&, char) (_ZplRK3Strc, funcdef_no=1031, decl_uid=20905, cgraph_uid=208, symbol_order=209)

Str operator+(const Str&, char) (const struct Str & left, char right)
{
  void * D.21547;
  struct Str tmp;
  int D.21388;
  int _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = (int) right_2(D);
  Str::Str (&tmp, _3);
  *_6(D) = operator+ (left_7(D), &tmp); [return slot optimization]
;;    succ:       6
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
  Str::~Str (&tmp);
  tmp ={v} {CLOBBER};
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L2>:
  return _6(D);
;;    succ:       EXIT

;;   basic block 6, loop depth 0
;;    pred:       2
<L3>:
  Str::~Str (&tmp);
  _1 = __builtin_eh_pointer (2);
  __builtin_unwind_resume (_1);
;;    succ:      

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (right_2(D) - 2 )
Partition 3 (_3 - 3 )
Partition 6 (_6(D) - 6 )
Partition 7 (left_7(D) - 7 )


Partition map 

Partition 0 (right_2(D) - 2 )
Partition 1 (_6(D) - 6 )
Partition 2 (left_7(D) - 7 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (right_2(D) - 2 )
Partition 1 (_6(D) - 6 )
Partition 2 (left_7(D) - 7 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (right_2(D) - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_6(D) - 6 )
Partition 4 (left_7(D) - 7 )

Str operator+(const Str&, char) (const struct Str & left, char right)
{
  void * D.21547;
  struct Str tmp;
  int D.21388;
  int _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = (int) right_2(D);
  Str::Str (&tmp, _3);
  *_6(D) = operator+ (left_7(D), &tmp); [return slot optimization]
;;    succ:       6
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       3
  Str::~Str (&tmp);
  tmp ={v} {CLOBBER};
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L2>:
  return _6(D);
;;    succ:       EXIT

;;   basic block 6, loop depth 0
;;    pred:       2
<L3>:
  Str::~Str (&tmp);
  _1 = __builtin_eh_pointer (2);
  __builtin_unwind_resume (_1);
;;    succ:      

}



;; Generating RTL for gimple basic block 2

;; _3 = (int) right_2(D);

(insn 7 6 0 (set (reg:SI 88 [ D.21548 ])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 right+0 S1 A32]))) ..\Str\str.cpp:158 -1
     (nil))

;; Str::Str (&tmp, _3);

(insn 8 7 9 (parallel [
            (set (reg:SI 90)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:158 -1
     (nil))

(insn 9 8 10 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 88 [ D.21548 ])) ..\Str\str.cpp:158 -1
     (nil))

(insn 10 9 11 (set (reg:SI 2 cx)
        (reg:SI 90)) ..\Str\str.cpp:158 -1
     (nil))

(call_insn 11 10 12 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZN3StrC1Ec") [flags 0x3]  <function_decl 04e59f00 __comp_ctor >) [0 __comp_ctor  S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) ..\Str\str.cpp:158 -1
     (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
            (nil))))

(insn 12 11 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:158 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; *_6(D) = operator+ (left_7(D), &tmp); [return slot optimization]

(insn 13 12 14 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:159 -1
     (nil))

(insn 14 13 15 (parallel [
            (set (reg:SI 92)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:159 -1
     (nil))

(insn 15 14 16 (set (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 92)) ..\Str\str.cpp:159 -1
     (nil))

(insn 16 15 17 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 left+0 S4 A32])) ..\Str\str.cpp:159 -1
     (nil))

(insn 17 16 18 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 93)) ..\Str\str.cpp:159 -1
     (nil))

(insn 18 17 19 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:159 -1
     (nil))

(call_insn 19 18 0 (call (mem:QI (symbol_ref:SI ("_ZplRK3StrS1_") [flags 0x3]  <function_decl 04e59600 operator+>) [0 operator+ S1 A8])
        (const_int 12 [0xc])) ..\Str\str.cpp:159 -1
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (nil)))))

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Str::~Str (&tmp);

(insn 22 21 23 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:158 -1
     (nil))

(insn 23 22 24 (set (reg:SI 2 cx)
        (reg:SI 94)) ..\Str\str.cpp:158 -1
     (nil))

(call_insn 24 23 0 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:158 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))

;; tmp ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 5

;; <L2>:

(code_label 25 24 26 75 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; return _6(D);

(jump_insn 27 26 28 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:159 -1
     (nil))

(barrier 28 27 0)

;; Generating RTL for gimple basic block 6

;; <L3>:

(code_label 29 28 30 76 "" [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; Str::~Str (&tmp);

(insn 31 30 32 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:158 -1
     (nil))

(insn 32 31 33 (set (reg:SI 2 cx)
        (reg:SI 95)) ..\Str\str.cpp:158 -1
     (nil))

(call_insn 33 32 0 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:158 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))

;; _1 = __builtin_eh_pointer (2);

(insn 34 33 0 (set (reg/f:SI 87 [ D.21547 ])
        (reg:SI 96)) -1
     (nil))

;; __builtin_unwind_resume (_1);

(insn 35 34 36 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 87 [ D.21547 ])) -1
     (nil))

(call_insn 36 35 37 (call (mem:QI (symbol_ref:SI ("_Unwind_Resume") [flags 0x43]  <function_decl 041dff00 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 4 [0x4])) -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(barrier 37 36 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Forwarding edge 2->4 to 5 failed.
Merging block 5 into block 4...
Merged blocks 4 and 5.
Merged 4 and 5 without moving.
Merging block 6 into block 4...
Merged blocks 4 and 6.
Merged 4 and 6 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg:SI 89)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 right+0 S4 A32])) ..\Str\str.cpp:157 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 right+0 S1 A32])
        (subreg:QI (reg:SI 89) 0)) ..\Str\str.cpp:157 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 88 [ D.21548 ])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 right+0 S1 A32]))) ..\Str\str.cpp:158 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:SI 90)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:158 -1
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 88 [ D.21548 ])) ..\Str\str.cpp:158 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 2 cx)
        (reg:SI 90)) ..\Str\str.cpp:158 -1
     (nil))
(call_insn 11 10 12 2 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZN3StrC1Ec") [flags 0x3]  <function_decl 04e59f00 __comp_ctor >) [0 __comp_ctor  S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) ..\Str\str.cpp:158 -1
     (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
            (nil))))
(insn 12 11 13 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:158 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 13 12 14 2 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:159 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:SI 92)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:159 -1
     (nil))
(insn 15 14 16 2 (set (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 92)) ..\Str\str.cpp:159 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 left+0 S4 A32])) ..\Str\str.cpp:159 -1
     (nil))
(insn 17 16 18 2 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 93)) ..\Str\str.cpp:159 -1
     (nil))
(insn 18 17 19 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:159 -1
     (nil))
(call_insn 19 18 20 2 (call (mem:QI (symbol_ref:SI ("_ZplRK3StrS1_") [flags 0x3]  <function_decl 04e59600 operator+>) [0 operator+ S1 A8])
        (const_int 12 [0xc])) ..\Str\str.cpp:159 -1
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (nil)))))
;;  succ:       7 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 20 19 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 45 20 22 4 (const_int 0 [0]) ..\Str\str.cpp:159 -1
     (nil))
(insn 22 45 23 4 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:158 -1
     (nil))
(insn 23 22 24 4 (set (reg:SI 2 cx)
        (reg:SI 94)) ..\Str\str.cpp:158 -1
     (nil))
(call_insn 24 23 27 4 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:158 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(jump_insn 27 24 28 4 (set (pc)
        (label_ref 38)) ..\Str\str.cpp:159 -1
     (nil)
 -> 38)
;;  succ:       9

(barrier 28 27 42)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 42 28 44 7 77 "" [1 uses])
(note 44 42 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 44 31 7 (set (reg:SI 96)
        (reg:SI 0 ax)) -1
     (nil))
(insn 31 43 32 7 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:158 -1
     (nil))
(insn 32 31 33 7 (set (reg:SI 2 cx)
        (reg:SI 95)) ..\Str\str.cpp:158 -1
     (nil))
(call_insn 33 32 34 7 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:158 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn 34 33 35 7 (set (reg/f:SI 87 [ D.21547 ])
        (reg:SI 96)) -1
     (nil))
(insn 35 34 36 7 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 87 [ D.21547 ])) -1
     (nil))
(call_insn 36 35 37 7 (call (mem:QI (symbol_ref:SI ("_Unwind_Resume") [flags 0x43]  <function_decl 041dff00 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 4 [0x4])) -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
;;  succ:      

(barrier 37 36 38)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 38 37 41 9 74 "" [1 uses])
(note 41 38 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 39 41 40 9 (set (reg/i:SI 0 ax)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:160 -1
     (nil))
(insn 40 39 0 9 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:160 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Str::Str(char*) (_ZN3StrC2EPc, funcdef_no=1033, decl_uid=20958, cgraph_uid=210, symbol_order=211)

Str::Str(char*) (struct Str * const this, char * str)
{
  void * D.21420;
  int i;
  unsigned char * D.21419;
  sizetype D.21418;
  int D.21417;
  unsigned char * D.21416;
  unsigned char D.21415;
  char D.21414;
  char * D.21413;
  sizetype i.26;
  unsigned char * D.21411;
  sizetype i.25;
  unsigned char * D.21409;
  int D.21407;
  void * D.21405;
  sizetype D.21404;
  int D.21403;
  int D.21402;
  int D.21401;
  int D.21400;
  char D.21398;
  char * D.21397;
  sizetype D.21396;
  int D.21395;
  int _7;
  sizetype _8;
  char * _10;
  char _11;
  int _12;
  int _13;
  int _15;
  int _16;
  sizetype _17;
  void * _19;
  void * _20;
  int _23;
  unsigned char * _24;
  sizetype i.25_25;
  unsigned char * _26;
  sizetype i.26_27;
  char * _28;
  char _29;
  unsigned char _30;
  unsigned char * _33;
  int _34;
  sizetype _35;
  unsigned char * _36;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  this_5(D)->size = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                4
  _7 = this_5(D)->size;
  _8 = (sizetype) _7;
  _10 = str_9(D) + _8;
  _11 = *_10;
  if (_11 == 0)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _12 = this_5(D)->size;
  _13 = _12 + 1;
  this_5(D)->size = _13;
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
  _15 = this_5(D)->size;
  _16 = _15 + 1;
  _17 = (sizetype) _16;
  _19 = operator new [] (_17);
  _20 = _19;
  this_5(D)->source = _20;
  i_22 = 0;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       5
;;                7
  # i_1 = PHI <i_22(5), i_32(7)>
  _23 = this_5(D)->size;
  if (_23 <= i_1)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  _24 = this_5(D)->source;
  i.25_25 = (sizetype) i_1;
  _26 = _24 + i.25_25;
  i.26_27 = (sizetype) i_1;
  _28 = str_9(D) + i.26_27;
  _29 = *_28;
  _30 = (unsigned char) _29;
  *_26 = _30;
  i_32 = i_1 + 1;
  goto <bb 6>;
;;    succ:       6

;;   basic block 8, loop depth 0
;;    pred:       6
  _33 = this_5(D)->source;
  _34 = this_5(D)->size;
  _35 = (sizetype) _34;
  _36 = _33 + _35;
  *_36 = 0;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 5 (this_5(D) - 5 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (str_9(D) - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 22 (i_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (i.25_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (i.26_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 32 (i_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (this_5(D) - 5 )
Partition 2 (str_9(D) - 9 )
Partition 3 (_19 - 19 )
Partition 4 (_20 - 20 )
Partition 5 (i_22 - 22 )
Partition 6 (i_32 - 32 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_22
(2147483646) i_1 <-> i_32
(1) _19 <-> _20

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (this_5(D) - 5 )
Partition 2 (str_9(D) - 9 )
Partition 3 (_19 - 19 )
Partition 4 (_20 - 20 )
Partition 5 (i_22 - 22 )
Partition 6 (i_32 - 32 )

Coalesce list: (1)i_1 & (22)i_22 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (32)i_32 [map: 0, 6] : Success -> 0
Coalesce list: (19)_19 & (20)_20 [map: 3, 4] : Success -> 3
Coalesce list: (1)i_1 & (32)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (22)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 22 32 )
Partition 1 (this_5(D) - 5 )
Partition 2 (_7 - 7 )
Partition 3 (_8 - 8 )
Partition 4 (str_9(D) - 9 )
Partition 5 (_10 - 10 )
Partition 6 (_11 - 11 )
Partition 7 (_12 - 12 )
Partition 8 (_13 - 13 )
Partition 9 (_15 - 15 )
Partition 10 (_16 - 16 )
Partition 11 (_17 - 17 )
Partition 12 (_19 - 19 20 )
Partition 13 (_23 - 23 )
Partition 14 (_24 - 24 )
Partition 15 (i.25_25 - 25 )
Partition 16 (_26 - 26 )
Partition 17 (i.26_27 - 27 )
Partition 18 (_28 - 28 )
Partition 19 (_29 - 29 )
Partition 20 (_30 - 30 )
Partition 21 (_33 - 33 )
Partition 22 (_34 - 34 )
Partition 23 (_35 - 35 )
Partition 24 (_36 - 36 )

Str::Str(char*) (struct Str * const this, char * str)
{
  void * D.21420;
  int i;
  unsigned char * D.21419;
  sizetype D.21418;
  int D.21417;
  unsigned char * D.21416;
  unsigned char D.21415;
  char D.21414;
  char * D.21413;
  sizetype i.26;
  unsigned char * D.21411;
  sizetype i.25;
  unsigned char * D.21409;
  int D.21407;
  void * D.21405;
  sizetype D.21404;
  int D.21403;
  int D.21402;
  int D.21401;
  int D.21400;
  char D.21398;
  char * D.21397;
  sizetype D.21396;
  int D.21395;
  int _7;
  sizetype _8;
  char * _10;
  char _11;
  int _12;
  int _13;
  int _15;
  int _16;
  sizetype _17;
  void * _19;
  void * _20;
  int _23;
  unsigned char * _24;
  sizetype i.25_25;
  unsigned char * _26;
  sizetype i.26_27;
  char * _28;
  char _29;
  unsigned char _30;
  unsigned char * _33;
  int _34;
  sizetype _35;
  unsigned char * _36;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  this_5(D)->size = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                4
  _7 = this_5(D)->size;
  _8 = (sizetype) _7;
  _10 = str_9(D) + _8;
  _11 = *_10;
  if (_11 == 0)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _12 = this_5(D)->size;
  _13 = _12 + 1;
  this_5(D)->size = _13;
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
  _15 = this_5(D)->size;
  _16 = _15 + 1;
  _17 = (sizetype) _16;
  _19 = operator new [] (_17);
  _20 = _19;
  this_5(D)->source = _20;
  i_22 = 0;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       5
;;                7
  # i_1 = PHI <i_22(5), i_32(7)>
  _23 = this_5(D)->size;
  if (_23 <= i_1)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  _24 = this_5(D)->source;
  i.25_25 = (sizetype) i_1;
  _26 = _24 + i.25_25;
  i.26_27 = (sizetype) i_1;
  _28 = str_9(D) + i.26_27;
  _29 = *_28;
  _30 = (unsigned char) _29;
  *_26 = _30;
  i_32 = i_1 + 1;
  goto <bb 6>;
;;    succ:       6

;;   basic block 8, loop depth 0
;;    pred:       6
  _33 = this_5(D)->source;
  _34 = this_5(D)->size;
  _35 = (sizetype) _34;
  _36 = _33 + _35;
  *_36 = 0;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; this_5(D)->size = 0;

(insn 6 5 7 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:163 -1
     (nil))

(insn 7 6 0 (set (mem/j:SI (plus:SI (reg/f:SI 109)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:163 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _7 = this_5(D)->size;

(insn 9 8 10 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:164 -1
     (nil))

(insn 10 9 0 (set (reg:SI 87 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:164 -1
     (nil))

;; _8 = (sizetype) _7;

(insn 11 10 0 (set (reg:SI 88 [ D.21552 ])
        (reg:SI 87 [ D.21551 ])) ..\Str\str.cpp:164 -1
     (nil))

;; _10 = str_9(D) + _8;

(insn 12 11 13 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 str+0 S4 A32])) ..\Str\str.cpp:164 -1
     (nil))

(insn 13 12 0 (parallel [
            (set (reg/f:SI 89 [ D.21553 ])
                (plus:SI (reg:SI 88 [ D.21552 ])
                    (reg/f:SI 111)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:164 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 str+0 S4 A32])
            (reg:SI 88 [ D.21552 ]))
        (nil)))

;; _11 = *_10;

(insn 14 13 0 (set (reg:QI 90 [ D.21554 ])
        (mem:QI (reg/f:SI 89 [ D.21553 ]) [0 *_10+0 S1 A8])) ..\Str\str.cpp:164 -1
     (nil))

;; if (_11 == 0)

(insn 15 14 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.21554 ])
            (const_int 0 [0]))) ..\Str\str.cpp:164 -1
     (nil))

(jump_insn 16 15 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:164 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _12 = this_5(D)->size;

(insn 18 17 19 (set (reg/f:SI 112)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:164 -1
     (nil))

(insn 19 18 0 (set (reg:SI 91 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 112)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:164 -1
     (nil))

;; _13 = _12 + 1;

(insn 20 19 0 (parallel [
            (set (reg:SI 92 [ D.21551 ])
                (plus:SI (reg:SI 91 [ D.21551 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:164 -1
     (nil))

;; this_5(D)->size = _13;

(insn 21 20 22 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:164 -1
     (nil))

(insn 22 21 0 (set (mem/j:SI (plus:SI (reg/f:SI 113)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])
        (reg:SI 92 [ D.21551 ])) ..\Str\str.cpp:164 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 26 25 27 80 "" [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; _15 = this_5(D)->size;

(insn 28 27 29 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:165 -1
     (nil))

(insn 29 28 0 (set (reg:SI 93 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:165 -1
     (nil))

;; _16 = _15 + 1;

(insn 30 29 0 (parallel [
            (set (reg:SI 94 [ D.21551 ])
                (plus:SI (reg:SI 93 [ D.21551 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:165 -1
     (nil))

;; _17 = (sizetype) _16;

(insn 31 30 0 (set (reg:SI 95 [ D.21552 ])
        (reg:SI 94 [ D.21551 ])) ..\Str\str.cpp:165 -1
     (nil))

;; _19 = operator new [] (_17);

(insn 32 31 33 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 95 [ D.21552 ])) ..\Str\str.cpp:165 -1
     (nil))

(call_insn 33 32 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:165 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 34 33 35 (set (reg/f:SI 115)
        (reg:SI 0 ax)) ..\Str\str.cpp:165 -1
     (expr_list:REG_NOALIAS (reg/f:SI 115)
        (nil)))

(insn 35 34 0 (set (reg/f:SI 96 [ D.21555 ])
        (reg/f:SI 115)) ..\Str\str.cpp:165 -1
     (nil))

;; _20 = _19;

(nil)

;; this_5(D)->source = _20;

(insn 36 35 37 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:165 -1
     (nil))

(insn 37 36 0 (set (mem/f/j:SI (reg/f:SI 116) [0 this_5(D)->source+0 S4 A32])
        (reg/f:SI 96 [ D.21555 ])) ..\Str\str.cpp:165 -1
     (nil))

;; i_22 = 0;

(insn 38 37 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:166 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _23 = this_5(D)->size;

(insn 40 39 41 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:166 -1
     (nil))

(insn 41 40 0 (set (reg:SI 97 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 117)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:166 -1
     (nil))

;; if (_23 <= i_1)

(insn 42 41 43 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 97 [ D.21551 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:166 -1
     (nil))

(jump_insn 43 42 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:166 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _24 = this_5(D)->source;

(insn 45 44 46 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:167 -1
     (nil))

(insn 46 45 0 (set (reg/f:SI 98 [ D.21556 ])
        (mem/f/j:SI (reg/f:SI 118) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:167 -1
     (nil))

;; _25 = (sizetype) i_1;

(insn 47 46 0 (set (reg:SI 99 [ D.21552 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:167 -1
     (nil))

;; _26 = _24 + _25;

(insn 48 47 0 (parallel [
            (set (reg/f:SI 100 [ D.21556 ])
                (plus:SI (reg/f:SI 98 [ D.21556 ])
                    (reg:SI 99 [ D.21552 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:167 -1
     (nil))

;; _27 = (sizetype) i_1;

(insn 49 48 0 (set (reg:SI 101 [ D.21552 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:167 -1
     (nil))

;; _28 = str_9(D) + _27;

(insn 50 49 51 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 str+0 S4 A32])) ..\Str\str.cpp:167 -1
     (nil))

(insn 51 50 0 (parallel [
            (set (reg/f:SI 102 [ D.21553 ])
                (plus:SI (reg:SI 101 [ D.21552 ])
                    (reg/f:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:167 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 str+0 S4 A32])
            (reg:SI 101 [ D.21552 ]))
        (nil)))

;; _29 = *_28;

(insn 52 51 0 (set (reg:QI 103 [ D.21554 ])
        (mem:QI (reg/f:SI 102 [ D.21553 ]) [0 *_28+0 S1 A8])) ..\Str\str.cpp:167 -1
     (nil))

;; _30 = (unsigned char) _29;

(insn 53 52 0 (set (reg:QI 104 [ D.21557 ])
        (reg:QI 103 [ D.21554 ])) ..\Str\str.cpp:167 -1
     (nil))

;; *_26 = _30;

(insn 54 53 0 (set (mem:QI (reg/f:SI 100 [ D.21556 ]) [0 *_26+0 S1 A8])
        (reg:QI 104 [ D.21557 ])) ..\Str\str.cpp:167 -1
     (nil))

;; i_32 = i_1 + 1;

(insn 55 54 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:166 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 59 58 60 82 "" [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; _33 = this_5(D)->source;

(insn 61 60 62 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:168 -1
     (nil))

(insn 62 61 0 (set (reg/f:SI 105 [ D.21556 ])
        (mem/f/j:SI (reg/f:SI 120) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:168 -1
     (nil))

;; _34 = this_5(D)->size;

(insn 63 62 64 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:168 -1
     (nil))

(insn 64 63 0 (set (reg:SI 106 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 121)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:168 -1
     (nil))

;; _35 = (sizetype) _34;

(insn 65 64 0 (set (reg:SI 107 [ D.21552 ])
        (reg:SI 106 [ D.21551 ])) ..\Str\str.cpp:168 -1
     (nil))

;; _36 = _33 + _35;

(insn 66 65 0 (parallel [
            (set (reg/f:SI 108 [ D.21556 ])
                (plus:SI (reg/f:SI 105 [ D.21556 ])
                    (reg:SI 107 [ D.21552 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:168 -1
     (nil))

;; *_36 = 0;

(insn 67 66 0 (set (mem:QI (reg/f:SI 108 [ D.21556 ]) [0 *_36+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:168 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:162 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:163 -1
     (nil))
(insn 7 6 23 2 (set (mem/j:SI (plus:SI (reg/f:SI 109)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:163 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              5 (DFS_BACK)
(code_label 23 7 8 4 81 "" [1 uses])
(note 8 23 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:164 -1
     (nil))
(insn 10 9 11 4 (set (reg:SI 87 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:164 -1
     (nil))
(insn 11 10 12 4 (set (reg:SI 88 [ D.21552 ])
        (reg:SI 87 [ D.21551 ])) ..\Str\str.cpp:164 -1
     (nil))
(insn 12 11 13 4 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 str+0 S4 A32])) ..\Str\str.cpp:164 -1
     (nil))
(insn 13 12 14 4 (parallel [
            (set (reg/f:SI 89 [ D.21553 ])
                (plus:SI (reg:SI 88 [ D.21552 ])
                    (reg/f:SI 111)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:164 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 str+0 S4 A32])
            (reg:SI 88 [ D.21552 ]))
        (nil)))
(insn 14 13 15 4 (set (reg:QI 90 [ D.21554 ])
        (mem:QI (reg/f:SI 89 [ D.21553 ]) [0 *_10+0 S1 A8])) ..\Str\str.cpp:164 -1
     (nil))
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.21554 ])
            (const_int 0 [0]))) ..\Str\str.cpp:164 -1
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) ..\Str\str.cpp:164 -1
     (nil)
 -> 26)
;;  succ:       6
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg/f:SI 112)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:164 -1
     (nil))
(insn 19 18 20 5 (set (reg:SI 91 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 112)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:164 -1
     (nil))
(insn 20 19 21 5 (parallel [
            (set (reg:SI 92 [ D.21551 ])
                (plus:SI (reg:SI 91 [ D.21551 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:164 -1
     (nil))
(insn 21 20 22 5 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:164 -1
     (nil))
(insn 22 21 24 5 (set (mem/j:SI (plus:SI (reg/f:SI 113)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])
        (reg:SI 92 [ D.21551 ])) ..\Str\str.cpp:164 -1
     (nil))
(jump_insn 24 22 25 5 (set (pc)
        (label_ref 23)) ..\Str\str.cpp:164 -1
     (nil)
 -> 23)
;;  succ:       4 (DFS_BACK)

(barrier 25 24 26)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 26 25 27 6 80 "" [1 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:165 -1
     (nil))
(insn 29 28 30 6 (set (reg:SI 93 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:165 -1
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg:SI 94 [ D.21551 ])
                (plus:SI (reg:SI 93 [ D.21551 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:165 -1
     (nil))
(insn 31 30 32 6 (set (reg:SI 95 [ D.21552 ])
        (reg:SI 94 [ D.21551 ])) ..\Str\str.cpp:165 -1
     (nil))
(insn 32 31 33 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 95 [ D.21552 ])) ..\Str\str.cpp:165 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:165 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 34 33 35 6 (set (reg/f:SI 115)
        (reg:SI 0 ax)) ..\Str\str.cpp:165 -1
     (expr_list:REG_NOALIAS (reg/f:SI 115)
        (nil)))
(insn 35 34 36 6 (set (reg/f:SI 96 [ D.21555 ])
        (reg/f:SI 115)) ..\Str\str.cpp:165 -1
     (nil))
(insn 36 35 37 6 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:165 -1
     (nil))
(insn 37 36 38 6 (set (mem/f/j:SI (reg/f:SI 116) [0 this_5(D)->source+0 S4 A32])
        (reg/f:SI 96 [ D.21555 ])) ..\Str\str.cpp:165 -1
     (nil))
(insn 38 37 56 6 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:166 -1
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
;;              8 (DFS_BACK)
(code_label 56 38 39 7 83 "" [1 uses])
(note 39 56 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:166 -1
     (nil))
(insn 41 40 42 7 (set (reg:SI 97 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 117)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:166 -1
     (nil))
(insn 42 41 43 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 97 [ D.21551 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:166 -1
     (nil))
(jump_insn 43 42 44 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) ..\Str\str.cpp:166 -1
     (nil)
 -> 59)
;;  succ:       9
;;              8 (FALLTHRU)

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:167 -1
     (nil))
(insn 46 45 47 8 (set (reg/f:SI 98 [ D.21556 ])
        (mem/f/j:SI (reg/f:SI 118) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:167 -1
     (nil))
(insn 47 46 48 8 (set (reg:SI 99 [ D.21552 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:167 -1
     (nil))
(insn 48 47 49 8 (parallel [
            (set (reg/f:SI 100 [ D.21556 ])
                (plus:SI (reg/f:SI 98 [ D.21556 ])
                    (reg:SI 99 [ D.21552 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:167 -1
     (nil))
(insn 49 48 50 8 (set (reg:SI 101 [ D.21552 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:167 -1
     (nil))
(insn 50 49 51 8 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 str+0 S4 A32])) ..\Str\str.cpp:167 -1
     (nil))
(insn 51 50 52 8 (parallel [
            (set (reg/f:SI 102 [ D.21553 ])
                (plus:SI (reg:SI 101 [ D.21552 ])
                    (reg/f:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:167 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 str+0 S4 A32])
            (reg:SI 101 [ D.21552 ]))
        (nil)))
(insn 52 51 53 8 (set (reg:QI 103 [ D.21554 ])
        (mem:QI (reg/f:SI 102 [ D.21553 ]) [0 *_28+0 S1 A8])) ..\Str\str.cpp:167 -1
     (nil))
(insn 53 52 54 8 (set (reg:QI 104 [ D.21557 ])
        (reg:QI 103 [ D.21554 ])) ..\Str\str.cpp:167 -1
     (nil))
(insn 54 53 55 8 (set (mem:QI (reg/f:SI 100 [ D.21556 ]) [0 *_26+0 S1 A8])
        (reg:QI 104 [ D.21557 ])) ..\Str\str.cpp:167 -1
     (nil))
(insn 55 54 57 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:166 -1
     (nil))
(jump_insn 57 55 58 8 (set (pc)
        (label_ref 56)) ..\Str\str.cpp:166 -1
     (nil)
 -> 56)
;;  succ:       7 (DFS_BACK)

(barrier 58 57 59)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 59 58 60 9 82 "" [1 uses])
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 9 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:168 -1
     (nil))
(insn 62 61 63 9 (set (reg/f:SI 105 [ D.21556 ])
        (mem/f/j:SI (reg/f:SI 120) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:168 -1
     (nil))
(insn 63 62 64 9 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:168 -1
     (nil))
(insn 64 63 65 9 (set (reg:SI 106 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 121)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:168 -1
     (nil))
(insn 65 64 66 9 (set (reg:SI 107 [ D.21552 ])
        (reg:SI 106 [ D.21551 ])) ..\Str\str.cpp:168 -1
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg/f:SI 108 [ D.21556 ])
                (plus:SI (reg/f:SI 105 [ D.21556 ])
                    (reg:SI 107 [ D.21552 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:168 -1
     (nil))
(insn 67 66 70 9 (set (mem:QI (reg/f:SI 108 [ D.21556 ]) [0 *_36+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:168 -1
     (nil))
(insn 70 67 0 9 (const_int 0 [0]) ..\Str\str.cpp:169 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Str::Str(char) (_ZN3StrC2Ec, funcdef_no=1036, decl_uid=20952, cgraph_uid=213, symbol_order=214)

Str::Str(char) (struct Str * const this, char str)
{
  void * D.21426;
  unsigned char * D.21425;
  unsigned char * D.21424;
  unsigned char str.27;
  unsigned char * D.21422;
  void * D.21421;
  void * _5;
  void * _6;
  unsigned char * _8;
  unsigned char str.27_10;
  unsigned char * _12;
  unsigned char * _13;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  this_2(D)->size = 1;
  _5 = operator new [] (2);
  _6 = _5;
  this_2(D)->source = _6;
  _8 = this_2(D)->source;
  str.27_10 = (unsigned char) str_9(D);
  *_8 = str.27_10;
  _12 = this_2(D)->source;
  _13 = _12 + 1;
  *_13 = 0;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (this_2(D) - 2 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 8 (_8 - 8 )
Partition 9 (str_9(D) - 9 )
Partition 10 (str.27_10 - 10 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )


Partition map 

Partition 0 (this_2(D) - 2 )
Partition 1 (_5 - 5 )
Partition 2 (_6 - 6 )
Partition 3 (str_9(D) - 9 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(1) _5 <-> _6

Partition map 

Partition 0 (this_2(D) - 2 )
Partition 1 (_5 - 5 )
Partition 2 (_6 - 6 )
Partition 3 (str_9(D) - 9 )

Coalesce list: (5)_5 & (6)_6 [map: 1, 2] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (this_2(D) - 2 )
Partition 1 (_5 - 5 6 )
Partition 2 (_8 - 8 )
Partition 3 (str_9(D) - 9 )
Partition 4 (str.27_10 - 10 )
Partition 5 (_12 - 12 )
Partition 6 (_13 - 13 )

Str::Str(char) (struct Str * const this, char str)
{
  void * D.21426;
  unsigned char * D.21425;
  unsigned char * D.21424;
  unsigned char str.27;
  unsigned char * D.21422;
  void * D.21421;
  void * _5;
  void * _6;
  unsigned char * _8;
  unsigned char str.27_10;
  unsigned char * _12;
  unsigned char * _13;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  this_2(D)->size = 1;
  _5 = operator new [] (2);
  _6 = _5;
  this_2(D)->source = _6;
  _8 = this_2(D)->source;
  str.27_10 = (unsigned char) str_9(D);
  *_8 = str.27_10;
  _12 = this_2(D)->source;
  _13 = _12 + 1;
  *_13 = 0;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; this_2(D)->size = 1;

(insn 8 7 9 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:172 -1
     (nil))

(insn 9 8 0 (set (mem/j:SI (plus:SI (reg/f:SI 93)
                (const_int 4 [0x4])) [0 this_2(D)->size+0 S4 A32])
        (const_int 1 [0x1])) ..\Str\str.cpp:172 -1
     (nil))

;; _5 = operator new [] (2);

(insn 10 9 11 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 2 [0x2])) ..\Str\str.cpp:173 -1
     (nil))

(call_insn 11 10 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:173 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 12 11 13 (set (reg/f:SI 94)
        (reg:SI 0 ax)) ..\Str\str.cpp:173 -1
     (expr_list:REG_NOALIAS (reg/f:SI 94)
        (nil)))

(insn 13 12 0 (set (reg/f:SI 87 [ D.21558 ])
        (reg/f:SI 94)) ..\Str\str.cpp:173 -1
     (nil))

;; _6 = _5;

(nil)

;; this_2(D)->source = _6;

(insn 14 13 15 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:173 -1
     (nil))

(insn 15 14 0 (set (mem/f/j:SI (reg/f:SI 95) [0 this_2(D)->source+0 S4 A32])
        (reg/f:SI 87 [ D.21558 ])) ..\Str\str.cpp:173 -1
     (nil))

;; _8 = this_2(D)->source;

(insn 16 15 17 (set (reg/f:SI 96)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:174 -1
     (nil))

(insn 17 16 0 (set (reg/f:SI 88 [ D.21559 ])
        (mem/f/j:SI (reg/f:SI 96) [0 this_2(D)->source+0 S4 A32])) ..\Str\str.cpp:174 -1
     (nil))

;; _10 = (unsigned char) str_9(D);

(insn 18 17 0 (set (reg:QI 89 [ D.21560 ])
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 str+0 S1 A32])) ..\Str\str.cpp:174 -1
     (nil))

;; *_8 = _10;

(insn 19 18 0 (set (mem:QI (reg/f:SI 88 [ D.21559 ]) [0 *_8+0 S1 A8])
        (reg:QI 89 [ D.21560 ])) ..\Str\str.cpp:174 -1
     (nil))

;; _12 = this_2(D)->source;

(insn 20 19 21 (set (reg/f:SI 97)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:174 -1
     (nil))

(insn 21 20 0 (set (reg/f:SI 90 [ D.21559 ])
        (mem/f/j:SI (reg/f:SI 97) [0 this_2(D)->source+0 S4 A32])) ..\Str\str.cpp:174 -1
     (nil))

;; _13 = _12 + 1;

(insn 22 21 0 (parallel [
            (set (reg/f:SI 91 [ D.21559 ])
                (plus:SI (reg/f:SI 90 [ D.21559 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:174 -1
     (nil))

;; *_13 = 0;

(insn 23 22 0 (set (mem:QI (reg/f:SI 91 [ D.21559 ]) [0 *_13+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:174 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:171 -1
     (nil))
(insn 3 2 4 2 (set (reg:SI 92)
        (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 str+0 S4 A32])) ..\Str\str.cpp:171 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 str+0 S1 A32])
        (subreg:QI (reg:SI 92) 0)) ..\Str\str.cpp:171 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:172 -1
     (nil))
(insn 9 8 10 2 (set (mem/j:SI (plus:SI (reg/f:SI 93)
                (const_int 4 [0x4])) [0 this_2(D)->size+0 S4 A32])
        (const_int 1 [0x1])) ..\Str\str.cpp:172 -1
     (nil))
(insn 10 9 11 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 2 [0x2])) ..\Str\str.cpp:173 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:173 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 94)
        (reg:SI 0 ax)) ..\Str\str.cpp:173 -1
     (expr_list:REG_NOALIAS (reg/f:SI 94)
        (nil)))
(insn 13 12 14 2 (set (reg/f:SI 87 [ D.21558 ])
        (reg/f:SI 94)) ..\Str\str.cpp:173 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:173 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/j:SI (reg/f:SI 95) [0 this_2(D)->source+0 S4 A32])
        (reg/f:SI 87 [ D.21558 ])) ..\Str\str.cpp:173 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 96)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:174 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 88 [ D.21559 ])
        (mem/f/j:SI (reg/f:SI 96) [0 this_2(D)->source+0 S4 A32])) ..\Str\str.cpp:174 -1
     (nil))
(insn 18 17 19 2 (set (reg:QI 89 [ D.21560 ])
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 str+0 S1 A32])) ..\Str\str.cpp:174 -1
     (nil))
(insn 19 18 20 2 (set (mem:QI (reg/f:SI 88 [ D.21559 ]) [0 *_8+0 S1 A8])
        (reg:QI 89 [ D.21560 ])) ..\Str\str.cpp:174 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 97)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:174 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:SI 90 [ D.21559 ])
        (mem/f/j:SI (reg/f:SI 97) [0 this_2(D)->source+0 S4 A32])) ..\Str\str.cpp:174 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:SI 91 [ D.21559 ])
                (plus:SI (reg/f:SI 90 [ D.21559 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:174 -1
     (nil))
(insn 23 22 26 2 (set (mem:QI (reg/f:SI 91 [ D.21559 ]) [0 *_13+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:174 -1
     (nil))
(insn 26 23 0 2 (const_int 0 [0]) ..\Str\str.cpp:176 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Str::Str(const Str&) (_ZN3StrC2ERKS_, funcdef_no=1039, decl_uid=20946, cgraph_uid=216, symbol_order=217)

Str::Str(const Str&) (struct Str * const this, const struct Str & other)
{
  void * D.21442;
  int i;
  int D.21441;
  unsigned char D.21440;
  unsigned char * D.21439;
  sizetype i.29;
  unsigned char * D.21437;
  unsigned char * D.21436;
  sizetype i.28;
  unsigned char * D.21434;
  int D.21432;
  void * D.21430;
  unsigned int D.21429;
  int D.21428;
  int D.21427;
  int _5;
  int _6;
  unsigned int _7;
  void * _9;
  void * _10;
  int _14;
  unsigned char * _15;
  sizetype i.28_16;
  unsigned char * _17;
  unsigned char * _18;
  sizetype i.29_19;
  unsigned char * _20;
  unsigned char _21;
  int _24;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = other_4(D)->size;
  _6 = _5 + 1;
  _7 = (unsigned int) _6;
  _9 = operator new [] (_7);
  _10 = _9;
  this_11(D)->source = _10;
  i_13 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                4
  # i_1 = PHI <i_13(2), i_23(4)>
  _14 = other_4(D)->size;
  if (_14 < i_1)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _15 = this_11(D)->source;
  i.28_16 = (sizetype) i_1;
  _17 = _15 + i.28_16;
  _18 = other_4(D)->source;
  i.29_19 = (sizetype) i_1;
  _20 = _18 + i.29_19;
  _21 = *_20;
  *_17 = _21;
  i_23 = i_1 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
  _24 = other_4(D)->size;
  this_11(D)->size = _24;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 4 (other_4(D) - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (this_11(D) - 11 )
Partition 13 (i_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (i.28_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (i.29_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 23 (i_23 - 23 )
Partition 24 (_24 - 24 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (other_4(D) - 4 )
Partition 2 (_9 - 9 )
Partition 3 (_10 - 10 )
Partition 4 (this_11(D) - 11 )
Partition 5 (i_13 - 13 )
Partition 6 (i_23 - 23 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_13
(2147483646) i_1 <-> i_23
(1) _9 <-> _10

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (other_4(D) - 4 )
Partition 2 (_9 - 9 )
Partition 3 (_10 - 10 )
Partition 4 (this_11(D) - 11 )
Partition 5 (i_13 - 13 )
Partition 6 (i_23 - 23 )

Coalesce list: (1)i_1 & (13)i_13 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (23)i_23 [map: 0, 6] : Success -> 0
Coalesce list: (9)_9 & (10)_10 [map: 2, 3] : Success -> 2
Coalesce list: (1)i_1 & (23)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (13)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 13 23 )
Partition 1 (other_4(D) - 4 )
Partition 2 (_5 - 5 )
Partition 3 (_6 - 6 )
Partition 4 (_7 - 7 )
Partition 5 (_9 - 9 10 )
Partition 6 (this_11(D) - 11 )
Partition 7 (_14 - 14 )
Partition 8 (_15 - 15 )
Partition 9 (i.28_16 - 16 )
Partition 10 (_17 - 17 )
Partition 11 (_18 - 18 )
Partition 12 (i.29_19 - 19 )
Partition 13 (_20 - 20 )
Partition 14 (_21 - 21 )
Partition 15 (_24 - 24 )

Str::Str(const Str&) (struct Str * const this, const struct Str & other)
{
  void * D.21442;
  int i;
  int D.21441;
  unsigned char D.21440;
  unsigned char * D.21439;
  sizetype i.29;
  unsigned char * D.21437;
  unsigned char * D.21436;
  sizetype i.28;
  unsigned char * D.21434;
  int D.21432;
  void * D.21430;
  unsigned int D.21429;
  int D.21428;
  int D.21427;
  int _5;
  int _6;
  unsigned int _7;
  void * _9;
  void * _10;
  int _14;
  unsigned char * _15;
  sizetype i.28_16;
  unsigned char * _17;
  unsigned char * _18;
  sizetype i.29_19;
  unsigned char * _20;
  unsigned char _21;
  int _24;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = other_4(D)->size;
  _6 = _5 + 1;
  _7 = (unsigned int) _6;
  _9 = operator new [] (_7);
  _10 = _9;
  this_11(D)->source = _10;
  i_13 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                4
  # i_1 = PHI <i_13(2), i_23(4)>
  _14 = other_4(D)->size;
  if (_14 < i_1)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _15 = this_11(D)->source;
  i.28_16 = (sizetype) i_1;
  _17 = _15 + i.28_16;
  _18 = other_4(D)->source;
  i.29_19 = (sizetype) i_1;
  _20 = _18 + i.29_19;
  _21 = *_20;
  *_17 = _21;
  i_23 = i_1 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
  _24 = other_4(D)->size;
  this_11(D)->size = _24;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _5 = other_4(D)->size;

(insn 6 5 7 (set (reg/f:SI 100)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 other+0 S4 A32])) ..\Str\str.cpp:179 -1
     (nil))

(insn 7 6 0 (set (reg:SI 87 [ D.21561 ])
        (mem/j:SI (plus:SI (reg/f:SI 100)
                (const_int 4 [0x4])) [0 other_4(D)->size+0 S4 A32])) ..\Str\str.cpp:179 -1
     (nil))

;; _6 = _5 + 1;

(insn 8 7 0 (parallel [
            (set (reg:SI 88 [ D.21561 ])
                (plus:SI (reg:SI 87 [ D.21561 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:179 -1
     (nil))

;; _7 = (unsigned int) _6;

(insn 9 8 0 (set (reg:SI 89 [ D.21562 ])
        (reg:SI 88 [ D.21561 ])) ..\Str\str.cpp:179 -1
     (nil))

;; _9 = operator new [] (_7);

(insn 10 9 11 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 89 [ D.21562 ])) ..\Str\str.cpp:179 -1
     (nil))

(call_insn 11 10 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:179 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 12 11 13 (set (reg/f:SI 101)
        (reg:SI 0 ax)) ..\Str\str.cpp:179 -1
     (expr_list:REG_NOALIAS (reg/f:SI 101)
        (nil)))

(insn 13 12 0 (set (reg/f:SI 90 [ D.21563 ])
        (reg/f:SI 101)) ..\Str\str.cpp:179 -1
     (nil))

;; _10 = _9;

(nil)

;; this_11(D)->source = _10;

(insn 14 13 15 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:179 -1
     (nil))

(insn 15 14 0 (set (mem/f/j:SI (reg/f:SI 102) [0 this_11(D)->source+0 S4 A32])
        (reg/f:SI 90 [ D.21563 ])) ..\Str\str.cpp:179 -1
     (nil))

;; i_13 = 0;

(insn 16 15 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:180 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _14 = other_4(D)->size;

(insn 18 17 19 (set (reg/f:SI 103)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 other+0 S4 A32])) ..\Str\str.cpp:180 -1
     (nil))

(insn 19 18 0 (set (reg:SI 91 [ D.21561 ])
        (mem/j:SI (plus:SI (reg/f:SI 103)
                (const_int 4 [0x4])) [0 other_4(D)->size+0 S4 A32])) ..\Str\str.cpp:180 -1
     (nil))

;; if (_14 < i_1)

(insn 20 19 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91 [ D.21561 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:180 -1
     (nil))

(jump_insn 21 20 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:180 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _15 = this_11(D)->source;

(insn 23 22 24 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:181 -1
     (nil))

(insn 24 23 0 (set (reg/f:SI 92 [ D.21564 ])
        (mem/f/j:SI (reg/f:SI 104) [0 this_11(D)->source+0 S4 A32])) ..\Str\str.cpp:181 -1
     (nil))

;; _16 = (sizetype) i_1;

(insn 25 24 0 (set (reg:SI 93 [ D.21565 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:181 -1
     (nil))

;; _17 = _15 + _16;

(insn 26 25 0 (parallel [
            (set (reg/f:SI 94 [ D.21564 ])
                (plus:SI (reg/f:SI 92 [ D.21564 ])
                    (reg:SI 93 [ D.21565 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:181 -1
     (nil))

;; _18 = other_4(D)->source;

(insn 27 26 28 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 other+0 S4 A32])) ..\Str\str.cpp:181 -1
     (nil))

(insn 28 27 0 (set (reg/f:SI 95 [ D.21564 ])
        (mem/f/j:SI (reg/f:SI 105) [0 other_4(D)->source+0 S4 A32])) ..\Str\str.cpp:181 -1
     (nil))

;; _19 = (sizetype) i_1;

(insn 29 28 0 (set (reg:SI 96 [ D.21565 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:181 -1
     (nil))

;; _20 = _18 + _19;

(insn 30 29 0 (parallel [
            (set (reg/f:SI 97 [ D.21564 ])
                (plus:SI (reg/f:SI 95 [ D.21564 ])
                    (reg:SI 96 [ D.21565 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:181 -1
     (nil))

;; _21 = *_20;

(insn 31 30 0 (set (reg:QI 98 [ D.21566 ])
        (mem:QI (reg/f:SI 97 [ D.21564 ]) [0 *_20+0 S1 A8])) ..\Str\str.cpp:181 -1
     (nil))

;; *_17 = _21;

(insn 32 31 0 (set (mem:QI (reg/f:SI 94 [ D.21564 ]) [0 *_17+0 S1 A8])
        (reg:QI 98 [ D.21566 ])) ..\Str\str.cpp:181 -1
     (nil))

;; i_23 = i_1 + 1;

(insn 33 32 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:180 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 37 36 38 86 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; _24 = other_4(D)->size;

(insn 39 38 40 (set (reg/f:SI 106)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 other+0 S4 A32])) ..\Str\str.cpp:182 -1
     (nil))

(insn 40 39 0 (set (reg:SI 99 [ D.21561 ])
        (mem/j:SI (plus:SI (reg/f:SI 106)
                (const_int 4 [0x4])) [0 other_4(D)->size+0 S4 A32])) ..\Str\str.cpp:182 -1
     (nil))

;; this_11(D)->size = _24;

(insn 41 40 42 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:182 -1
     (nil))

(insn 42 41 0 (set (mem/j:SI (plus:SI (reg/f:SI 107)
                (const_int 4 [0x4])) [0 this_11(D)->size+0 S4 A32])
        (reg:SI 99 [ D.21561 ])) ..\Str\str.cpp:182 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:178 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 100)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 other+0 S4 A32])) ..\Str\str.cpp:179 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 87 [ D.21561 ])
        (mem/j:SI (plus:SI (reg/f:SI 100)
                (const_int 4 [0x4])) [0 other_4(D)->size+0 S4 A32])) ..\Str\str.cpp:179 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:SI 88 [ D.21561 ])
                (plus:SI (reg:SI 87 [ D.21561 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:179 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 89 [ D.21562 ])
        (reg:SI 88 [ D.21561 ])) ..\Str\str.cpp:179 -1
     (nil))
(insn 10 9 11 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg:SI 89 [ D.21562 ])) ..\Str\str.cpp:179 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:179 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 101)
        (reg:SI 0 ax)) ..\Str\str.cpp:179 -1
     (expr_list:REG_NOALIAS (reg/f:SI 101)
        (nil)))
(insn 13 12 14 2 (set (reg/f:SI 90 [ D.21563 ])
        (reg/f:SI 101)) ..\Str\str.cpp:179 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:179 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/j:SI (reg/f:SI 102) [0 this_11(D)->source+0 S4 A32])
        (reg/f:SI 90 [ D.21563 ])) ..\Str\str.cpp:179 -1
     (nil))
(insn 16 15 34 2 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:180 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              5 (DFS_BACK)
(code_label 34 16 17 4 87 "" [1 uses])
(note 17 34 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 103)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 other+0 S4 A32])) ..\Str\str.cpp:180 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 91 [ D.21561 ])
        (mem/j:SI (plus:SI (reg/f:SI 103)
                (const_int 4 [0x4])) [0 other_4(D)->size+0 S4 A32])) ..\Str\str.cpp:180 -1
     (nil))
(insn 20 19 21 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91 [ D.21561 ])
            (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:180 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) ..\Str\str.cpp:180 -1
     (nil)
 -> 37)
;;  succ:       6
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:181 -1
     (nil))
(insn 24 23 25 5 (set (reg/f:SI 92 [ D.21564 ])
        (mem/f/j:SI (reg/f:SI 104) [0 this_11(D)->source+0 S4 A32])) ..\Str\str.cpp:181 -1
     (nil))
(insn 25 24 26 5 (set (reg:SI 93 [ D.21565 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:181 -1
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg/f:SI 94 [ D.21564 ])
                (plus:SI (reg/f:SI 92 [ D.21564 ])
                    (reg:SI 93 [ D.21565 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:181 -1
     (nil))
(insn 27 26 28 5 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 other+0 S4 A32])) ..\Str\str.cpp:181 -1
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 95 [ D.21564 ])
        (mem/f/j:SI (reg/f:SI 105) [0 other_4(D)->source+0 S4 A32])) ..\Str\str.cpp:181 -1
     (nil))
(insn 29 28 30 5 (set (reg:SI 96 [ D.21565 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:181 -1
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg/f:SI 97 [ D.21564 ])
                (plus:SI (reg/f:SI 95 [ D.21564 ])
                    (reg:SI 96 [ D.21565 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:181 -1
     (nil))
(insn 31 30 32 5 (set (reg:QI 98 [ D.21566 ])
        (mem:QI (reg/f:SI 97 [ D.21564 ]) [0 *_20+0 S1 A8])) ..\Str\str.cpp:181 -1
     (nil))
(insn 32 31 33 5 (set (mem:QI (reg/f:SI 94 [ D.21564 ]) [0 *_17+0 S1 A8])
        (reg:QI 98 [ D.21566 ])) ..\Str\str.cpp:181 -1
     (nil))
(insn 33 32 35 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:180 -1
     (nil))
(jump_insn 35 33 36 5 (set (pc)
        (label_ref 34)) ..\Str\str.cpp:180 -1
     (nil)
 -> 34)
;;  succ:       4 (DFS_BACK)

(barrier 36 35 37)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 37 36 38 6 86 "" [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg/f:SI 106)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 other+0 S4 A32])) ..\Str\str.cpp:182 -1
     (nil))
(insn 40 39 41 6 (set (reg:SI 99 [ D.21561 ])
        (mem/j:SI (plus:SI (reg/f:SI 106)
                (const_int 4 [0x4])) [0 other_4(D)->size+0 S4 A32])) ..\Str\str.cpp:182 -1
     (nil))
(insn 41 40 42 6 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:182 -1
     (nil))
(insn 42 41 45 6 (set (mem/j:SI (plus:SI (reg/f:SI 107)
                (const_int 4 [0x4])) [0 this_11(D)->size+0 S4 A32])
        (reg:SI 99 [ D.21561 ])) ..\Str\str.cpp:182 -1
     (nil))
(insn 45 42 0 6 (const_int 0 [0]) ..\Str\str.cpp:183 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Str::Str() (_ZN3StrC2Ev, funcdef_no=1042, decl_uid=20941, cgraph_uid=219, symbol_order=220)

Str::Str() (struct Str * const this)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  this_2(D)->source = 0B;
  this_2(D)->size = 0;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (this_2(D) - 2 )


Partition map 

Partition 0 (this_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (this_2(D) - 2 )

Str::Str() (struct Str * const this)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  this_2(D)->source = 0B;
  this_2(D)->size = 0;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; this_2(D)->source = 0B;

(insn 6 5 7 (set (reg/f:SI 87)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:186 -1
     (nil))

(insn 7 6 0 (set (mem/f/j:SI (reg/f:SI 87) [0 this_2(D)->source+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:186 -1
     (nil))

;; this_2(D)->size = 0;

(insn 8 7 9 (set (reg/f:SI 88)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:187 -1
     (nil))

(insn 9 8 0 (set (mem/j:SI (plus:SI (reg/f:SI 88)
                (const_int 4 [0x4])) [0 this_2(D)->size+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:187 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:185 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 87)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:186 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/j:SI (reg/f:SI 87) [0 this_2(D)->source+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:186 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 88)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:187 -1
     (nil))
(insn 9 8 12 2 (set (mem/j:SI (plus:SI (reg/f:SI 88)
                (const_int 4 [0x4])) [0 this_2(D)->size+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:187 -1
     (nil))
(insn 12 9 0 2 (const_int 0 [0]) ..\Str\str.cpp:188 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Str::~Str() (_ZN3StrD2Ev, funcdef_no=1045, decl_uid=20964, cgraph_uid=222, symbol_order=223)

Str::~Str() (struct Str * const this)
{
  unsigned char * D.21446;
  unsigned char * D.21443;
  unsigned char * _4;
  unsigned char * _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = this_3(D)->source;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = this_3(D)->source;
  operator delete [] (_5);
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 

Partition 3 (this_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )


Partition map 

Partition 0 (this_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (this_3(D) - 3 )
Partition 1 (_4 - 4 )
Partition 2 (_5 - 5 )

Str::~Str() (struct Str * const this)
{
  unsigned char * D.21446;
  unsigned char * D.21443;
  unsigned char * _4;
  unsigned char * _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = this_3(D)->source;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = this_3(D)->source;
  operator delete [] (_5);
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _4 = this_3(D)->source;

(insn 6 5 7 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:191 -1
     (nil))

(insn 7 6 0 (set (reg/f:SI 87 [ D.21567 ])
        (mem/f/j:SI (reg/f:SI 89) [0 this_3(D)->source+0 S4 A32])) ..\Str\str.cpp:191 -1
     (nil))

;; if (_4 != 0B)

(insn 8 7 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.21567 ])
            (const_int 0 [0]))) ..\Str\str.cpp:191 -1
     (nil))

(jump_insn 9 8 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:191 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _5 = this_3(D)->source;

(insn 11 10 12 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:191 -1
     (nil))

(insn 12 11 0 (set (reg/f:SI 88 [ D.21567 ])
        (mem/f/j:SI (reg/f:SI 90) [0 this_3(D)->source+0 S4 A32])) ..\Str\str.cpp:191 -1
     (nil))

;; operator delete [] (_5);

(insn 13 12 14 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 88 [ D.21567 ])) ..\Str\str.cpp:191 -1
     (nil))

(call_insn 14 13 0 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:191 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 15 14 16 90 "" [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; MEM[(struct  &)this_3(D)] ={v} {CLOBBER};

(nil)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
Merging block 5 into block 4...
Merged blocks 4 and 5.
Merged 4 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:190 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:191 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 87 [ D.21567 ])
        (mem/f/j:SI (reg/f:SI 89) [0 this_3(D)->source+0 S4 A32])) ..\Str\str.cpp:191 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.21567 ])
            (const_int 0 [0]))) ..\Str\str.cpp:191 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 17)
            (pc))) ..\Str\str.cpp:191 509 {*jcc_1}
     (nil)
 -> 17)
;;  succ:       4 (FALLTHRU)
;;              6

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:191 -1
     (nil))
(insn 12 11 13 4 (set (reg/f:SI 88 [ D.21567 ])
        (mem/f/j:SI (reg/f:SI 90) [0 this_3(D)->source+0 S4 A32])) ..\Str\str.cpp:191 -1
     (nil))
(insn 13 12 14 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 88 [ D.21567 ])) ..\Str\str.cpp:191 -1
     (nil))
(call_insn 14 13 17 4 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:191 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
;;              2
(code_label 17 14 18 6 89 "" [1 uses])
(note 18 17 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function char* Str::getStr() (_ZN3Str6getStrEv, funcdef_no=1047, decl_uid=20935, cgraph_uid=224, symbol_order=225)

char* Str::getStr() (struct Str * const this)
{
  char * D.21448;
  char * _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = this_2(D)->source;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _3;
;;    succ:       EXIT

}



Partition map 

Partition 2 (this_2(D) - 2 )
Partition 3 (_3 - 3 )


Partition map 

Partition 0 (this_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (this_2(D) - 2 )
Partition 1 (_3 - 3 )

char* Str::getStr() (struct Str * const this)
{
  char * D.21448;
  char * _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = this_2(D)->source;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _3;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _3 = this_2(D)->source;

(insn 6 5 7 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:195 -1
     (nil))

(insn 7 6 0 (set (reg/f:SI 87 [ D.21568 ])
        (mem/f/j:SI (reg/f:SI 89) [0 this_2(D)->source+0 S4 A32])) ..\Str\str.cpp:195 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 8 7 9 93 "" [0 uses])

(note 9 8 0 NOTE_INSN_BASIC_BLOCK)

;; return _3;

(insn 10 9 11 (set (reg:SI 88 [ <retval> ])
        (reg/f:SI 87 [ D.21568 ])) ..\Str\str.cpp:195 -1
     (nil))

(jump_insn 11 10 12 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:195 -1
     (nil))

(barrier 12 11 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 11.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:194 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:195 -1
     (nil))
(insn 7 6 10 2 (set (reg/f:SI 87 [ D.21568 ])
        (mem/f/j:SI (reg/f:SI 89) [0 this_2(D)->source+0 S4 A32])) ..\Str\str.cpp:195 -1
     (nil))
(insn 10 7 14 2 (set (reg:SI 88 [ <retval> ])
        (reg/f:SI 87 [ D.21568 ])) ..\Str\str.cpp:195 -1
     (nil))
(insn 14 10 15 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) ..\Str\str.cpp:196 -1
     (nil))
(insn 15 14 0 2 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:196 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function int Str::getSize() (_ZN3Str7getSizeEv, funcdef_no=1048, decl_uid=20933, cgraph_uid=225, symbol_order=226)

int Str::getSize() (struct Str * const this)
{
  int D.21450;
  int _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = this_2(D)->size;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _3;
;;    succ:       EXIT

}



Partition map 

Partition 2 (this_2(D) - 2 )
Partition 3 (_3 - 3 )


Partition map 

Partition 0 (this_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (this_2(D) - 2 )
Partition 1 (_3 - 3 )

int Str::getSize() (struct Str * const this)
{
  int D.21450;
  int _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = this_2(D)->size;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _3;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _3 = this_2(D)->size;

(insn 6 5 7 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:199 -1
     (nil))

(insn 7 6 0 (set (reg:SI 87 [ D.21569 ])
        (mem/j:SI (plus:SI (reg/f:SI 89)
                (const_int 4 [0x4])) [0 this_2(D)->size+0 S4 A32])) ..\Str\str.cpp:199 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 8 7 9 95 "" [0 uses])

(note 9 8 0 NOTE_INSN_BASIC_BLOCK)

;; return _3;

(insn 10 9 11 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.21569 ])) ..\Str\str.cpp:199 -1
     (nil))

(jump_insn 11 10 12 (set (pc)
        (label_ref 0)) ..\Str\str.cpp:199 -1
     (nil))

(barrier 12 11 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 11.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:198 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:199 -1
     (nil))
(insn 7 6 10 2 (set (reg:SI 87 [ D.21569 ])
        (mem/j:SI (plus:SI (reg/f:SI 89)
                (const_int 4 [0x4])) [0 this_2(D)->size+0 S4 A32])) ..\Str\str.cpp:199 -1
     (nil))
(insn 10 7 14 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.21569 ])) ..\Str\str.cpp:199 -1
     (nil))
(insn 14 10 15 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) ..\Str\str.cpp:200 -1
     (nil))
(insn 15 14 0 2 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:200 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function void Str::clear() (_ZN3Str5clearEv, funcdef_no=1049, decl_uid=20937, cgraph_uid=226, symbol_order=227)

void Str::clear() (struct Str * const this)
{
  unsigned char * D.21455;
  unsigned char * D.21452;
  unsigned char * _4;
  unsigned char * _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = this_3(D)->source;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = this_3(D)->source;
  operator delete [] (_5);
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  this_3(D)->source = 0B;
  this_3(D)->size = 0;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 3 (this_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )


Partition map 

Partition 0 (this_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (this_3(D) - 3 )
Partition 1 (_4 - 4 )
Partition 2 (_5 - 5 )

void Str::clear() (struct Str * const this)
{
  unsigned char * D.21455;
  unsigned char * D.21452;
  unsigned char * _4;
  unsigned char * _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = this_3(D)->source;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = this_3(D)->source;
  operator delete [] (_5);
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  this_3(D)->source = 0B;
  this_3(D)->size = 0;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _4 = this_3(D)->source;

(insn 6 5 7 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:203 -1
     (nil))

(insn 7 6 0 (set (reg/f:SI 87 [ D.21570 ])
        (mem/f/j:SI (reg/f:SI 89) [0 this_3(D)->source+0 S4 A32])) ..\Str\str.cpp:203 -1
     (nil))

;; if (_4 != 0B)

(insn 8 7 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.21570 ])
            (const_int 0 [0]))) ..\Str\str.cpp:203 -1
     (nil))

(jump_insn 9 8 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:203 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _5 = this_3(D)->source;

(insn 11 10 12 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:203 -1
     (nil))

(insn 12 11 0 (set (reg/f:SI 88 [ D.21570 ])
        (mem/f/j:SI (reg/f:SI 90) [0 this_3(D)->source+0 S4 A32])) ..\Str\str.cpp:203 -1
     (nil))

;; operator delete [] (_5);

(insn 13 12 14 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 88 [ D.21570 ])) ..\Str\str.cpp:203 -1
     (nil))

(call_insn 14 13 0 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:203 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 15 14 16 97 "" [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; this_3(D)->source = 0B;

(insn 17 16 18 (set (reg/f:SI 91)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:204 -1
     (nil))

(insn 18 17 0 (set (mem/f/j:SI (reg/f:SI 91) [0 this_3(D)->source+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:204 -1
     (nil))

;; this_3(D)->size = 0;

(insn 19 18 20 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:205 -1
     (nil))

(insn 20 19 0 (set (mem/j:SI (plus:SI (reg/f:SI 92)
                (const_int 4 [0x4])) [0 this_3(D)->size+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:205 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:202 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:203 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 87 [ D.21570 ])
        (mem/f/j:SI (reg/f:SI 89) [0 this_3(D)->source+0 S4 A32])) ..\Str\str.cpp:203 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.21570 ])
            (const_int 0 [0]))) ..\Str\str.cpp:203 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) ..\Str\str.cpp:203 -1
     (nil)
 -> 15)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:203 -1
     (nil))
(insn 12 11 13 4 (set (reg/f:SI 88 [ D.21570 ])
        (mem/f/j:SI (reg/f:SI 90) [0 this_3(D)->source+0 S4 A32])) ..\Str\str.cpp:203 -1
     (nil))
(insn 13 12 14 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 88 [ D.21570 ])) ..\Str\str.cpp:203 -1
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:203 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 15 14 16 5 97 "" [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg/f:SI 91)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:204 -1
     (nil))
(insn 18 17 19 5 (set (mem/f/j:SI (reg/f:SI 91) [0 this_3(D)->source+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:204 -1
     (nil))
(insn 19 18 20 5 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:205 -1
     (nil))
(insn 20 19 23 5 (set (mem/j:SI (plus:SI (reg/f:SI 92)
                (const_int 4 [0x4])) [0 this_3(D)->size+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:205 -1
     (nil))
(insn 23 20 0 5 (const_int 0 [0]) ..\Str\str.cpp:206 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function void __tcf_0() (__tcf_0, funcdef_no=1051, decl_uid=21136, cgraph_uid=227, symbol_order=274)

void __tcf_0() ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  std::ios_base::Init::~Init (&__ioinit);
  return;
;;    succ:       EXIT

}



Partition map 


After Coalescing:

Partition map 


void __tcf_0() ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  std::ios_base::Init::~Init (&__ioinit);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; std::ios_base::Init::~Init (&__ioinit);

(insn 5 4 6 (set (reg:SI 2 cx)
        (symbol_ref:SI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 04e13840 __ioinit>)) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 -1
     (nil))

(call_insn 6 5 0 (call (mem:QI (symbol_ref:SI ("_ZNSt8ios_base4InitD1Ev") [flags 0x43]  <function_decl 04b2df80 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 -1
     (nil)
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 2 cx)
        (symbol_ref:SI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 04e13840 __ioinit>)) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 -1
     (nil))
(call_insn 6 5 0 2 (call (mem:QI (symbol_ref:SI ("_ZNSt8ios_base4InitD1Ev") [flags 0x43]  <function_decl 04b2df80 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 -1
     (nil)
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1050, decl_uid=21132, cgraph_uid=228, symbol_order=275)

void __static_initialization_and_destruction_0(int, int) (int __initialize_p, int __priority)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (__initialize_p_2(D) == 1)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  if (__priority_4(D) == 65535)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  std::ios_base::Init::Init (&__ioinit);
  atexit (__tcf_0);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                4
;;                3
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (__initialize_p_2(D) - 2 )
Partition 4 (__priority_4(D) - 4 )


Partition map 

Partition 0 (__initialize_p_2(D) - 2 )
Partition 1 (__priority_4(D) - 4 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (__initialize_p_2(D) - 2 )
Partition 1 (__priority_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (__initialize_p_2(D) - 2 )
Partition 1 (__priority_4(D) - 4 )

void __static_initialization_and_destruction_0(int, int) (int __initialize_p, int __priority)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (__initialize_p_2(D) == 1)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  if (__priority_4(D) == 65535)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  std::ios_base::Init::Init (&__ioinit);
  atexit (__tcf_0);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                4
;;                3
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (__initialize_p_2(D) == 1)

(insn 5 4 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) ..\Str\str.cpp:206 -1
     (nil))

(jump_insn 6 5 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:206 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (__priority_4(D) == 65535)

(insn 8 7 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) ..\Str\str.cpp:206 -1
     (nil))

(jump_insn 9 8 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ..\Str\str.cpp:206 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; std::ios_base::Init::Init (&__ioinit);

(insn 11 10 12 (set (reg:SI 2 cx)
        (symbol_ref:SI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 04e13840 __ioinit>)) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 -1
     (nil))

(call_insn 12 11 0 (call (mem:QI (symbol_ref:SI ("_ZNSt8ios_base4InitC1Ev") [flags 0x43]  <function_decl 04b2de80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 -1
     (nil)
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))

;; atexit (__tcf_0);

(insn 13 12 14 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref:SI ("__tcf_0") [flags 0x3]  <function_decl 04e5fe80 __tcf_0>)) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 -1
     (nil))

(call_insn 14 13 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("atexit") [flags 0x43]  <function_decl 04e5ff00 atexit>) [0 atexit S1 A8])
            (const_int 4 [0x4]))) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; Generating RTL for gimple basic block 5

;; 

(code_label 15 14 16 100 "" [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->6 redirected to 7
Edge 4->6 redirected to 7
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) ..\Str\str.cpp:206 -1
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 17)
            (pc))) ..\Str\str.cpp:206 509 {*jcc_1}
     (nil)
 -> 17)
;;  succ:       4 (FALLTHRU)
;;              7

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 7 6 8 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) ..\Str\str.cpp:206 -1
     (nil))
(jump_insn 9 8 10 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 17)
            (pc))) ..\Str\str.cpp:206 509 {*jcc_1}
     (nil)
 -> 17)
;;  succ:       5 (FALLTHRU)
;;              7

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 10 9 11 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 5 (set (reg:SI 2 cx)
        (symbol_ref:SI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 04e13840 __ioinit>)) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 -1
     (nil))
(call_insn 12 11 13 5 (call (mem:QI (symbol_ref:SI ("_ZNSt8ios_base4InitC1Ev") [flags 0x43]  <function_decl 04b2de80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 -1
     (nil)
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn 13 12 14 5 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref:SI ("__tcf_0") [flags 0x3]  <function_decl 04e5fe80 __tcf_0>)) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 -1
     (nil))
(call_insn 14 13 17 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("atexit") [flags 0x43]  <function_decl 04e5ff00 atexit>) [0 atexit S1 A8])
            (const_int 4 [0x4]))) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              2
;;              4
(code_label 17 14 18 7 99 "" [2 uses])
(note 18 17 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function (static initializers for ..\Str\str.cpp) (_GLOBAL__sub_I__Z9lowerCasei, funcdef_no=1052, decl_uid=21139, cgraph_uid=229, symbol_order=375)

(static initializers for ..\Str\str.cpp) ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __static_initialization_and_destruction_0 (1, 65535);
  return;
;;    succ:       EXIT

}



Partition map 


After Coalescing:

Partition map 


(static initializers for ..\Str\str.cpp) ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __static_initialization_and_destruction_0 (1, 65535);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; __static_initialization_and_destruction_0 (1, 65535);

(insn 5 4 6 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (const_int 65535 [0xffff])) ..\Str\str.cpp:206 -1
     (nil))

(insn 6 5 7 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 1 [0x1])) ..\Str\str.cpp:206 -1
     (nil))

(call_insn 7 6 0 (call (mem:QI (symbol_ref:SI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 04e5fe00 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 8 [0x8])) ..\Str\str.cpp:206 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (const_int 65535 [0xffff])) ..\Str\str.cpp:206 -1
     (nil))
(insn 6 5 7 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 1 [0x1])) ..\Str\str.cpp:206 -1
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:SI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 04e5fe00 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 8 [0x8])) ..\Str\str.cpp:206 -1
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
;;  succ:       EXIT [100,0%]  (FALLTHRU)

