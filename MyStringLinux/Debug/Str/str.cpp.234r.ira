
;; Function int lowerCase(int) (_Z9lowerCasei, funcdef_no=1016, decl_uid=20970, cgraph_uid=193, symbol_order=194)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 9 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:10
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7

   Insn 35(l0): point = 0
   Insn 34(l0): point = 2
   Insn 30(l0): point = 4
   Insn 25(l0): point = 7
   Insn 37(l0): point = 10
   Insn 20(l0): point = 12
   Insn 19(l0): point = 14
   Insn 16(l0): point = 17
   Insn 15(l0): point = 19
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 9(l0): point = 27
   Insn 8(l0): point = 29
   Insn 6(l0): point = 32
   Insn 5(l0): point = 34
 a0(r88): [3..4]
 a1(r87): [10..12] [5..7]
 a2(r89): [13..14]
Compressing live ranges: from 37 to 8 - 21%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..5]
 a2(r89): [6..7]
  regions=1, blocks=9, points=8
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int lowerCase(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,8u} r7={1d,8u} r16={1d,13u,1e} r17={5d,4u} r20={1d,8u} r87={2d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 64{17d,46u,1e} in 15{15 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 16 argp) [0 src+0 S4 A32])
            (const_int 64 [0x40]))) ..\Str\str.cpp:14 7 {*cmpsi_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 10)
            (pc))) ..\Str\str.cpp:14 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 10)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 16 argp) [0 src+0 S4 A32])
            (const_int 90 [0x5a]))) ..\Str\str.cpp:14 7 {*cmpsi_1}
     (nil))
(jump_insn 9 8 10 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) ..\Str\str.cpp:14 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 17)
;;  succ:       6
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 10 9 11 4 2 "" [1 uses])
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 16 argp) [0 src+0 S4 A32])
            (const_int 191 [0xbf]))) ..\Str\str.cpp:14 7 {*cmpsi_1}
     (nil))
(jump_insn 13 12 14 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) ..\Str\str.cpp:14 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 23)
;;  succ:       5 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 16 argp) [0 src+0 S4 A32])
            (const_int 223 [0xdf]))) ..\Str\str.cpp:14 7 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) ..\Str\str.cpp:14 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 23)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 89
(code_label 17 16 18 6 3 "" [1 uses])
(note 18 17 19 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 6 (set (reg:SI 89)
        (mem/c:SI (reg/f:SI 16 argp) [0 src+0 S4 A32])) ..\Str\str.cpp:14 83 {*movsi_internal}
     (nil))
(insn 20 19 37 6 (parallel [
            (set (reg:SI 87 [ D.21490 ])
                (plus:SI (reg:SI 89)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:14 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [0 src+0 S4 A32])
                    (const_int 32 [0x20]))
                (nil)))))
(jump_insn 37 20 38 6 (set (pc)
        (label_ref 28)) ..\Str\str.cpp:14 551 {jump}
     (nil)
 -> 28)
;;  succ:       8 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 38 37 23)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 23 38 24 7 4 "" [2 uses])
(note 24 23 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 28 7 (set (reg:SI 87 [ D.21490 ])
        (mem/c:SI (reg/f:SI 16 argp) [0 src+0 S4 A32])) ..\Str\str.cpp:14 83 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6 [100,0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 88
(code_label 28 25 29 8 6 "" [1 uses])
(note 29 28 30 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 34 8 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.21490 ])) ..\Str\str.cpp:14 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.21490 ])
        (nil)))
(insn 34 30 35 8 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) ..\Str\str.cpp:15 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ <retval> ])
        (nil)))
(insn 35 34 0 8 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:15 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool operator==(const Str&, const Str&) (_ZeqRK3StrS1_, funcdef_no=1017, decl_uid=20893, cgraph_uid=194, symbol_order=195)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 9 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a6 (r97,l0) best Q_REGS, allocno Q_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a7 (r93,l0) best Q_REGS, allocno Q_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a1 (r87,l0) best Q_REGS, allocno Q_REGS

  a0(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:7
  a2(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:7
  a7(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:7
  a8(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a9(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a10(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a11(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a12(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a13(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a14(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a15(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a16(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a17(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a18(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a19(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 52(l0): point = 0
   Insn 51(l0): point = 2
   Insn 47(l0): point = 4
   Insn 44(l0): point = 7
   Insn 43(l0): point = 9
   Insn 42(l0): point = 11
   Insn 41(l0): point = 13
   Insn 29(l0): point = 16
   Insn 28(l0): point = 18
   Insn 27(l0): point = 20
   Insn 26(l0): point = 22
   Insn 25(l0): point = 24
   Insn 24(l0): point = 26
   Insn 23(l0): point = 28
   Insn 22(l0): point = 30
   Insn 21(l0): point = 32
   Insn 20(l0): point = 34
   Insn 19(l0): point = 36
   Insn 18(l0): point = 38
   Insn 56(l0): point = 41
   Insn 36(l0): point = 43
   Insn 34(l0): point = 46
   Insn 33(l0): point = 48
   Insn 32(l0): point = 50
   Insn 31(l0): point = 52
   Insn 54(l0): point = 55
   Insn 13(l0): point = 57
   Insn 11(l0): point = 60
   Insn 10(l0): point = 62
   Insn 9(l0): point = 64
   Insn 8(l0): point = 66
   Insn 7(l0): point = 68
   Insn 6(l0): point = 70
   Insn 5(l0): point = 72
 a0(r100): [3..4]
 a1(r87): [55..57] [5..7]
 a2(r99): [10..11]
 a3(r106): [12..13]
 a4(r98): [49..50]
 a5(r105): [51..52]
 a6(r97): [19..20]
 a7(r93): [19..30]
 a8(r96): [21..22]
 a9(r95): [23..24]
 a10(r94): [23..26]
 a11(r104): [27..28]
 a12(r92): [31..32]
 a13(r91): [33..34]
 a14(r90): [33..36]
 a15(r103): [37..38]
 a16(r89): [63..64]
 a17(r88): [63..68]
 a18(r102): [65..66]
 a19(r101): [69..70]
Compressing live ranges: from 75 to 34 - 45%
Ranges after the compression:
 a0(r100): [0..1]
 a1(r87): [26..27] [2..3]
 a2(r99): [4..5]
 a3(r106): [6..7]
 a4(r98): [22..23]
 a5(r105): [24..25]
 a6(r97): [8..9]
 a7(r93): [8..15]
 a8(r96): [10..11]
 a9(r95): [12..13]
 a10(r94): [12..13]
 a11(r104): [14..15]
 a12(r92): [16..17]
 a13(r91): [18..19]
 a14(r90): [18..19]
 a15(r103): [20..21]
 a16(r89): [28..29]
 a17(r88): [28..31]
 a18(r102): [30..31]
 a19(r101): [32..33]
  regions=1, blocks=9, points=34
    allocnos=20 (big 0), copies=0, conflicts=0, ranges=21
Disposition:
    1:r87  l0     0   17:r88  l0     1   16:r89  l0     0   14:r90  l0     1
   13:r91  l0     0   12:r92  l0     0    7:r93  l0     1   10:r94  l0     2
    9:r95  l0     0    8:r96  l0     0    6:r97  l0     0    4:r98  l0     0
    2:r99  l0     0    0:r100 l0     0   19:r101 l0     0   18:r102 l0     0
   15:r103 l0     0   11:r104 l0     0    5:r105 l0     0    3:r106 l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool operator==(const Str&, const Str&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,8u} r7={1d,8u} r16={1d,13u} r17={7d,4u} r20={1d,15u} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} 
;;    total ref usage 106{36d,70u,0e} in 34{34 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89 101 102
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:19 83 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 101)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:20 83 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 88 [ D.21492 ])
        (mem/j:SI (plus:SI (reg/f:SI 101)
                (const_int 4 [0x4])) [0 left_5(D)->size+0 S4 A32])) ..\Str\str.cpp:20 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:20 83 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 89 [ D.21492 ])
        (mem/j:SI (plus:SI (reg/f:SI 102)
                (const_int 4 [0x4])) [0 right_7(D)->size+0 S4 A32])) ..\Str\str.cpp:20 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.21492 ])
            (reg:SI 89 [ D.21492 ]))) ..\Str\str.cpp:20 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.21492 ])
        (expr_list:REG_DEAD (reg:SI 88 [ D.21492 ])
            (nil))))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) ..\Str\str.cpp:20 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 16)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 54 3 (set (reg:QI 87 [ D.21491 ])
        (const_int 0 [0])) ..\Str\str.cpp:21 86 {*movqi_internal}
     (nil))
(jump_insn 54 13 55 3 (set (pc)
        (label_ref 45)) ..\Str\str.cpp:21 551 {jump}
     (nil)
 -> 45)
;;  succ:       8 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 55 54 16)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              6 [100,0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90 91 92 93 94 95 96 97 103 104
(code_label 16 55 17 4 8 "" [2 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 103)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:22 83 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg/f:SI 90 [ D.21493 ])
        (mem/f/j:SI (reg/f:SI 103) [0 left_5(D)->source+0 S4 A32])) ..\Str\str.cpp:22 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 20 19 21 4 (set (reg:SI 91 [ D.21494 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:22 83 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:SI 92 [ D.21493 ])
                (plus:SI (reg/f:SI 90 [ D.21493 ])
                    (reg:SI 91 [ D.21494 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:22 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ D.21494 ])
        (expr_list:REG_DEAD (reg/f:SI 90 [ D.21493 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 22 21 23 4 (set (reg:QI 93 [ D.21495 ])
        (mem:QI (reg/f:SI 92 [ D.21493 ]) [0 *_12+0 S1 A8])) ..\Str\str.cpp:22 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92 [ D.21493 ])
        (nil)))
(insn 23 22 24 4 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:22 83 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg/f:SI 94 [ D.21493 ])
        (mem/f/j:SI (reg/f:SI 104) [0 right_7(D)->source+0 S4 A32])) ..\Str\str.cpp:22 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 25 24 26 4 (set (reg:SI 95 [ D.21494 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:22 83 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg/f:SI 96 [ D.21493 ])
                (plus:SI (reg/f:SI 94 [ D.21493 ])
                    (reg:SI 95 [ D.21494 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:22 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ D.21494 ])
        (expr_list:REG_DEAD (reg/f:SI 94 [ D.21493 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 27 26 28 4 (set (reg:QI 97 [ D.21495 ])
        (mem:QI (reg/f:SI 96 [ D.21493 ]) [0 *_16+0 S1 A8])) ..\Str\str.cpp:22 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ D.21493 ])
        (nil)))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ D.21495 ])
            (reg:QI 97 [ D.21495 ]))) ..\Str\str.cpp:22 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 97 [ D.21495 ])
        (expr_list:REG_DEAD (reg:QI 93 [ D.21495 ])
            (nil))))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) ..\Str\str.cpp:22 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 39)
;;  succ:       7
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 98 105
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:22 83 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (set (reg:SI 98 [ D.21492 ])
        (mem/j:SI (plus:SI (reg/f:SI 105)
                (const_int 4 [0x4])) [0 left_5(D)->size+0 S4 A32])) ..\Str\str.cpp:22 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 33 32 34 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 98 [ D.21492 ])
            (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:22 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ D.21492 ])
        (nil)))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) ..\Str\str.cpp:22 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 39)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 56 6 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:22 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 56 36 57 6 (set (pc)
        (label_ref 16)) ..\Str\str.cpp:22 551 {jump}
     (nil)
 -> 16)
;;  succ:       4 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 57 56 39)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 99 106
(code_label 39 57 40 7 10 "" [2 uses])
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg/f:SI 106)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:23 83 {*movsi_internal}
     (nil))
(insn 42 41 43 7 (set (reg:SI 99 [ D.21492 ])
        (mem/j:SI (plus:SI (reg/f:SI 106)
                (const_int 4 [0x4])) [0 left_5(D)->size+0 S4 A32])) ..\Str\str.cpp:23 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 43 42 44 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.21492 ])
            (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:23 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ D.21492 ])
        (nil)))
(insn 44 43 45 7 (set (reg:QI 87 [ D.21491 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ..\Str\str.cpp:23 504 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              3 [100,0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 100
(code_label 45 44 46 8 9 "" [1 uses])
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 51 8 (set (reg:QI 100 [ <retval> ])
        (reg:QI 87 [ D.21491 ])) 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ D.21491 ])
        (nil)))
(insn 51 47 52 8 (set (reg/i:QI 0 ax)
        (reg:QI 100 [ <retval> ])) ..\Str\str.cpp:24 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 100 [ <retval> ])
        (nil)))
(insn 52 51 0 8 (use (reg/i:QI 0 ax)) ..\Str\str.cpp:24 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool operator!=(const Str&, const Str&) (_ZneRK3StrS1_, funcdef_no=1018, decl_uid=20914, cgraph_uid=195, symbol_order=196)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:2
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 5(l0): point = 18
 a0(r89): [3..4]
 a1(r88): [5..6]
 a2(r87): [7..8]
 a3(r91): [13..14]
 a4(r90): [17..18]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r87): [4..5]
 a3(r91): [6..7]
 a4(r90): [8..9]
  regions=1, blocks=3, points=10
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    2:r87  l0     0    1:r88  l0     0    0:r89  l0     0    4:r90  l0     0
    3:r91  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool operator!=(const Str&, const Str&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r6={1d,2u} r7={1d,7u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d} r18={1d} r19={1d} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 110{88d,22u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:27 83 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90)) ..\Str\str.cpp:27 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:27 83 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:27 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(call_insn 9 8 10 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZeqRK3StrS1_") [flags 0x3]  <function_decl 04e59480 operator==>) [0 operator== S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:27 565 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 10 9 11 2 (set (reg:QI 87 [ D.21496 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:27 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 11 10 14 2 (parallel [
            (set (reg:QI 88 [ D.21496 ])
                (xor:QI (reg:QI 87 [ D.21496 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:27 344 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 87 [ D.21496 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 11 18 2 (set (reg:QI 89 [ <retval> ])
        (reg:QI 88 [ D.21496 ])) ..\Str\str.cpp:27 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 88 [ D.21496 ])
        (nil)))
(insn 18 14 19 2 (set (reg/i:QI 0 ax)
        (reg:QI 89 [ <retval> ])) ..\Str\str.cpp:28 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 89 [ <retval> ])
        (nil)))
(insn 19 18 0 2 (use (reg/i:QI 0 ax)) ..\Str\str.cpp:28 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const char& Str::operator[](int) const (_ZNK3StrixEi, funcdef_no=1019, decl_uid=20928, cgraph_uid=196, symbol_order=197)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a3 (r92,l0) best Q_REGS, allocno Q_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r87,l0) best Q_REGS, allocno Q_REGS

  a0(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:6
  a3(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:7
  a4(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a7(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a9(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 36(l0): point = 0
   Insn 35(l0): point = 2
   Insn 31(l0): point = 4
   Insn 28(l0): point = 6
   Insn 27(l0): point = 8
   Insn 24(l0): point = 11
   Insn 38(l0): point = 14
   Insn 19(l0): point = 16
   Insn 18(l0): point = 18
   Insn 17(l0): point = 20
   Insn 16(l0): point = 22
   Insn 15(l0): point = 24
   Insn 14(l0): point = 26
   Insn 12(l0): point = 29
   Insn 11(l0): point = 31
   Insn 10(l0): point = 33
   Insn 9(l0): point = 35
   Insn 7(l0): point = 38
   Insn 6(l0): point = 40
   Insn 2(l0): point = 42
 a0(r94): [3..4]
 a1(r93): [5..6]
 a2(r87): [14..16] [9..11]
 a3(r92): [17..18]
 a4(r91): [19..20]
 a5(r90): [21..22]
 a6(r89): [21..24]
 a7(r96): [25..26]
 a8(r88): [32..33]
 a9(r95): [34..35]
Compressing live ranges: from 45 to 20 - 44%
Ranges after the compression:
 a0(r94): [0..1]
 a1(r93): [2..3]
 a2(r87): [4..7]
 a3(r92): [8..9]
 a4(r91): [10..11]
 a5(r90): [12..13]
 a6(r89): [12..13]
 a7(r96): [14..15]
 a8(r88): [16..17]
 a9(r95): [18..19]
  regions=1, blocks=7, points=20
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    2:r87  l0     0    8:r88  l0     0    6:r89  l0     1    5:r90  l0     0
    4:r91  l0     0    3:r92  l0     0    1:r93  l0     0    0:r94  l0     0
    9:r95  l0     0    7:r96  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const char& Str::operator[](int) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d,1u} r6={1d,6u} r7={1d,6u} r16={1d,8u} r17={3d,2u} r20={1d,10u} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 67{22d,45u,0e} in 20{20 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:31 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (reg/f:SI 16 argp) [0 i+0 S4 A32])
            (const_int 0 [0]))) ..\Str\str.cpp:32 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ..\Str\str.cpp:32 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 22)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 95
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:32 83 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:SI 88 [ D.21498 ])
        (mem/j:SI (plus:SI (reg/f:SI 95)
                (const_int 4 [0x4])) [0 this_4(D)->size+0 S4 A32])) ..\Str\str.cpp:32 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (nil)))
(insn 11 10 12 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.21498 ])
            (mem/c:SI (reg/f:SI 16 argp) [0 i+0 S4 A32]))) ..\Str\str.cpp:32 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ D.21498 ])
        (nil)))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ..\Str\str.cpp:32 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 22)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 89 90 91 92 96
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:SI 96)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:32 83 {*movsi_internal}
     (nil))
(insn 15 14 16 4 (set (reg/f:SI 89 [ D.21499 ])
        (mem/f/j:SI (reg/f:SI 96) [0 this_4(D)->source+0 S4 A32])) ..\Str\str.cpp:32 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(insn 16 15 17 4 (set (reg:SI 90 [ D.21500 ])
        (mem/c:SI (reg/f:SI 16 argp) [0 i+0 S4 A32])) ..\Str\str.cpp:32 83 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg/f:SI 91 [ D.21499 ])
                (plus:SI (reg/f:SI 89 [ D.21499 ])
                    (reg:SI 90 [ D.21500 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:32 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ D.21500 ])
        (expr_list:REG_DEAD (reg/f:SI 89 [ D.21499 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 18 17 19 4 (set (reg:QI 92 [ D.21501 ])
        (mem:QI (reg/f:SI 91 [ D.21499 ]) [0 *_8+0 S1 A8])) ..\Str\str.cpp:32 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ D.21499 ])
        (nil)))
(insn 19 18 38 4 (set (reg:QI 87 [ D.21497 ])
        (reg:QI 92 [ D.21501 ])) ..\Str\str.cpp:32 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 92 [ D.21501 ])
        (nil)))
(jump_insn 38 19 39 4 (set (pc)
        (label_ref 25)) ..\Str\str.cpp:32 551 {jump}
     (nil)
 -> 25)
;;  succ:       6 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 39 38 22)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 22 39 23 5 14 "" [2 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg:QI 87 [ D.21497 ])
        (const_int 0 [0])) ..\Str\str.cpp:32 86 {*movqi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4 [100,0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 93 94
(code_label 25 24 26 6 15 "" [1 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 D.20987+0 S1 A8])
        (reg:QI 87 [ D.21497 ])) ..\Str\str.cpp:32 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ D.21497 ])
        (nil)))
(insn 28 27 31 6 (set (reg/f:SI 93 [ D.21502 ])
        (const_int 0 [0])) ..\Str\str.cpp:32 83 {*movsi_internal}
     (nil))
(insn 31 28 35 6 (set (reg:SI 94 [ <retval> ])
        (reg/f:SI 93 [ D.21502 ])) ..\Str\str.cpp:32 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93 [ D.21502 ])
        (nil)))
(insn 35 31 36 6 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) ..\Str\str.cpp:33 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ <retval> ])
        (nil)))
(insn 36 35 0 6 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:33 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function unsigned char& Str::operator[](int) (_ZN3StrixEi, funcdef_no=1020, decl_uid=20931, cgraph_uid=197, symbol_order=198)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 33(l0): point = 0
   Insn 32(l0): point = 2
   Insn 28(l0): point = 4
   Insn 25(l0): point = 6
   Insn 22(l0): point = 9
   Insn 35(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 12(l0): point = 23
   Insn 11(l0): point = 25
   Insn 10(l0): point = 27
   Insn 9(l0): point = 29
   Insn 7(l0): point = 32
   Insn 6(l0): point = 34
   Insn 2(l0): point = 36
 a0(r92): [3..4]
 a1(r91): [5..6]
 a2(r87): [12..14] [7..9]
 a3(r90): [15..16]
 a4(r89): [15..18]
 a5(r94): [19..20]
 a6(r88): [26..27]
 a7(r93): [28..29]
Compressing live ranges: from 39 to 16 - 41%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r87): [4..7]
 a3(r90): [8..9]
 a4(r89): [8..9]
 a5(r94): [10..11]
 a6(r88): [12..13]
 a7(r93): [14..15]
  regions=1, blocks=7, points=16
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    2:r87  l0     0    6:r88  l0     0    4:r89  l0     1    3:r90  l0     0
    1:r91  l0     0    0:r92  l0     0    7:r93  l0     0    5:r94  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


unsigned char& Str::operator[](int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d,1u} r6={1d,6u} r7={1d,6u} r16={1d,8u} r17={3d,2u} r20={1d,9u} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 62{20d,42u,0e} in 17{17 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:36 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (reg/f:SI 16 argp) [0 i+0 S4 A32])
            (const_int 0 [0]))) ..\Str\str.cpp:38 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) ..\Str\str.cpp:38 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 20)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 93
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:38 83 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:SI 88 [ D.21504 ])
        (mem/j:SI (plus:SI (reg/f:SI 93)
                (const_int 4 [0x4])) [0 this_4(D)->size+0 S4 A32])) ..\Str\str.cpp:38 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (nil)))
(insn 11 10 12 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.21504 ])
            (mem/c:SI (reg/f:SI 16 argp) [0 i+0 S4 A32]))) ..\Str\str.cpp:38 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ D.21504 ])
        (nil)))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) ..\Str\str.cpp:38 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 20)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 89 90 94
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:38 83 {*movsi_internal}
     (nil))
(insn 15 14 16 4 (set (reg/f:SI 89 [ D.21503 ])
        (mem/f/j:SI (reg/f:SI 94) [0 this_4(D)->source+0 S4 A32])) ..\Str\str.cpp:38 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(insn 16 15 17 4 (set (reg:SI 90 [ D.21505 ])
        (mem/c:SI (reg/f:SI 16 argp) [0 i+0 S4 A32])) ..\Str\str.cpp:38 83 {*movsi_internal}
     (nil))
(insn 17 16 35 4 (parallel [
            (set (reg/f:SI 87 [ D.21503 ])
                (plus:SI (reg/f:SI 89 [ D.21503 ])
                    (reg:SI 90 [ D.21505 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:38 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ D.21505 ])
        (expr_list:REG_DEAD (reg/f:SI 89 [ D.21503 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(jump_insn 35 17 36 4 (set (pc)
        (label_ref 23)) ..\Str\str.cpp:38 551 {jump}
     (nil)
 -> 23)
;;  succ:       6 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 36 35 20)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 20 36 21 5 18 "" [2 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:SI 87 [ D.21503 ])
        (symbol_ref:SI ("_ZZN3StrixEiE5DUMMY") [flags 0x2]  <var_decl 04e13b00 DUMMY>)) ..\Str\str.cpp:38 83 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4 [100,0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 91 92
(code_label 23 22 24 6 19 "" [1 uses])
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 28 6 (set (reg/f:SI 91 [ D.21506 ])
        (reg/f:SI 87 [ D.21503 ])) ..\Str\str.cpp:38 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ D.21503 ])
        (nil)))
(insn 28 25 32 6 (set (reg:SI 92 [ <retval> ])
        (reg/f:SI 91 [ D.21506 ])) ..\Str\str.cpp:38 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ D.21506 ])
        (nil)))
(insn 32 28 33 6 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) ..\Str\str.cpp:39 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ <retval> ])
        (nil)))
(insn 33 32 0 6 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:39 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool operator>(const Str&, const Str&) (_ZgtRK3StrS1_, funcdef_no=1021, decl_uid=20917, cgraph_uid=198, symbol_order=199)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 18 count 14 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 57.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r116: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r116,l0) best Q_REGS, allocno Q_REGS
    r115: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a3 (r115,l0) best Q_REGS, allocno Q_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r105,l0) best AREG, allocno GENERAL_REGS
    r104: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a1 (r104,l0) best Q_REGS, allocno Q_REGS
    r103: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r103,l0) best AREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a6 (r101,l0) best Q_REGS, allocno Q_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r97,l0) best AREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a13 (r95,l0) best Q_REGS, allocno Q_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:7
  a2(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a3(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a4(r103,l0) costs: AREG:2 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a5(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:7
  a7(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a8(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a9(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a10(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a11(r97,l0) costs: AREG:2 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a12(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a13(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:7
  a14(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a15(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a16(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a17(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a18(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a19(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a20(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:12
  a21(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a22(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a23(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a24(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a25(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a26(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a27(r88,l0) costs: AREG:2 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a28(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a29(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 94(l0): point = 0
   Insn 93(l0): point = 2
   Insn 89(l0): point = 4
   Insn 86(l0): point = 6
   Insn 100(l0): point = 9
   Insn 73(l0): point = 11
   Insn 98(l0): point = 14
   Insn 64(l0): point = 16
   Insn 38(l0): point = 19
   Insn 37(l0): point = 21
   Insn 36(l0): point = 23
   Insn 35(l0): point = 25
   Insn 102(l0): point = 28
   Insn 78(l0): point = 30
   Insn 71(l0): point = 33
   Insn 70(l0): point = 35
   Insn 69(l0): point = 37
   Insn 62(l0): point = 40
   Insn 61(l0): point = 42
   Insn 60(l0): point = 44
   Insn 59(l0): point = 46
   Insn 58(l0): point = 48
   Insn 57(l0): point = 50
   Insn 56(l0): point = 52
   Insn 55(l0): point = 54
   Insn 54(l0): point = 56
   Insn 53(l0): point = 58
   Insn 52(l0): point = 60
   Insn 51(l0): point = 62
   Insn 50(l0): point = 64
   Insn 49(l0): point = 66
   Insn 48(l0): point = 68
   Insn 47(l0): point = 70
   Insn 46(l0): point = 72
   Insn 45(l0): point = 74
   Insn 44(l0): point = 76
   Insn 43(l0): point = 78
   Insn 42(l0): point = 80
   Insn 41(l0): point = 82
   Insn 40(l0): point = 84
   Insn 33(l0): point = 87
   Insn 32(l0): point = 89
   Insn 29(l0): point = 92
   Insn 28(l0): point = 94
   Insn 96(l0): point = 97
   Insn 23(l0): point = 99
   Insn 22(l0): point = 101
   Insn 20(l0): point = 104
   Insn 19(l0): point = 106
   Insn 18(l0): point = 108
   Insn 17(l0): point = 110
   Insn 16(l0): point = 112
   Insn 15(l0): point = 114
   Insn 13(l0): point = 117
   Insn 12(l0): point = 119
   Insn 11(l0): point = 121
   Insn 10(l0): point = 123
   Insn 9(l0): point = 125
   Insn 8(l0): point = 127
   Insn 7(l0): point = 129
   Insn 6(l0): point = 131
   Insn 5(l0): point = 133
 a0(r105): [3..4]
 a1(r104): [5..6]
 a2(r116): [36..37]
 a3(r115): [43..44]
 a4(r103): [47..48]
 a5(r102): [53..54]
 a6(r101): [55..56]
 a7(r100): [57..58]
 a8(r99): [59..60]
 a9(r98): [59..62]
 a10(r114): [63..64]
 a11(r97): [67..68]
 a12(r96): [73..74]
 a13(r95): [75..76]
 a14(r94): [77..78]
 a15(r93): [79..80]
 a16(r92): [79..82]
 a17(r113): [83..84]
 a18(r91): [22..23]
 a19(r112): [24..25]
 a20(r87): [97..99] [90..92]
 a21(r111): [93..94]
 a22(r110): [100..101]
 a23(r90): [107..108]
 a24(r89): [107..112]
 a25(r109): [109..110]
 a26(r108): [113..114]
 a27(r88): [120..121]
 a28(r107): [126..127]
 a29(r106): [130..131]
Compressing live ranges: from 136 to 56 - 41%
Ranges after the compression:
 a0(r105): [0..1]
 a1(r104): [2..3]
 a2(r116): [8..9]
 a3(r115): [10..11]
 a4(r103): [12..13]
 a5(r102): [14..15]
 a6(r101): [16..17]
 a7(r100): [18..19]
 a8(r99): [20..21]
 a9(r98): [20..21]
 a10(r114): [22..23]
 a11(r97): [24..25]
 a12(r96): [26..27]
 a13(r95): [28..29]
 a14(r94): [30..31]
 a15(r93): [32..33]
 a16(r92): [32..33]
 a17(r113): [34..35]
 a18(r91): [4..5]
 a19(r112): [6..7]
 a20(r87): [40..41] [36..37]
 a21(r111): [38..39]
 a22(r110): [42..43]
 a23(r90): [44..45]
 a24(r89): [44..47]
 a25(r109): [46..47]
 a26(r108): [48..49]
 a27(r88): [50..51]
 a28(r107): [52..53]
 a29(r106): [54..55]
  pref0:a4(r103)<-hr0@1
  pref1:a11(r97)<-hr0@1
  pref2:a27(r88)<-hr0@1
  regions=1, blocks=14, points=56
    allocnos=30 (big 0), copies=0, conflicts=0, ranges=31
Disposition:
   20:r87  l0     0   27:r88  l0     0   24:r89  l0     1   23:r90  l0     0
   18:r91  l0     0   16:r92  l0     1   15:r93  l0     0   14:r94  l0     0
   13:r95  l0     0   12:r96  l0     0   11:r97  l0     0    9:r98  l0     1
    8:r99  l0     0    7:r100 l0     0    6:r101 l0     0    5:r102 l0     0
    4:r103 l0     0    1:r104 l0     0    0:r105 l0     0   29:r106 l0     0
   28:r107 l0     0   26:r108 l0     0   25:r109 l0     0   22:r110 l0     0
   21:r111 l0     0   19:r112 l0     0   17:r113 l0     0   10:r114 l0     0
    3:r115 l0     0    2:r116 l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool operator>(const Str&, const Str&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,5u} r1={4d} r2={4d} r6={1d,13u} r7={1d,24u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,20u} r17={12d,5u} r18={3d} r19={3d} r20={1d,31u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} 
;;    total ref usage 399{270d,128u,1e} in 62{59 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 106 107
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:42 86 {*movqi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:44 83 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 106)) ..\Str\str.cpp:44 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:44 83 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 107)) ..\Str\str.cpp:44 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(call_insn 10 9 11 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZneRK3StrS1_") [flags 0x3]  <function_decl 04e59800 operator!=>) [0 operator!= S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:44 565 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 11 10 12 2 (set (reg:QI 88 [ D.21508 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:44 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.21508 ])
            (const_int 0 [0]))) ..\Str\str.cpp:44 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 88 [ D.21508 ])
        (nil)))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) ..\Str\str.cpp:44 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 84)
;;  succ:       3 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 90 108 109
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg/f:SI 108)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:45 83 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:SI 89 [ D.21509 ])
        (mem/j:SI (plus:SI (reg/f:SI 108)
                (const_int 4 [0x4])) [0 left_10(D)->size+0 S4 A32])) ..\Str\str.cpp:45 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 17 16 18 3 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:45 83 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:SI 90 [ D.21509 ])
        (mem/j:SI (plus:SI (reg/f:SI 109)
                (const_int 4 [0x4])) [0 right_11(D)->size+0 S4 A32])) ..\Str\str.cpp:45 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 19 18 20 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ D.21509 ])
            (reg:SI 90 [ D.21509 ]))) ..\Str\str.cpp:45 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ D.21509 ])
        (expr_list:REG_DEAD (reg:SI 89 [ D.21509 ])
            (nil))))
(jump_insn 20 19 21 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) ..\Str\str.cpp:45 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 26)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 110
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:45 83 {*movsi_internal}
     (nil))
(insn 23 22 96 4 (set (reg:SI 87 [ D.21507 ])
        (mem/j:SI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [0 right_11(D)->size+0 S4 A32])) ..\Str\str.cpp:45 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(jump_insn 96 23 97 4 (set (pc)
        (label_ref 30)) 551 {jump}
     (nil)
 -> 30)
;;  succ:       6 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 97 96 26)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 111
(code_label 26 97 27 5 23 "" [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:45 83 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:SI 87 [ D.21507 ])
        (mem/j:SI (plus:SI (reg/f:SI 111)
                (const_int 4 [0x4])) [0 left_10(D)->size+0 S4 A32])) ..\Str\str.cpp:45 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4 [100,0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	
(code_label 30 29 31 6 24 "" [1 uses])
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 min_size+0 S4 A32])
        (reg:SI 87 [ D.21507 ])) ..\Str\str.cpp:45 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.21507 ])
        (nil)))
(insn 33 32 79 6 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:46 83 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              12 [100,0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91 112
(code_label 79 33 34 7 28 "" [1 uses])
(note 34 79 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (reg:SI 112)
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 min_size+0 S4 A32])) ..\Str\str.cpp:46 83 {*movsi_internal}
     (nil))
(insn 36 35 37 7 (parallel [
            (set (reg:SI 91 [ D.21509 ])
                (plus:SI (reg:SI 112)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:46 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 112)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 min_size+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 37 36 38 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91 [ D.21509 ])
            (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) ..\Str\str.cpp:46 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ D.21509 ])
        (nil)))
(jump_insn 38 37 39 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 84)
            (pc))) ..\Str\str.cpp:46 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 84)
;;  succ:       13
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93 94 95 96 97 98 99 100 101 102 103 113 114 115
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 8 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:47 83 {*movsi_internal}
     (nil))
(insn 41 40 42 8 (set (reg/f:SI 92 [ D.21510 ])
        (mem/f/j:SI (reg/f:SI 113) [0 left_10(D)->source+0 S4 A32])) ..\Str\str.cpp:47 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 42 41 43 8 (set (reg:SI 93 [ D.21511 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) ..\Str\str.cpp:47 83 {*movsi_internal}
     (nil))
(insn 43 42 44 8 (parallel [
            (set (reg/f:SI 94 [ D.21510 ])
                (plus:SI (reg/f:SI 92 [ D.21510 ])
                    (reg:SI 93 [ D.21511 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:47 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ D.21511 ])
        (expr_list:REG_DEAD (reg/f:SI 92 [ D.21510 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 44 43 45 8 (set (reg:QI 95 [ D.21512 ])
        (mem:QI (reg/f:SI 94 [ D.21510 ]) [0 *_23+0 S1 A8])) ..\Str\str.cpp:47 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94 [ D.21510 ])
        (nil)))
(insn 45 44 46 8 (set (reg:SI 96 [ D.21509 ])
        (zero_extend:SI (reg:QI 95 [ D.21512 ]))) ..\Str\str.cpp:47 125 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 95 [ D.21512 ])
        (nil)))
(insn 46 45 47 8 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 96 [ D.21509 ])) ..\Str\str.cpp:47 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ D.21509 ])
        (nil)))
(call_insn 47 46 48 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Z9lowerCasei") [flags 0x3]  <function_decl 04e5f200 lowerCase>) [0 lowerCase S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:47 565 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 48 47 49 8 (set (reg:SI 97 [ D.21509 ])
        (reg:SI 0 ax)) ..\Str\str.cpp:47 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 49 48 50 8 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -13 [0xfffffffffffffff3])) [0 tmp_l+0 S1 A8])
        (subreg:QI (reg:SI 97 [ D.21509 ]) 0)) ..\Str\str.cpp:47 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ D.21509 ])
        (nil)))
(insn 50 49 51 8 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:48 83 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (set (reg/f:SI 98 [ D.21510 ])
        (mem/f/j:SI (reg/f:SI 114) [0 right_11(D)->source+0 S4 A32])) ..\Str\str.cpp:48 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 52 51 53 8 (set (reg:SI 99 [ D.21511 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) ..\Str\str.cpp:48 83 {*movsi_internal}
     (nil))
(insn 53 52 54 8 (parallel [
            (set (reg/f:SI 100 [ D.21510 ])
                (plus:SI (reg/f:SI 98 [ D.21510 ])
                    (reg:SI 99 [ D.21511 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:48 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ D.21511 ])
        (expr_list:REG_DEAD (reg/f:SI 98 [ D.21510 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 54 53 55 8 (set (reg:QI 101 [ D.21512 ])
        (mem:QI (reg/f:SI 100 [ D.21510 ]) [0 *_31+0 S1 A8])) ..\Str\str.cpp:48 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100 [ D.21510 ])
        (nil)))
(insn 55 54 56 8 (set (reg:SI 102 [ D.21509 ])
        (zero_extend:SI (reg:QI 101 [ D.21512 ]))) ..\Str\str.cpp:48 125 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 101 [ D.21512 ])
        (nil)))
(insn 56 55 57 8 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 102 [ D.21509 ])) ..\Str\str.cpp:48 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102 [ D.21509 ])
        (nil)))
(call_insn 57 56 58 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Z9lowerCasei") [flags 0x3]  <function_decl 04e5f200 lowerCase>) [0 lowerCase S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:48 565 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 58 57 59 8 (set (reg:SI 103 [ D.21509 ])
        (reg:SI 0 ax)) ..\Str\str.cpp:48 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 59 58 60 8 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -14 [0xfffffffffffffff2])) [0 tmp_r+0 S1 A8])
        (subreg:QI (reg:SI 103 [ D.21509 ]) 0)) ..\Str\str.cpp:48 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 103 [ D.21509 ])
        (nil)))
(insn 60 59 61 8 (set (reg:QI 115)
        (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -13 [0xfffffffffffffff3])) [0 tmp_l+0 S1 A8])) ..\Str\str.cpp:49 86 {*movqi_internal}
     (nil))
(insn 61 60 62 8 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 115)
            (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -14 [0xfffffffffffffff2])) [0 tmp_r+0 S1 A8]))) ..\Str\str.cpp:49 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 115)
        (nil)))
(jump_insn 62 61 63 8 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) ..\Str\str.cpp:49 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 67)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 98 9 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 1 [0x1])) ..\Str\str.cpp:51 86 {*movqi_internal}
     (nil))
(jump_insn 98 64 99 9 (set (pc)
        (label_ref 84)) ..\Str\str.cpp:52 551 {jump}
     (nil)
 -> 84)
;;  succ:       13 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 99 98 67)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 116
(code_label 67 99 68 10 26 "" [1 uses])
(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 10 (set (reg:QI 116)
        (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -13 [0xfffffffffffffff3])) [0 tmp_l+0 S1 A8])) ..\Str\str.cpp:53 86 {*movqi_internal}
     (nil))
(insn 70 69 71 10 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 116)
            (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -14 [0xfffffffffffffff2])) [0 tmp_r+0 S1 A8]))) ..\Str\str.cpp:53 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 116)
        (nil)))
(jump_insn 71 70 72 10 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) ..\Str\str.cpp:53 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 76)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 72 71 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 100 11 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:54 86 {*movqi_internal}
     (nil))
(jump_insn 100 73 101 11 (set (pc)
        (label_ref 84)) ..\Str\str.cpp:55 551 {jump}
     (nil)
 -> 84)
;;  succ:       13 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 101 100 76)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 76 101 77 12 27 "" [1 uses])
(note 77 76 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 102 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:46 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 102 78 103 12 (set (pc)
        (label_ref 79)) ..\Str\str.cpp:46 551 {jump}
     (nil)
 -> 79)
;;  succ:       7 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 103 102 84)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              9 [100,0%] 
;;              7
;;              11 [100,0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 104 105
(code_label 84 103 85 13 22 "" [4 uses])
(note 85 84 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 89 13 (set (reg:QI 104 [ D.21508 ])
        (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])) ..\Str\str.cpp:59 86 {*movqi_internal}
     (nil))
(insn 89 86 93 13 (set (reg:QI 105 [ <retval> ])
        (reg:QI 104 [ D.21508 ])) ..\Str\str.cpp:59 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 104 [ D.21508 ])
        (nil)))
(insn 93 89 94 13 (set (reg/i:QI 0 ax)
        (reg:QI 105 [ <retval> ])) ..\Str\str.cpp:60 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 105 [ <retval> ])
        (nil)))
(insn 94 93 0 13 (use (reg/i:QI 0 ax)) ..\Str\str.cpp:60 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool operator<(const Str&, const Str&) (_ZltRK3StrS1_, funcdef_no=1022, decl_uid=20923, cgraph_uid=199, symbol_order=200)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r95,l0) best Q_REGS, allocno Q_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a1 (r89,l0) best Q_REGS, allocno Q_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:7
  a2(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:2
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r87,l0) costs: AREG:2 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a7(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a8(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 33(l0): point = 0
   Insn 32(l0): point = 2
   Insn 28(l0): point = 4
   Insn 25(l0): point = 6
   Insn 22(l0): point = 9
   Insn 21(l0): point = 11
   Insn 20(l0): point = 13
   Insn 19(l0): point = 15
   Insn 18(l0): point = 17
   Insn 17(l0): point = 19
   Insn 16(l0): point = 21
   Insn 15(l0): point = 23
   Insn 13(l0): point = 26
   Insn 12(l0): point = 28
   Insn 11(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 8(l0): point = 36
   Insn 7(l0): point = 38
   Insn 6(l0): point = 40
   Insn 5(l0): point = 42
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r95): [10..11]
 a3(r88): [12..13]
 a4(r94): [18..19]
 a5(r93): [22..23]
 a6(r87): [29..30]
 a7(r92): [35..36]
 a8(r91): [39..40]
Compressing live ranges: from 45 to 18 - 40%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r95): [4..5]
 a3(r88): [6..7]
 a4(r94): [8..9]
 a5(r93): [10..11]
 a6(r87): [12..13]
 a7(r92): [14..15]
 a8(r91): [16..17]
  pref0:a6(r87)<-hr0@1
  regions=1, blocks=5, points=18
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    6:r87  l0     0    3:r88  l0     0    1:r89  l0     0    0:r90  l0     0
    8:r91  l0     0    7:r92  l0     0    5:r93  l0     0    4:r94  l0     0
    2:r95  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool operator<(const Str&, const Str&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r6={1d,4u} r7={1d,14u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,7u} r17={4d,1u} r18={2d} r19={2d} r20={1d,7u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 213{167d,46u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 91 92
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:63 86 {*movqi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 91)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:64 83 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:64 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 92)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:64 83 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 92)) ..\Str\str.cpp:64 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(call_insn 10 9 11 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZneRK3StrS1_") [flags 0x3]  <function_decl 04e59800 operator!=>) [0 operator!= S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:64 565 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 11 10 12 2 (set (reg:QI 87 [ D.21513 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:64 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.21513 ])
            (const_int 0 [0]))) ..\Str\str.cpp:64 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 87 [ D.21513 ])
        (nil)))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) ..\Str\str.cpp:64 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 23)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 93 94 95
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:65 83 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 93)) ..\Str\str.cpp:65 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (nil)))
(insn 17 16 18 3 (set (reg/f:SI 94)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:65 83 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 94)) ..\Str\str.cpp:65 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(call_insn 19 18 20 3 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZgtRK3StrS1_") [flags 0x3]  <function_decl 04e59880 operator>>) [0 operator> S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:65 565 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 20 19 21 3 (set (reg:QI 88 [ D.21513 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:65 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 21 20 22 3 (parallel [
            (set (reg:QI 95)
                (xor:QI (reg:QI 88 [ D.21513 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:65 344 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 88 [ D.21513 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 21 23 3 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (reg:QI 95)) ..\Str\str.cpp:65 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 95)
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 89 90
(code_label 23 22 24 4 31 "" [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 28 4 (set (reg:QI 89 [ D.21513 ])
        (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])) ..\Str\str.cpp:66 86 {*movqi_internal}
     (nil))
(insn 28 25 32 4 (set (reg:QI 90 [ <retval> ])
        (reg:QI 89 [ D.21513 ])) ..\Str\str.cpp:66 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 89 [ D.21513 ])
        (nil)))
(insn 32 28 33 4 (set (reg/i:QI 0 ax)
        (reg:QI 90 [ <retval> ])) ..\Str\str.cpp:67 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 90 [ <retval> ])
        (nil)))
(insn 33 32 0 4 (use (reg/i:QI 0 ax)) ..\Str\str.cpp:67 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool operator>=(const Str&, const Str&) (_ZgeRK3StrS1_, funcdef_no=1023, decl_uid=20920, cgraph_uid=200, symbol_order=201)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a1 (r88,l0) best Q_REGS, allocno Q_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:7
  a2(r94,l0) costs: AREG:2 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r87,l0) costs: AREG:2 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 32(l0): point = 0
   Insn 31(l0): point = 2
   Insn 27(l0): point = 4
   Insn 24(l0): point = 6
   Insn 21(l0): point = 9
   Insn 20(l0): point = 11
   Insn 19(l0): point = 13
   Insn 18(l0): point = 15
   Insn 17(l0): point = 17
   Insn 16(l0): point = 19
   Insn 15(l0): point = 21
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 7(l0): point = 36
   Insn 6(l0): point = 38
   Insn 5(l0): point = 40
 a0(r89): [3..4]
 a1(r88): [5..6]
 a2(r94): [10..11]
 a3(r93): [16..17]
 a4(r92): [20..21]
 a5(r87): [27..28]
 a6(r91): [33..34]
 a7(r90): [37..38]
Compressing live ranges: from 43 to 16 - 37%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r94): [4..5]
 a3(r93): [6..7]
 a4(r92): [8..9]
 a5(r87): [10..11]
 a6(r91): [12..13]
 a7(r90): [14..15]
  pref0:a2(r94)<-hr0@1
  pref1:a5(r87)<-hr0@1
  regions=1, blocks=5, points=16
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    5:r87  l0     0    1:r88  l0     0    0:r89  l0     0    7:r90  l0     0
    6:r91  l0     0    4:r92  l0     0    3:r93  l0     0    2:r94  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool operator>=(const Str&, const Str&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r6={1d,4u} r7={1d,14u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,7u} r17={3d,1u} r18={2d} r19={2d} r20={1d,7u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 210{165d,45u,0e} in 20{18 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 1 [0x1])) ..\Str\str.cpp:70 86 {*movqi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:71 83 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90)) ..\Str\str.cpp:71 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:71 83 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:71 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(call_insn 10 9 11 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZneRK3StrS1_") [flags 0x3]  <function_decl 04e59800 operator!=>) [0 operator!= S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:71 565 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 11 10 12 2 (set (reg:QI 87 [ D.21514 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:71 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.21514 ])
            (const_int 0 [0]))) ..\Str\str.cpp:71 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 87 [ D.21514 ])
        (nil)))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ..\Str\str.cpp:71 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 22)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93 94
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:72 83 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 92)) ..\Str\str.cpp:72 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(insn 17 16 18 3 (set (reg/f:SI 93)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:72 83 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 93)) ..\Str\str.cpp:72 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (nil)))
(call_insn 19 18 20 3 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZgtRK3StrS1_") [flags 0x3]  <function_decl 04e59880 operator>>) [0 operator> S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:72 565 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 20 19 21 3 (set (reg:QI 94)
        (reg:QI 0 ax)) ..\Str\str.cpp:72 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 21 20 22 3 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (reg:QI 94)) ..\Str\str.cpp:72 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 94)
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 88 89
(code_label 22 21 23 4 34 "" [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 27 4 (set (reg:QI 88 [ D.21514 ])
        (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])) ..\Str\str.cpp:73 86 {*movqi_internal}
     (nil))
(insn 27 24 31 4 (set (reg:QI 89 [ <retval> ])
        (reg:QI 88 [ D.21514 ])) ..\Str\str.cpp:73 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 88 [ D.21514 ])
        (nil)))
(insn 31 27 32 4 (set (reg/i:QI 0 ax)
        (reg:QI 89 [ <retval> ])) ..\Str\str.cpp:74 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 89 [ <retval> ])
        (nil)))
(insn 32 31 0 4 (use (reg/i:QI 0 ax)) ..\Str\str.cpp:74 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool operator<=(const Str&, const Str&) (_ZleRK3StrS1_, funcdef_no=1024, decl_uid=20926, cgraph_uid=201, symbol_order=202)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a1 (r88,l0) best Q_REGS, allocno Q_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:7
  a2(r94,l0) costs: AREG:2 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r87,l0) costs: AREG:2 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 32(l0): point = 0
   Insn 31(l0): point = 2
   Insn 27(l0): point = 4
   Insn 24(l0): point = 6
   Insn 21(l0): point = 9
   Insn 20(l0): point = 11
   Insn 19(l0): point = 13
   Insn 18(l0): point = 15
   Insn 17(l0): point = 17
   Insn 16(l0): point = 19
   Insn 15(l0): point = 21
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 7(l0): point = 36
   Insn 6(l0): point = 38
   Insn 5(l0): point = 40
 a0(r89): [3..4]
 a1(r88): [5..6]
 a2(r94): [10..11]
 a3(r93): [16..17]
 a4(r92): [20..21]
 a5(r87): [27..28]
 a6(r91): [33..34]
 a7(r90): [37..38]
Compressing live ranges: from 43 to 16 - 37%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r94): [4..5]
 a3(r93): [6..7]
 a4(r92): [8..9]
 a5(r87): [10..11]
 a6(r91): [12..13]
 a7(r90): [14..15]
  pref0:a2(r94)<-hr0@1
  pref1:a5(r87)<-hr0@1
  regions=1, blocks=5, points=16
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    5:r87  l0     0    1:r88  l0     0    0:r89  l0     0    7:r90  l0     0
    6:r91  l0     0    4:r92  l0     0    3:r93  l0     0    2:r94  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool operator<=(const Str&, const Str&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r6={1d,4u} r7={1d,14u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,7u} r17={3d,1u} r18={2d} r19={2d} r20={1d,7u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 210{165d,45u,0e} in 20{18 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (const_int 1 [0x1])) ..\Str\str.cpp:77 86 {*movqi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:78 83 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90)) ..\Str\str.cpp:78 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:78 83 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:78 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(call_insn 10 9 11 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZneRK3StrS1_") [flags 0x3]  <function_decl 04e59800 operator!=>) [0 operator!= S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:78 565 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 11 10 12 2 (set (reg:QI 87 [ D.21515 ])
        (reg:QI 0 ax)) ..\Str\str.cpp:78 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.21515 ])
            (const_int 0 [0]))) ..\Str\str.cpp:78 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 87 [ D.21515 ])
        (nil)))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ..\Str\str.cpp:78 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 22)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93 94
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 right+0 S4 A32])) ..\Str\str.cpp:79 83 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 92)) ..\Str\str.cpp:79 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(insn 17 16 18 3 (set (reg/f:SI 93)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 left+0 S4 A32])) ..\Str\str.cpp:79 83 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 93)) ..\Str\str.cpp:79 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (nil)))
(call_insn 19 18 20 3 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZltRK3StrS1_") [flags 0x3]  <function_decl 04e59980 operator<>) [0 operator< S1 A8])
            (const_int 8 [0x8]))) ..\Str\str.cpp:79 565 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 20 19 21 3 (set (reg:QI 94)
        (reg:QI 0 ax)) ..\Str\str.cpp:79 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 21 20 22 3 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])
        (reg:QI 94)) ..\Str\str.cpp:79 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 94)
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 88 89
(code_label 22 21 23 4 37 "" [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 27 4 (set (reg:QI 88 [ D.21515 ])
        (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 result+0 S1 A8])) ..\Str\str.cpp:80 86 {*movqi_internal}
     (nil))
(insn 27 24 31 4 (set (reg:QI 89 [ <retval> ])
        (reg:QI 88 [ D.21515 ])) ..\Str\str.cpp:80 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 88 [ D.21515 ])
        (nil)))
(insn 31 27 32 4 (set (reg/i:QI 0 ax)
        (reg:QI 89 [ <retval> ])) ..\Str\str.cpp:81 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 89 [ <retval> ])
        (nil)))
(insn 32 31 0 4 (use (reg/i:QI 0 ax)) ..\Str\str.cpp:81 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Str& Str::operator+=(const Str&) (_ZN3StrpLERKS_, funcdef_no=1025, decl_uid=20907, cgraph_uid=202, symbol_order=203)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)
Building IRA IR
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 82.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r116,l0) best AREG, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r111,l0) best AREG, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a15 (r104,l0) best Q_REGS, allocno Q_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a26 (r98,l0) best Q_REGS, allocno Q_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a2(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a8(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a9(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a10(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a11(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a12(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a13(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a14(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a15(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a16(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a17(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a18(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a19(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a20(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a21(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a22(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a23(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a24(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a25(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a26(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a27(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a28(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a29(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a30(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a31(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a32(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a33(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a34(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a35(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a36(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a37(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a38(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a39(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a40(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a41(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a42(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a43(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a44(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 96(l0): point = 0
   Insn 95(l0): point = 2
   Insn 91(l0): point = 4
   Insn 88(l0): point = 6
   Insn 87(l0): point = 8
   Insn 86(l0): point = 10
   Insn 85(l0): point = 12
   Insn 82(l0): point = 15
   Insn 81(l0): point = 17
   Insn 80(l0): point = 19
   Insn 79(l0): point = 21
   Insn 77(l0): point = 24
   Insn 76(l0): point = 26
   Insn 75(l0): point = 28
   Insn 74(l0): point = 30
   Insn 73(l0): point = 32
   Insn 72(l0): point = 34
   Insn 71(l0): point = 36
   Insn 70(l0): point = 38
   Insn 69(l0): point = 40
   Insn 68(l0): point = 42
   Insn 67(l0): point = 44
   Insn 49(l0): point = 47
   Insn 48(l0): point = 49
   Insn 47(l0): point = 51
   Insn 100(l0): point = 54
   Insn 61(l0): point = 56
   Insn 60(l0): point = 58
   Insn 59(l0): point = 60
   Insn 58(l0): point = 62
   Insn 57(l0): point = 64
   Insn 56(l0): point = 66
   Insn 55(l0): point = 68
   Insn 54(l0): point = 70
   Insn 53(l0): point = 72
   Insn 52(l0): point = 74
   Insn 51(l0): point = 76
   Insn 45(l0): point = 79
   Insn 44(l0): point = 81
   Insn 43(l0): point = 83
   Insn 42(l0): point = 85
   Insn 25(l0): point = 88
   Insn 24(l0): point = 90
   Insn 23(l0): point = 92
   Insn 22(l0): point = 94
   Insn 98(l0): point = 97
   Insn 36(l0): point = 99
   Insn 35(l0): point = 101
   Insn 34(l0): point = 103
   Insn 33(l0): point = 105
   Insn 32(l0): point = 107
   Insn 31(l0): point = 109
   Insn 30(l0): point = 111
   Insn 29(l0): point = 113
   Insn 28(l0): point = 115
   Insn 27(l0): point = 117
   Insn 20(l0): point = 120
   Insn 19(l0): point = 122
   Insn 18(l0): point = 124
   Insn 17(l0): point = 126
   Insn 16(l0): point = 128
   Insn 15(l0): point = 130
   Insn 14(l0): point = 132
   Insn 13(l0): point = 134
   Insn 12(l0): point = 136
   Insn 11(l0): point = 138
   Insn 10(l0): point = 140
   Insn 9(l0): point = 142
   Insn 8(l0): point = 144
   Insn 7(l0): point = 146
   Insn 6(l0): point = 148
   Insn 2(l0): point = 150
 a0(r111): [3..4]
 a1(r110): [5..6]
 a2(r130): [9..12]
 a3(r131): [9..10]
 a4(r109): [18..19]
 a5(r129): [20..21]
 a6(r108): [27..28]
 a7(r128): [29..30]
 a8(r127): [33..34]
 a9(r107): [33..36]
 a10(r106): [37..38]
 a11(r105): [37..42]
 a12(r126): [39..40]
 a13(r125): [43..44]
 a14(r100): [61..72]
 a15(r104): [61..62]
 a16(r103): [63..64]
 a17(r102): [65..66]
 a18(r101): [65..68]
 a19(r124): [69..70]
 a20(r123): [73..74]
 a21(r99): [73..76]
 a22(r122): [50..51]
 a23(r121): [82..83]
 a24(r120): [84..85]
 a25(r94): [102..113]
 a26(r98): [102..103]
 a27(r97): [104..105]
 a28(r96): [106..107]
 a29(r95): [106..109]
 a30(r119): [110..111]
 a31(r118): [114..115]
 a32(r93): [114..117]
 a33(r92): [91..92]
 a34(r117): [93..94]
 a35(r91): [123..124]
 a36(r116): [125..126]
 a37(r90): [131..132]
 a38(r89): [133..134]
 a39(r115): [135..136]
 a40(r114): [139..140]
 a41(r88): [141..142]
 a42(r87): [141..146]
 a43(r113): [143..144]
 a44(r112): [147..148]
Compressing live ranges: from 153 to 70 - 45%
Ranges after the compression:
 a0(r111): [0..1]
 a1(r110): [2..3]
 a2(r130): [4..5]
 a3(r131): [4..5]
 a4(r109): [6..7]
 a5(r129): [8..9]
 a6(r108): [10..11]
 a7(r128): [12..13]
 a8(r127): [14..15]
 a9(r107): [14..15]
 a10(r106): [16..17]
 a11(r105): [16..19]
 a12(r126): [18..19]
 a13(r125): [20..21]
 a14(r100): [24..31]
 a15(r104): [24..25]
 a16(r103): [26..27]
 a17(r102): [28..29]
 a18(r101): [28..29]
 a19(r124): [30..31]
 a20(r123): [32..33]
 a21(r99): [32..33]
 a22(r122): [22..23]
 a23(r121): [34..35]
 a24(r120): [36..37]
 a25(r94): [42..49]
 a26(r98): [42..43]
 a27(r97): [44..45]
 a28(r96): [46..47]
 a29(r95): [46..47]
 a30(r119): [48..49]
 a31(r118): [50..51]
 a32(r93): [50..51]
 a33(r92): [38..39]
 a34(r117): [40..41]
 a35(r91): [52..53]
 a36(r116): [54..55]
 a37(r90): [56..57]
 a38(r89): [58..59]
 a39(r115): [60..61]
 a40(r114): [62..63]
 a41(r88): [64..65]
 a42(r87): [64..67]
 a43(r113): [66..67]
 a44(r112): [68..69]
  regions=1, blocks=11, points=70
    allocnos=45 (big 0), copies=0, conflicts=0, ranges=45
Disposition:
   42:r87  l0     1   41:r88  l0     0   38:r89  l0     0   37:r90  l0     0
   35:r91  l0     0   33:r92  l0     0   32:r93  l0     1   25:r94  l0     1
   29:r95  l0     2   28:r96  l0     0   27:r97  l0     0   26:r98  l0     0
   21:r99  l0     1   14:r100 l0     1   18:r101 l0     2   17:r102 l0     0
   16:r103 l0     0   15:r104 l0     0   11:r105 l0     1   10:r106 l0     0
    9:r107 l0     1    6:r108 l0     0    4:r109 l0     0    1:r110 l0     0
    0:r111 l0     0   44:r112 l0     0   43:r113 l0     0   40:r114 l0     0
   39:r115 l0     0   36:r116 l0     0   34:r117 l0     0   31:r118 l0     0
   30:r119 l0     0   24:r120 l0     0   23:r121 l0     0   22:r122 l0     0
   20:r123 l0     0   19:r124 l0     0   13:r125 l0     0   12:r126 l0     0
    8:r127 l0     0    7:r128 l0     0    5:r129 l0     0    2:r130 l0     0
    3:r131 l0     1
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Str& Str::operator+=(const Str&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,3u} r1={3d} r2={3d,1u} r6={1d,10u} r7={1d,16u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,12u} r17={15d,3u} r18={2d} r19={2d} r20={1d,43u,3e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u,1e} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u,1e} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} 
;;    total ref usage 352{214d,133u,5e} in 72{70 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 112 113 114 115 116
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:84 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 112)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:85 83 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 87 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 112)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])) ..\Str\str.cpp:85 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32])) ..\Str\str.cpp:85 83 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 113)
                (const_int 4 [0x4])) [0 right_10(D)->size+0 S4 A32])) ..\Str\str.cpp:85 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 114)
                (plus:SI (reg:SI 87 [ D.21516 ])
                    (reg:SI 88 [ D.21516 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:85 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ D.21516 ])
        (expr_list:REG_DEAD (reg:SI 87 [ D.21516 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 11 10 12 2 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 sz+0 S4 A32])
        (reg:SI 114)) ..\Str\str.cpp:85 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 114)
        (nil)))
(insn 12 11 13 2 (set (reg:SI 115)
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 sz+0 S4 A32])) ..\Str\str.cpp:86 83 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 89 [ D.21516 ])
                (plus:SI (reg:SI 115)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:86 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 115)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 sz+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 14 13 15 2 (set (reg:SI 90 [ D.21517 ])
        (reg:SI 89 [ D.21516 ])) ..\Str\str.cpp:86 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ D.21516 ])
        (nil)))
(insn 15 14 16 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 90 [ D.21517 ])) ..\Str\str.cpp:86 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ D.21517 ])
        (nil)))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:86 565 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 17 16 18 2 (set (reg/f:SI 116)
        (reg:SI 0 ax)) ..\Str\str.cpp:86 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:SI 116)
            (nil))))
(insn 18 17 19 2 (set (reg/f:SI 91 [ D.21518 ])
        (reg/f:SI 116)) ..\Str\str.cpp:86 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 19 18 20 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])
        (reg/f:SI 91 [ D.21518 ])) ..\Str\str.cpp:86 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ D.21518 ])
        (nil)))
(insn 20 19 37 2 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:88 83 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100,0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92 117
(code_label 37 20 21 3 41 "" [1 uses])
(note 21 37 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:88 83 {*movsi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:SI 92 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 117)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])) ..\Str\str.cpp:88 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 24 23 25 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 92 [ D.21516 ])
            (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:88 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ D.21516 ])
        (nil)))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) ..\Str\str.cpp:88 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 40)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93 94 95 96 97 98 118 119
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg:SI 93 [ D.21517 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:89 83 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])) ..\Str\str.cpp:89 83 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg/f:SI 94 [ D.21518 ])
                (plus:SI (reg:SI 93 [ D.21517 ])
                    (reg/f:SI 118)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:89 194 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (expr_list:REG_DEAD (reg:SI 93 [ D.21517 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])
                        (reg:SI 93 [ D.21517 ]))
                    (nil))))))
(insn 30 29 31 4 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:89 83 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg/f:SI 95 [ D.21518 ])
        (mem/f/j:SI (reg/f:SI 119) [0 this_8(D)->source+0 S4 A32])) ..\Str\str.cpp:89 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))
(insn 32 31 33 4 (set (reg:SI 96 [ D.21517 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:89 83 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg/f:SI 97 [ D.21518 ])
                (plus:SI (reg/f:SI 95 [ D.21518 ])
                    (reg:SI 96 [ D.21517 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:89 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ D.21517 ])
        (expr_list:REG_DEAD (reg/f:SI 95 [ D.21518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 34 33 35 4 (set (reg:QI 98 [ D.21519 ])
        (mem:QI (reg/f:SI 97 [ D.21518 ]) [0 *_24+0 S1 A8])) ..\Str\str.cpp:89 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97 [ D.21518 ])
        (nil)))
(insn 35 34 36 4 (set (mem:QI (reg/f:SI 94 [ D.21518 ]) [0 *_21+0 S1 A8])
        (reg:QI 98 [ D.21519 ])) ..\Str\str.cpp:89 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 98 [ D.21519 ])
        (expr_list:REG_DEAD (reg/f:SI 94 [ D.21518 ])
            (nil))))
(insn 36 35 98 4 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:88 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 98 36 99 4 (set (pc)
        (label_ref 37)) ..\Str\str.cpp:88 551 {jump}
     (nil)
 -> 37)
;;  succ:       3 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 99 98 40)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 120 121
(code_label 40 99 41 5 40 "" [1 uses])
(note 41 40 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 5 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:90 83 {*movsi_internal}
     (nil))
(insn 43 42 44 5 (set (reg:SI 121)
        (mem/j:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])) ..\Str\str.cpp:90 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 44 43 45 5 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])
        (reg:SI 121)) ..\Str\str.cpp:90 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 45 44 62 5 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:90 83 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              7 [100,0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 122
(code_label 62 45 46 6 43 "" [1 uses])
(note 46 62 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg:SI 122)
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])) ..\Str\str.cpp:90 83 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 122)
            (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 sz+0 S4 A32]))) ..\Str\str.cpp:90 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(jump_insn 49 48 50 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) ..\Str\str.cpp:90 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 65)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 100 101 102 103 104 123 124
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (set (reg:SI 99 [ D.21517 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])) ..\Str\str.cpp:91 83 {*movsi_internal}
     (nil))
(insn 52 51 53 7 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])) ..\Str\str.cpp:91 83 {*movsi_internal}
     (nil))
(insn 53 52 54 7 (parallel [
            (set (reg/f:SI 100 [ D.21518 ])
                (plus:SI (reg:SI 99 [ D.21517 ])
                    (reg/f:SI 123)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:91 194 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (expr_list:REG_DEAD (reg:SI 99 [ D.21517 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])
                        (reg:SI 99 [ D.21517 ]))
                    (nil))))))
(insn 54 53 55 7 (set (reg/f:SI 124)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32])) ..\Str\str.cpp:91 83 {*movsi_internal}
     (nil))
(insn 55 54 56 7 (set (reg/f:SI 101 [ D.21518 ])
        (mem/f/j:SI (reg/f:SI 124) [0 right_10(D)->source+0 S4 A32])) ..\Str\str.cpp:91 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (nil)))
(insn 56 55 57 7 (set (reg:SI 102 [ D.21517 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ..\Str\str.cpp:91 83 {*movsi_internal}
     (nil))
(insn 57 56 58 7 (parallel [
            (set (reg/f:SI 103 [ D.21518 ])
                (plus:SI (reg/f:SI 101 [ D.21518 ])
                    (reg:SI 102 [ D.21517 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:91 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 102 [ D.21517 ])
        (expr_list:REG_DEAD (reg/f:SI 101 [ D.21518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 58 57 59 7 (set (reg:QI 104 [ D.21519 ])
        (mem:QI (reg/f:SI 103 [ D.21518 ]) [0 *_34+0 S1 A8])) ..\Str\str.cpp:91 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103 [ D.21518 ])
        (nil)))
(insn 59 58 60 7 (set (mem:QI (reg/f:SI 100 [ D.21518 ]) [0 *_31+0 S1 A8])
        (reg:QI 104 [ D.21519 ])) ..\Str\str.cpp:91 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 104 [ D.21519 ])
        (expr_list:REG_DEAD (reg/f:SI 100 [ D.21518 ])
            (nil))))
(insn 60 59 61 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 ii+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:90 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 61 60 100 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:90 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 100 61 101 7 (set (pc)
        (label_ref 62)) ..\Str\str.cpp:90 551 {jump}
     (nil)
 -> 62)
;;  succ:       6 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 101 100 65)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 105 106 107 108 125 126 127 128
(code_label 65 101 66 8 42 "" [1 uses])
(note 66 65 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 8 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:93 83 {*movsi_internal}
     (nil))
(insn 68 67 69 8 (set (reg:SI 105 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 125)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])) ..\Str\str.cpp:93 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (nil)))
(insn 69 68 70 8 (set (reg/f:SI 126)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32])) ..\Str\str.cpp:93 83 {*movsi_internal}
     (nil))
(insn 70 69 71 8 (set (reg:SI 106 [ D.21516 ])
        (mem/j:SI (plus:SI (reg/f:SI 126)
                (const_int 4 [0x4])) [0 right_10(D)->size+0 S4 A32])) ..\Str\str.cpp:93 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(insn 71 70 72 8 (parallel [
            (set (reg:SI 107 [ D.21516 ])
                (plus:SI (reg:SI 105 [ D.21516 ])
                    (reg:SI 106 [ D.21516 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:93 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 106 [ D.21516 ])
        (expr_list:REG_DEAD (reg:SI 105 [ D.21516 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 72 71 73 8 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:93 83 {*movsi_internal}
     (nil))
(insn 73 72 74 8 (set (mem/j:SI (plus:SI (reg/f:SI 127)
                (const_int 4 [0x4])) [0 this_8(D)->size+0 S4 A32])
        (reg:SI 107 [ D.21516 ])) ..\Str\str.cpp:93 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (expr_list:REG_DEAD (reg:SI 107 [ D.21516 ])
            (nil))))
(insn 74 73 75 8 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:94 83 {*movsi_internal}
     (nil))
(insn 75 74 76 8 (set (reg/f:SI 108 [ D.21518 ])
        (mem/f/j:SI (reg/f:SI 128) [0 this_8(D)->source+0 S4 A32])) ..\Str\str.cpp:94 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 128)
        (nil)))
(insn 76 75 77 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 108 [ D.21518 ])
            (const_int 0 [0]))) ..\Str\str.cpp:94 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 108 [ D.21518 ])
        (nil)))
(jump_insn 77 76 78 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) ..\Str\str.cpp:94 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 83)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 109 129
(note 78 77 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 9 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:94 83 {*movsi_internal}
     (nil))
(insn 80 79 81 9 (set (reg/f:SI 109 [ D.21518 ])
        (mem/f/j:SI (reg/f:SI 129) [0 this_8(D)->source+0 S4 A32])) ..\Str\str.cpp:94 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (nil)))
(insn 81 80 82 9 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 109 [ D.21518 ])) ..\Str\str.cpp:94 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109 [ D.21518 ])
        (nil)))
(call_insn 82 81 83 9 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:94 556 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 110 111 130 131
(code_label 83 82 84 10 44 "" [1 uses])
(note 84 83 85 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 10 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:95 83 {*movsi_internal}
     (nil))
(insn 86 85 87 10 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 ts+0 S4 A32])) ..\Str\str.cpp:95 83 {*movsi_internal}
     (nil))
(insn 87 86 88 10 (set (mem/f/j:SI (reg/f:SI 130) [0 this_8(D)->source+0 S4 A32])
        (reg/f:SI 131)) ..\Str\str.cpp:95 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (expr_list:REG_DEAD (reg/f:SI 130)
            (nil))))
(insn 88 87 91 10 (set (reg/f:SI 110 [ D.21520 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 this+0 S4 A32])) ..\Str\str.cpp:97 83 {*movsi_internal}
     (nil))
(insn 91 88 95 10 (set (reg:SI 111 [ <retval> ])
        (reg/f:SI 110 [ D.21520 ])) ..\Str\str.cpp:97 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110 [ D.21520 ])
        (nil)))
(insn 95 91 96 10 (set (reg/i:SI 0 ax)
        (reg:SI 111 [ <retval> ])) ..\Str\str.cpp:98 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111 [ <retval> ])
        (nil)))
(insn 96 95 0 10 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:98 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Str& Str::operator+=(char) (_ZN3StrpLEc, funcdef_no=1026, decl_uid=20910, cgraph_uid=203, symbol_order=204)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 9 (    1)
Building IRA IR
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 67.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r117,l0) best AREG, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a44 (r113,l0) best Q_REGS, allocno Q_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a21 (r101,l0) best Q_REGS, allocno Q_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a27 (r97,l0) best Q_REGS, allocno Q_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a2(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a3(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a4(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a6(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a8(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a9(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a10(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a11(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a12(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a13(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a14(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a15(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a16(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a17(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a18(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a19(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a20(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a21(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a22(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a23(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a24(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a25(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a26(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a27(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a28(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a29(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a30(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a31(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a32(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a33(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a34(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a35(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a36(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a37(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a38(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a39(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a40(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a41(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a42(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a43(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a44(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:8

   Insn 88(l0): point = 0
   Insn 87(l0): point = 2
   Insn 83(l0): point = 4
   Insn 80(l0): point = 6
   Insn 79(l0): point = 8
   Insn 78(l0): point = 10
   Insn 77(l0): point = 12
   Insn 76(l0): point = 14
   Insn 75(l0): point = 16
   Insn 74(l0): point = 18
   Insn 73(l0): point = 20
   Insn 72(l0): point = 22
   Insn 71(l0): point = 24
   Insn 70(l0): point = 26
   Insn 67(l0): point = 29
   Insn 66(l0): point = 31
   Insn 65(l0): point = 33
   Insn 64(l0): point = 35
   Insn 62(l0): point = 38
   Insn 61(l0): point = 40
   Insn 60(l0): point = 42
   Insn 59(l0): point = 44
   Insn 57(l0): point = 47
   Insn 56(l0): point = 49
   Insn 55(l0): point = 51
   Insn 54(l0): point = 53
   Insn 53(l0): point = 55
   Insn 52(l0): point = 57
   Insn 51(l0): point = 59
   Insn 50(l0): point = 61
   Insn 49(l0): point = 63
   Insn 48(l0): point = 65
   Insn 47(l0): point = 67
   Insn 46(l0): point = 69
   Insn 45(l0): point = 71
   Insn 44(l0): point = 73
   Insn 43(l0): point = 75
   Insn 42(l0): point = 77
   Insn 25(l0): point = 80
   Insn 24(l0): point = 82
   Insn 23(l0): point = 84
   Insn 22(l0): point = 86
   Insn 90(l0): point = 89
   Insn 36(l0): point = 91
   Insn 35(l0): point = 93
   Insn 34(l0): point = 95
   Insn 33(l0): point = 97
   Insn 32(l0): point = 99
   Insn 31(l0): point = 101
   Insn 30(l0): point = 103
   Insn 29(l0): point = 105
   Insn 28(l0): point = 107
   Insn 27(l0): point = 109
   Insn 20(l0): point = 112
   Insn 19(l0): point = 114
   Insn 18(l0): point = 116
   Insn 17(l0): point = 118
   Insn 16(l0): point = 120
   Insn 15(l0): point = 122
   Insn 14(l0): point = 124
   Insn 13(l0): point = 126
   Insn 12(l0): point = 128
   Insn 11(l0): point = 130
   Insn 10(l0): point = 132
   Insn 9(l0): point = 134
   Insn 8(l0): point = 136
   Insn 4(l0): point = 138
   Insn 3(l0): point = 140
   Insn 2(l0): point = 142
 a0(r112): [3..4]
 a1(r111): [5..6]
 a2(r110): [9..10]
 a3(r109): [11..12]
 a4(r107): [11..18]
 a5(r108): [13..14]
 a6(r131): [15..16]
 a7(r130): [19..20]
 a8(r128): [23..26]
 a9(r129): [23..24]
 a10(r106): [32..33]
 a11(r127): [34..35]
 a12(r105): [41..42]
 a13(r126): [43..44]
 a14(r104): [50..51]
 a15(r125): [52..53]
 a16(r124): [56..57]
 a17(r103): [56..59]
 a18(r102): [60..61]
 a19(r123): [62..63]
 a20(r100): [66..69]
 a21(r101): [66..67]
 a22(r122): [70..71]
 a23(r99): [70..73]
 a24(r98): [74..75]
 a25(r121): [76..77]
 a26(r93): [94..105]
 a27(r97): [94..95]
 a28(r96): [96..97]
 a29(r95): [98..99]
 a30(r94): [98..101]
 a31(r120): [102..103]
 a32(r119): [106..107]
 a33(r92): [106..109]
 a34(r91): [83..84]
 a35(r118): [85..86]
 a36(r90): [115..116]
 a37(r117): [117..118]
 a38(r89): [123..124]
 a39(r88): [125..126]
 a40(r116): [127..128]
 a41(r115): [131..132]
 a42(r87): [133..134]
 a43(r114): [135..136]
 a44(r113): [139..140]
Compressing live ranges: from 145 to 74 - 51%
Ranges after the compression:
 a0(r112): [0..1]
 a1(r111): [2..3]
 a2(r110): [4..5]
 a3(r109): [6..7]
 a4(r107): [6..11]
 a5(r108): [8..9]
 a6(r131): [10..11]
 a7(r130): [12..13]
 a8(r128): [14..15]
 a9(r129): [14..15]
 a10(r106): [16..17]
 a11(r127): [18..19]
 a12(r105): [20..21]
 a13(r126): [22..23]
 a14(r104): [24..25]
 a15(r125): [26..27]
 a16(r124): [28..29]
 a17(r103): [28..29]
 a18(r102): [30..31]
 a19(r123): [32..33]
 a20(r100): [34..35]
 a21(r101): [34..35]
 a22(r122): [36..37]
 a23(r99): [36..37]
 a24(r98): [38..39]
 a25(r121): [40..41]
 a26(r93): [46..53]
 a27(r97): [46..47]
 a28(r96): [48..49]
 a29(r95): [50..51]
 a30(r94): [50..51]
 a31(r120): [52..53]
 a32(r119): [54..55]
 a33(r92): [54..55]
 a34(r91): [42..43]
 a35(r118): [44..45]
 a36(r90): [56..57]
 a37(r117): [58..59]
 a38(r89): [60..61]
 a39(r88): [62..63]
 a40(r116): [64..65]
 a41(r115): [66..67]
 a42(r87): [68..69]
 a43(r114): [70..71]
 a44(r113): [72..73]
  regions=1, blocks=9, points=74
    allocnos=45 (big 0), copies=0, conflicts=0, ranges=45
Disposition:
   42:r87  l0     0   39:r88  l0     0   38:r89  l0     0   36:r90  l0     0
   34:r91  l0     0   33:r92  l0     1   26:r93  l0     1   30:r94  l0     2
   29:r95  l0     0   28:r96  l0     0   27:r97  l0     0   24:r98  l0     0
   23:r99  l0     1   20:r100 l0     1   21:r101 l0     0   18:r102 l0     0
   17:r103 l0     1   14:r104 l0     0   12:r105 l0     0   10:r106 l0     0
    4:r107 l0     1    5:r108 l0     0    3:r109 l0     0    2:r110 l0     0
    1:r111 l0     0    0:r112 l0     0   44:r113 l0     0   43:r114 l0     0
   41:r115 l0     0   40:r116 l0     0   37:r117 l0     0   35:r118 l0     0
   32:r119 l0     0   31:r120 l0     0   25:r121 l0     0   22:r122 l0     0
   19:r123 l0     0   16:r124 l0     0   15:r125 l0     0   13:r126 l0     0
   11:r127 l0     0    8:r128 l0     0    9:r129 l0     1    7:r130 l0     0
    6:r131 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Str& Str::operator+=(char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,3u} r1={3d} r2={3d,1u} r6={1d,8u} r7={1d,14u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,8u} r17={13d,3u} r18={2d} r19={2d} r20={1d,36u,3e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u,1e} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u,1e} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} 
;;    total ref usage 335{212d,118u,5e} in 69{67 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 113 114 115 116 117
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:101 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg:SI 113)
        (mem/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32])) ..\Str\str.cpp:101 83 {*movsi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 right+0 S1 A32])
        (subreg:QI (reg:SI 113) 0)) ..\Str\str.cpp:101 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:102 83 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 87 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:102 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 115)
                (plus:SI (reg:SI 87 [ D.21521 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:102 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.21521 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 11 10 12 2 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 sz+0 S4 A32])
        (reg:SI 115)) ..\Str\str.cpp:102 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(insn 12 11 13 2 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 sz+0 S4 A32])) ..\Str\str.cpp:103 83 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 88 [ D.21521 ])
                (plus:SI (reg:SI 116)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:103 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 116)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 sz+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 14 13 15 2 (set (reg:SI 89 [ D.21522 ])
        (reg:SI 88 [ D.21521 ])) ..\Str\str.cpp:103 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ D.21521 ])
        (nil)))
(insn 15 14 16 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 89 [ D.21522 ])) ..\Str\str.cpp:103 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ D.21522 ])
        (nil)))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:103 565 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 17 16 18 2 (set (reg/f:SI 117)
        (reg:SI 0 ax)) ..\Str\str.cpp:103 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:SI 117)
            (nil))))
(insn 18 17 19 2 (set (reg/f:SI 90 [ D.21523 ])
        (reg/f:SI 117)) ..\Str\str.cpp:103 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 19 18 20 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])
        (reg/f:SI 90 [ D.21523 ])) ..\Str\str.cpp:103 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ D.21523 ])
        (nil)))
(insn 20 19 37 2 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:105 83 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100,0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91 118
(code_label 37 20 21 3 48 "" [1 uses])
(note 21 37 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:105 83 {*movsi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:SI 91 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 118)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:105 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 24 23 25 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91 [ D.21521 ])
            (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:105 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ D.21521 ])
        (nil)))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) ..\Str\str.cpp:105 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 40)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92 93 94 95 96 97 119 120
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg:SI 92 [ D.21522 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:106 83 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])) ..\Str\str.cpp:106 83 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg/f:SI 93 [ D.21523 ])
                (plus:SI (reg:SI 92 [ D.21522 ])
                    (reg/f:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:106 194 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (expr_list:REG_DEAD (reg:SI 92 [ D.21522 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])
                        (reg:SI 92 [ D.21522 ]))
                    (nil))))))
(insn 30 29 31 4 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:106 83 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg/f:SI 94 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 120) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:106 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 32 31 33 4 (set (reg:SI 95 [ D.21522 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:106 83 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg/f:SI 96 [ D.21523 ])
                (plus:SI (reg/f:SI 94 [ D.21523 ])
                    (reg:SI 95 [ D.21522 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:106 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ D.21522 ])
        (expr_list:REG_DEAD (reg/f:SI 94 [ D.21523 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 34 33 35 4 (set (reg:QI 97 [ D.21524 ])
        (mem:QI (reg/f:SI 96 [ D.21523 ]) [0 *_19+0 S1 A8])) ..\Str\str.cpp:106 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ D.21523 ])
        (nil)))
(insn 35 34 36 4 (set (mem:QI (reg/f:SI 93 [ D.21523 ]) [0 *_16+0 S1 A8])
        (reg:QI 97 [ D.21524 ])) ..\Str\str.cpp:106 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 97 [ D.21524 ])
        (expr_list:REG_DEAD (reg/f:SI 93 [ D.21523 ])
            (nil))))
(insn 36 35 90 4 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:105 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 90 36 91 4 (set (pc)
        (label_ref 37)) ..\Str\str.cpp:105 551 {jump}
     (nil)
 -> 37)
;;  succ:       3 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 91 90 40)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 98 99 100 101 102 103 104 121 122 123 124 125
(code_label 40 91 41 5 47 "" [1 uses])
(note 41 40 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 5 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:107 83 {*movsi_internal}
     (nil))
(insn 43 42 44 5 (set (reg:SI 98 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 121)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:107 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 44 43 45 5 (set (reg:SI 99 [ D.21522 ])
        (reg:SI 98 [ D.21521 ])) ..\Str\str.cpp:107 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ D.21521 ])
        (nil)))
(insn 45 44 46 5 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])) ..\Str\str.cpp:107 83 {*movsi_internal}
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg/f:SI 100 [ D.21523 ])
                (plus:SI (reg:SI 99 [ D.21522 ])
                    (reg/f:SI 122)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:107 194 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (expr_list:REG_DEAD (reg:SI 99 [ D.21522 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])
                        (reg:SI 99 [ D.21522 ]))
                    (nil))))))
(insn 47 46 48 5 (set (reg:QI 101 [ D.21524 ])
        (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 right+0 S1 A32])) ..\Str\str.cpp:107 86 {*movqi_internal}
     (nil))
(insn 48 47 49 5 (set (mem:QI (reg/f:SI 100 [ D.21523 ]) [0 *_25+0 S1 A8])
        (reg:QI 101 [ D.21524 ])) ..\Str\str.cpp:107 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 101 [ D.21524 ])
        (expr_list:REG_DEAD (reg/f:SI 100 [ D.21523 ])
            (nil))))
(insn 49 48 50 5 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:109 83 {*movsi_internal}
     (nil))
(insn 50 49 51 5 (set (reg:SI 102 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 123)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:109 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (nil)))
(insn 51 50 52 5 (parallel [
            (set (reg:SI 103 [ D.21521 ])
                (plus:SI (reg:SI 102 [ D.21521 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:109 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 102 [ D.21521 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 52 51 53 5 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:109 83 {*movsi_internal}
     (nil))
(insn 53 52 54 5 (set (mem/j:SI (plus:SI (reg/f:SI 124)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])
        (reg:SI 103 [ D.21521 ])) ..\Str\str.cpp:109 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (expr_list:REG_DEAD (reg:SI 103 [ D.21521 ])
            (nil))))
(insn 54 53 55 5 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:110 83 {*movsi_internal}
     (nil))
(insn 55 54 56 5 (set (reg/f:SI 104 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 125) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:110 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (nil)))
(insn 56 55 57 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 104 [ D.21523 ])
            (const_int 0 [0]))) ..\Str\str.cpp:110 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 104 [ D.21523 ])
        (nil)))
(jump_insn 57 56 58 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) ..\Str\str.cpp:110 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 68)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 105 126
(note 58 57 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 6 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:111 83 {*movsi_internal}
     (nil))
(insn 60 59 61 6 (set (reg/f:SI 105 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 126) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:111 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(insn 61 60 62 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 105 [ D.21523 ])
            (const_int 0 [0]))) ..\Str\str.cpp:111 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 105 [ D.21523 ])
        (nil)))
(jump_insn 62 61 63 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) ..\Str\str.cpp:111 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 68)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 106 127
(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 7 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:111 83 {*movsi_internal}
     (nil))
(insn 65 64 66 7 (set (reg/f:SI 106 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 127) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:111 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (nil)))
(insn 66 65 67 7 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 106 [ D.21523 ])) ..\Str\str.cpp:111 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106 [ D.21523 ])
        (nil)))
(call_insn 67 66 68 7 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:111 556 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              7 (FALLTHRU)
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 107 108 109 110 111 112 128 129 130 131
(code_label 68 67 69 8 49 "" [2 uses])
(note 69 68 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 8 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:112 83 {*movsi_internal}
     (nil))
(insn 71 70 72 8 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 ts+0 S4 A32])) ..\Str\str.cpp:112 83 {*movsi_internal}
     (nil))
(insn 72 71 73 8 (set (mem/f/j:SI (reg/f:SI 128) [0 this_5(D)->source+0 S4 A32])
        (reg/f:SI 129)) ..\Str\str.cpp:112 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (expr_list:REG_DEAD (reg/f:SI 128)
            (nil))))
(insn 73 72 74 8 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:113 83 {*movsi_internal}
     (nil))
(insn 74 73 75 8 (set (reg/f:SI 107 [ D.21523 ])
        (mem/f/j:SI (reg/f:SI 130) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:113 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (nil)))
(insn 75 74 76 8 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:113 83 {*movsi_internal}
     (nil))
(insn 76 75 77 8 (set (reg:SI 108 [ D.21521 ])
        (mem/j:SI (plus:SI (reg/f:SI 131)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:113 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (nil)))
(insn 77 76 78 8 (set (reg:SI 109 [ D.21522 ])
        (reg:SI 108 [ D.21521 ])) ..\Str\str.cpp:113 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108 [ D.21521 ])
        (nil)))
(insn 78 77 79 8 (parallel [
            (set (reg/f:SI 110 [ D.21523 ])
                (plus:SI (reg/f:SI 107 [ D.21523 ])
                    (reg:SI 109 [ D.21522 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:113 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 109 [ D.21522 ])
        (expr_list:REG_DEAD (reg/f:SI 107 [ D.21523 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 79 78 80 8 (set (mem:QI (reg/f:SI 110 [ D.21523 ]) [0 *_40+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:113 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110 [ D.21523 ])
        (nil)))
(insn 80 79 83 8 (set (reg/f:SI 111 [ D.21525 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:114 83 {*movsi_internal}
     (nil))
(insn 83 80 87 8 (set (reg:SI 112 [ <retval> ])
        (reg/f:SI 111 [ D.21525 ])) ..\Str\str.cpp:114 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111 [ D.21525 ])
        (nil)))
(insn 87 83 88 8 (set (reg/i:SI 0 ax)
        (reg:SI 112 [ <retval> ])) ..\Str\str.cpp:115 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 112 [ <retval> ])
        (nil)))
(insn 88 87 0 8 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:115 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Str& Str::operator=(const char*) (_ZN3StraSEPKc, funcdef_no=1027, decl_uid=20898, cgraph_uid=204, symbol_order=205)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 44.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r121,l0) best AREG, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a9 (r106,l0) best Q_REGS, allocno Q_REGS
    r105: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a10 (r105,l0) best Q_REGS, allocno Q_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a30 (r92,l0) best Q_REGS, allocno Q_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a2(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a3(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a4(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a6(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a8(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a9(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a10(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:7
  a11(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a12(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a13(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a14(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a15(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a16(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a17(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a18(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a19(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a20(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a21(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a22(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a23(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a24(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a25(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a26(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a27(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a28(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a29(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a30(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a31(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a32(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a33(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a34(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a35(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a36(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a37(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a38(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a39(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a40(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 87(l0): point = 0
   Insn 86(l0): point = 2
   Insn 82(l0): point = 4
   Insn 79(l0): point = 6
   Insn 78(l0): point = 8
   Insn 77(l0): point = 10
   Insn 76(l0): point = 12
   Insn 75(l0): point = 14
   Insn 74(l0): point = 16
   Insn 73(l0): point = 18
   Insn 72(l0): point = 20
   Insn 54(l0): point = 23
   Insn 53(l0): point = 25
   Insn 52(l0): point = 27
   Insn 51(l0): point = 29
   Insn 91(l0): point = 32
   Insn 66(l0): point = 34
   Insn 65(l0): point = 36
   Insn 64(l0): point = 38
   Insn 63(l0): point = 40
   Insn 62(l0): point = 42
   Insn 61(l0): point = 44
   Insn 60(l0): point = 46
   Insn 59(l0): point = 48
   Insn 58(l0): point = 50
   Insn 57(l0): point = 52
   Insn 56(l0): point = 54
   Insn 49(l0): point = 57
   Insn 48(l0): point = 59
   Insn 47(l0): point = 61
   Insn 46(l0): point = 63
   Insn 45(l0): point = 65
   Insn 44(l0): point = 67
   Insn 43(l0): point = 69
   Insn 42(l0): point = 71
   Insn 41(l0): point = 73
   Insn 40(l0): point = 75
   Insn 39(l0): point = 77
   Insn 27(l0): point = 80
   Insn 26(l0): point = 82
   Insn 25(l0): point = 84
   Insn 24(l0): point = 86
   Insn 23(l0): point = 88
   Insn 22(l0): point = 90
   Insn 21(l0): point = 92
   Insn 20(l0): point = 94
   Insn 89(l0): point = 97
   Insn 33(l0): point = 99
   Insn 32(l0): point = 101
   Insn 31(l0): point = 103
   Insn 30(l0): point = 105
   Insn 29(l0): point = 107
   Insn 18(l0): point = 110
   Insn 17(l0): point = 112
   Insn 14(l0): point = 115
   Insn 13(l0): point = 117
   Insn 12(l0): point = 119
   Insn 11(l0): point = 121
   Insn 9(l0): point = 124
   Insn 8(l0): point = 126
   Insn 7(l0): point = 128
   Insn 6(l0): point = 130
   Insn 2(l0): point = 132
 a0(r112): [3..4]
 a1(r111): [5..6]
 a2(r110): [9..10]
 a3(r109): [11..12]
 a4(r107): [11..18]
 a5(r108): [13..14]
 a6(r127): [15..16]
 a7(r126): [19..20]
 a8(r102): [37..48]
 a9(r106): [37..38]
 a10(r105): [39..40]
 a11(r104): [41..42]
 a12(r125): [43..44]
 a13(r103): [43..46]
 a14(r101): [49..50]
 a15(r100): [49..52]
 a16(r124): [53..54]
 a17(r99): [26..27]
 a18(r123): [28..29]
 a19(r122): [60..61]
 a20(r98): [60..63]
 a21(r121): [64..65]
 a22(r97): [70..71]
 a23(r96): [72..73]
 a24(r95): [74..75]
 a25(r120): [76..77]
 a26(r119): [100..101]
 a27(r94): [100..103]
 a28(r93): [104..105]
 a29(r118): [106..107]
 a30(r92): [83..84]
 a31(r91): [85..86]
 a32(r117): [87..88]
 a33(r90): [87..90]
 a34(r89): [91..92]
 a35(r116): [93..94]
 a36(r115): [111..112]
 a37(r88): [118..119]
 a38(r114): [120..121]
 a39(r87): [127..128]
 a40(r113): [129..130]
Compressing live ranges: from 135 to 68 - 50%
Ranges after the compression:
 a0(r112): [0..1]
 a1(r111): [2..3]
 a2(r110): [4..5]
 a3(r109): [6..7]
 a4(r107): [6..11]
 a5(r108): [8..9]
 a6(r127): [10..11]
 a7(r126): [12..13]
 a8(r102): [18..25]
 a9(r106): [18..19]
 a10(r105): [20..21]
 a11(r104): [22..23]
 a12(r125): [24..25]
 a13(r103): [24..25]
 a14(r101): [26..27]
 a15(r100): [26..27]
 a16(r124): [28..29]
 a17(r99): [14..15]
 a18(r123): [16..17]
 a19(r122): [30..31]
 a20(r98): [30..31]
 a21(r121): [32..33]
 a22(r97): [34..35]
 a23(r96): [36..37]
 a24(r95): [38..39]
 a25(r120): [40..41]
 a26(r119): [52..53]
 a27(r94): [52..53]
 a28(r93): [54..55]
 a29(r118): [56..57]
 a30(r92): [42..43]
 a31(r91): [44..45]
 a32(r117): [46..47]
 a33(r90): [46..47]
 a34(r89): [48..49]
 a35(r116): [50..51]
 a36(r115): [58..59]
 a37(r88): [60..61]
 a38(r114): [62..63]
 a39(r87): [64..65]
 a40(r113): [66..67]
  regions=1, blocks=11, points=68
    allocnos=41 (big 0), copies=0, conflicts=0, ranges=41
Disposition:
   39:r87  l0     0   37:r88  l0     0   34:r89  l0     0   33:r90  l0     1
   31:r91  l0     0   30:r92  l0     0   28:r93  l0     0   27:r94  l0     1
   24:r95  l0     0   23:r96  l0     0   22:r97  l0     0   20:r98  l0     1
   17:r99  l0     0   15:r100 l0     1   14:r101 l0     0    8:r102 l0     0
   13:r103 l0     2   11:r104 l0     1   10:r105 l0     1    9:r106 l0     1
    4:r107 l0     1    5:r108 l0     0    3:r109 l0     0    2:r110 l0     0
    1:r111 l0     0    0:r112 l0     0   40:r113 l0     0   38:r114 l0     0
   36:r115 l0     0   35:r116 l0     0   32:r117 l0     0   29:r118 l0     0
   26:r119 l0     0   25:r120 l0     0   21:r121 l0     0   19:r122 l0     0
   18:r123 l0     0   16:r124 l0     0   12:r125 l0     1    7:r126 l0     0
    6:r127 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Str& Str::operator=(const char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,3u} r1={3d} r2={3d,1u} r6={1d,10u} r7={1d,16u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,11u,2e} r17={12d,3u} r18={2d} r19={2d} r20={1d,30u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u,1e} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} 
;;    total ref usage 326{207d,115u,4e} in 63{61 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 113
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:118 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:121 83 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 87 [ D.21526 ])
        (mem/f/j:SI (reg/f:SI 113) [0 this_6(D)->source+0 S4 A32])) ..\Str\str.cpp:121 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.21526 ])
            (const_int 0 [0]))) ..\Str\str.cpp:121 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 87 [ D.21526 ])
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) ..\Str\str.cpp:121 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 15)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 114
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:121 83 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:SI 88 [ D.21526 ])
        (mem/f/j:SI (reg/f:SI 114) [0 this_6(D)->source+0 S4 A32])) ..\Str\str.cpp:121 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 13 12 14 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 88 [ D.21526 ])) ..\Str\str.cpp:121 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ D.21526 ])
        (nil)))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:121 556 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 115
(code_label 15 14 16 4 52 "" [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:122 83 {*movsi_internal}
     (nil))
(insn 18 17 34 4 (set (mem/j:SI (plus:SI (reg/f:SI 115)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:122 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [100,0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 90 91 92 116 117
(code_label 34 18 19 5 54 "" [1 uses])
(note 19 34 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:123 83 {*movsi_internal}
     (nil))
(insn 21 20 22 5 (set (reg:SI 89 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 116)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:123 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 22 21 23 5 (set (reg:SI 90 [ D.21528 ])
        (reg:SI 89 [ D.21527 ])) ..\Str\str.cpp:123 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ D.21527 ])
        (nil)))
(insn 23 22 24 5 (set (reg/f:SI 117)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32])) ..\Str\str.cpp:123 83 {*movsi_internal}
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg/f:SI 91 [ D.21529 ])
                (plus:SI (reg:SI 90 [ D.21528 ])
                    (reg/f:SI 117)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:123 194 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (expr_list:REG_DEAD (reg:SI 90 [ D.21528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32])
                        (reg:SI 90 [ D.21528 ]))
                    (nil))))))
(insn 25 24 26 5 (set (reg:QI 92 [ D.21530 ])
        (mem:QI (reg/f:SI 91 [ D.21529 ]) [0 *_14+0 S1 A8])) ..\Str\str.cpp:123 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ D.21529 ])
        (nil)))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.21530 ])
            (const_int 0 [0]))) ..\Str\str.cpp:123 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 92 [ D.21530 ])
        (nil)))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) ..\Str\str.cpp:123 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 37)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93 94 118 119
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:123 83 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:SI 93 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 118)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:123 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 31 30 32 6 (parallel [
            (set (reg:SI 94 [ D.21527 ])
                (plus:SI (reg:SI 93 [ D.21527 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:123 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ D.21527 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 6 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:123 83 {*movsi_internal}
     (nil))
(insn 33 32 89 6 (set (mem/j:SI (plus:SI (reg/f:SI 119)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])
        (reg:SI 94 [ D.21527 ])) ..\Str\str.cpp:123 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (expr_list:REG_DEAD (reg:SI 94 [ D.21527 ])
            (nil))))
(jump_insn 89 33 90 6 (set (pc)
        (label_ref 34)) ..\Str\str.cpp:123 551 {jump}
     (nil)
 -> 34)
;;  succ:       5 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 90 89 37)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 96 97 98 120 121 122
(code_label 37 90 38 7 53 "" [1 uses])
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:124 83 {*movsi_internal}
     (nil))
(insn 40 39 41 7 (set (reg:SI 95 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:124 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 41 40 42 7 (parallel [
            (set (reg:SI 96 [ D.21527 ])
                (plus:SI (reg:SI 95 [ D.21527 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:124 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ D.21527 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 43 7 (set (reg:SI 97 [ D.21528 ])
        (reg:SI 96 [ D.21527 ])) ..\Str\str.cpp:124 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ D.21527 ])
        (nil)))
(insn 43 42 44 7 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 97 [ D.21528 ])) ..\Str\str.cpp:124 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ D.21528 ])
        (nil)))
(call_insn 44 43 45 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:124 565 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 45 44 46 7 (set (reg/f:SI 121)
        (reg:SI 0 ax)) ..\Str\str.cpp:124 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:SI 121)
            (nil))))
(insn 46 45 47 7 (set (reg/f:SI 98 [ D.21531 ])
        (reg/f:SI 121)) ..\Str\str.cpp:124 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 47 46 48 7 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:124 83 {*movsi_internal}
     (nil))
(insn 48 47 49 7 (set (mem/f/j:SI (reg/f:SI 122) [0 this_6(D)->source+0 S4 A32])
        (reg/f:SI 98 [ D.21531 ])) ..\Str\str.cpp:124 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (expr_list:REG_DEAD (reg/f:SI 98 [ D.21531 ])
            (nil))))
(insn 49 48 67 7 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:125 83 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              9 [100,0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 123
(code_label 67 49 50 8 56 "" [1 uses])
(note 50 67 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:125 83 {*movsi_internal}
     (nil))
(insn 52 51 53 8 (set (reg:SI 99 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 123)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:125 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (nil)))
(insn 53 52 54 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 99 [ D.21527 ])
            (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:125 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ D.21527 ])
        (nil)))
(jump_insn 54 53 55 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) ..\Str\str.cpp:125 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 70)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 101 102 103 104 105 106 124 125
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:126 83 {*movsi_internal}
     (nil))
(insn 57 56 58 9 (set (reg/f:SI 100 [ D.21526 ])
        (mem/f/j:SI (reg/f:SI 124) [0 this_6(D)->source+0 S4 A32])) ..\Str\str.cpp:126 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (nil)))
(insn 58 57 59 9 (set (reg:SI 101 [ D.21528 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:126 83 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (parallel [
            (set (reg/f:SI 102 [ D.21526 ])
                (plus:SI (reg/f:SI 100 [ D.21526 ])
                    (reg:SI 101 [ D.21528 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:126 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ D.21528 ])
        (expr_list:REG_DEAD (reg/f:SI 100 [ D.21526 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 60 59 61 9 (set (reg:SI 103 [ D.21528 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:126 83 {*movsi_internal}
     (nil))
(insn 61 60 62 9 (set (reg/f:SI 125)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32])) ..\Str\str.cpp:126 83 {*movsi_internal}
     (nil))
(insn 62 61 63 9 (parallel [
            (set (reg/f:SI 104 [ D.21529 ])
                (plus:SI (reg:SI 103 [ D.21528 ])
                    (reg/f:SI 125)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:126 194 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (expr_list:REG_DEAD (reg:SI 103 [ D.21528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32])
                        (reg:SI 103 [ D.21528 ]))
                    (nil))))))
(insn 63 62 64 9 (set (reg:QI 105 [ D.21530 ])
        (mem:QI (reg/f:SI 104 [ D.21529 ]) [0 *_32+0 S1 A8])) ..\Str\str.cpp:126 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104 [ D.21529 ])
        (nil)))
(insn 64 63 65 9 (set (reg:QI 106 [ D.21532 ])
        (reg:QI 105 [ D.21530 ])) ..\Str\str.cpp:126 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 105 [ D.21530 ])
        (nil)))
(insn 65 64 66 9 (set (mem:QI (reg/f:SI 102 [ D.21526 ]) [0 *_30+0 S1 A8])
        (reg:QI 106 [ D.21532 ])) ..\Str\str.cpp:126 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 106 [ D.21532 ])
        (expr_list:REG_DEAD (reg/f:SI 102 [ D.21526 ])
            (nil))))
(insn 66 65 91 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:125 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 91 66 92 9 (set (pc)
        (label_ref 67)) ..\Str\str.cpp:125 551 {jump}
     (nil)
 -> 67)
;;  succ:       8 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 92 91 70)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 107 108 109 110 111 112 126 127
(code_label 70 92 71 10 55 "" [1 uses])
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 10 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:128 83 {*movsi_internal}
     (nil))
(insn 73 72 74 10 (set (reg/f:SI 107 [ D.21526 ])
        (mem/f/j:SI (reg/f:SI 126) [0 this_6(D)->source+0 S4 A32])) ..\Str\str.cpp:128 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(insn 74 73 75 10 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:128 83 {*movsi_internal}
     (nil))
(insn 75 74 76 10 (set (reg:SI 108 [ D.21527 ])
        (mem/j:SI (plus:SI (reg/f:SI 127)
                (const_int 4 [0x4])) [0 this_6(D)->size+0 S4 A32])) ..\Str\str.cpp:128 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (nil)))
(insn 76 75 77 10 (set (reg:SI 109 [ D.21528 ])
        (reg:SI 108 [ D.21527 ])) ..\Str\str.cpp:128 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108 [ D.21527 ])
        (nil)))
(insn 77 76 78 10 (parallel [
            (set (reg/f:SI 110 [ D.21526 ])
                (plus:SI (reg/f:SI 107 [ D.21526 ])
                    (reg:SI 109 [ D.21528 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:128 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 109 [ D.21528 ])
        (expr_list:REG_DEAD (reg/f:SI 107 [ D.21526 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 78 77 79 10 (set (mem:QI (reg/f:SI 110 [ D.21526 ]) [0 *_40+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:128 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110 [ D.21526 ])
        (nil)))
(insn 79 78 82 10 (set (reg/f:SI 111 [ D.21533 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:130 83 {*movsi_internal}
     (nil))
(insn 82 79 86 10 (set (reg:SI 112 [ <retval> ])
        (reg/f:SI 111 [ D.21533 ])) ..\Str\str.cpp:130 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111 [ D.21533 ])
        (nil)))
(insn 86 82 87 10 (set (reg/i:SI 0 ax)
        (reg:SI 112 [ <retval> ])) ..\Str\str.cpp:131 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 112 [ <retval> ])
        (nil)))
(insn 87 86 0 10 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:131 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Str& Str::operator=(const Str&) (_ZN3StraSERKS_, funcdef_no=1028, decl_uid=20895, cgraph_uid=205, symbol_order=206)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 9 (    1)
Building IRA IR
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r107,l0) best AREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a12 (r100,l0) best Q_REGS, allocno Q_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a2(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a6(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a7(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a8(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a9(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a10(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a12(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a13(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a14(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a15(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a16(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a17(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a18(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a19(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a20(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a21(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a22(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a23(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a24(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a25(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a26(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a27(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a28(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a29(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a30(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a31(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a32(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a33(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 75(l0): point = 0
   Insn 74(l0): point = 2
   Insn 70(l0): point = 4
   Insn 67(l0): point = 6
   Insn 66(l0): point = 8
   Insn 65(l0): point = 10
   Insn 64(l0): point = 12
   Insn 63(l0): point = 14
   Insn 62(l0): point = 16
   Insn 61(l0): point = 18
   Insn 60(l0): point = 20
   Insn 59(l0): point = 22
   Insn 58(l0): point = 24
   Insn 57(l0): point = 26
   Insn 56(l0): point = 28
   Insn 36(l0): point = 31
   Insn 35(l0): point = 33
   Insn 34(l0): point = 35
   Insn 33(l0): point = 37
   Insn 77(l0): point = 40
   Insn 48(l0): point = 42
   Insn 47(l0): point = 44
   Insn 46(l0): point = 46
   Insn 45(l0): point = 48
   Insn 44(l0): point = 50
   Insn 43(l0): point = 52
   Insn 42(l0): point = 54
   Insn 41(l0): point = 56
   Insn 40(l0): point = 58
   Insn 39(l0): point = 60
   Insn 38(l0): point = 62
   Insn 31(l0): point = 65
   Insn 30(l0): point = 67
   Insn 29(l0): point = 69
   Insn 28(l0): point = 71
   Insn 27(l0): point = 73
   Insn 26(l0): point = 75
   Insn 25(l0): point = 77
   Insn 24(l0): point = 79
   Insn 23(l0): point = 81
   Insn 22(l0): point = 83
   Insn 21(l0): point = 85
   Insn 18(l0): point = 88
   Insn 17(l0): point = 90
   Insn 16(l0): point = 92
   Insn 15(l0): point = 94
   Insn 13(l0): point = 97
   Insn 12(l0): point = 99
   Insn 11(l0): point = 101
   Insn 10(l0): point = 103
   Insn 8(l0): point = 106
   Insn 7(l0): point = 108
   Insn 6(l0): point = 110
   Insn 2(l0): point = 112
 a0(r107): [3..4]
 a1(r106): [5..6]
 a2(r120): [9..10]
 a3(r105): [9..12]
 a4(r119): [13..14]
 a5(r104): [17..18]
 a6(r103): [19..20]
 a7(r101): [19..26]
 a8(r102): [21..22]
 a9(r118): [23..24]
 a10(r117): [27..28]
 a11(r96): [45..56]
 a12(r100): [45..46]
 a13(r99): [47..48]
 a14(r98): [49..50]
 a15(r97): [49..52]
 a16(r116): [53..54]
 a17(r95): [57..58]
 a18(r94): [57..60]
 a19(r115): [61..62]
 a20(r93): [34..35]
 a21(r114): [36..37]
 a22(r113): [68..69]
 a23(r92): [68..71]
 a24(r112): [72..73]
 a25(r91): [78..79]
 a26(r90): [80..81]
 a27(r89): [82..83]
 a28(r111): [84..85]
 a29(r88): [91..92]
 a30(r110): [93..94]
 a31(r87): [100..101]
 a32(r109): [102..103]
 a33(r108): [109..110]
Compressing live ranges: from 115 to 56 - 48%
Ranges after the compression:
 a0(r107): [0..1]
 a1(r106): [2..3]
 a2(r120): [4..5]
 a3(r105): [4..5]
 a4(r119): [6..7]
 a5(r104): [8..9]
 a6(r103): [10..11]
 a7(r101): [10..15]
 a8(r102): [12..13]
 a9(r118): [14..15]
 a10(r117): [16..17]
 a11(r96): [22..29]
 a12(r100): [22..23]
 a13(r99): [24..25]
 a14(r98): [26..27]
 a15(r97): [26..27]
 a16(r116): [28..29]
 a17(r95): [30..31]
 a18(r94): [30..31]
 a19(r115): [32..33]
 a20(r93): [18..19]
 a21(r114): [20..21]
 a22(r113): [34..35]
 a23(r92): [34..35]
 a24(r112): [36..37]
 a25(r91): [38..39]
 a26(r90): [40..41]
 a27(r89): [42..43]
 a28(r111): [44..45]
 a29(r88): [46..47]
 a30(r110): [48..49]
 a31(r87): [50..51]
 a32(r109): [52..53]
 a33(r108): [54..55]
  regions=1, blocks=9, points=56
    allocnos=34 (big 0), copies=0, conflicts=0, ranges=34
Disposition:
   31:r87  l0     0   29:r88  l0     0   27:r89  l0     0   26:r90  l0     0
   25:r91  l0     0   23:r92  l0     1   20:r93  l0     0   18:r94  l0     1
   17:r95  l0     0   11:r96  l0     1   15:r97  l0     2   14:r98  l0     0
   13:r99  l0     0   12:r100 l0     0    7:r101 l0     1    8:r102 l0     0
    6:r103 l0     0    5:r104 l0     0    3:r105 l0     1    1:r106 l0     0
    0:r107 l0     0   33:r108 l0     0   32:r109 l0     0   30:r110 l0     0
   28:r111 l0     0   24:r112 l0     0   22:r113 l0     0   21:r114 l0     0
   19:r115 l0     0   16:r116 l0     0   10:r117 l0     0    9:r118 l0     0
    4:r119 l0     0    2:r120 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Str& Str::operator=(const Str&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,3u} r1={3d} r2={3d,1u} r6={1d,8u} r7={1d,14u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,13u} r17={10d,3u} r18={2d} r19={2d} r20={1d,23u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} 
;;    total ref usage 297{198d,99u,0e} in 54{52 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 108
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:133 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:134 83 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 108)
            (mem/f/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32]))) ..\Str\str.cpp:134 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) ..\Str\str.cpp:134 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
;;  succ:       3 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 109
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:136 83 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg/f:SI 87 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 109) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:136 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.21534 ])
            (const_int 0 [0]))) ..\Str\str.cpp:136 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 87 [ D.21534 ])
        (nil)))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ..\Str\str.cpp:136 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 110
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:136 83 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg/f:SI 88 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 110) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:136 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 17 16 18 4 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 88 [ D.21534 ])) ..\Str\str.cpp:136 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ D.21534 ])
        (nil)))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:136 556 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 111 112 113
(code_label 19 18 20 5 60 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32])) ..\Str\str.cpp:137 83 {*movsi_internal}
     (nil))
(insn 22 21 23 5 (set (reg:SI 89 [ D.21535 ])
        (mem/j:SI (plus:SI (reg/f:SI 111)
                (const_int 4 [0x4])) [0 right_6(D)->size+0 S4 A32])) ..\Str\str.cpp:137 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 23 22 24 5 (parallel [
            (set (reg:SI 90 [ D.21535 ])
                (plus:SI (reg:SI 89 [ D.21535 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:137 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.21535 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 24 23 25 5 (set (reg:SI 91 [ D.21536 ])
        (reg:SI 90 [ D.21535 ])) ..\Str\str.cpp:137 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ D.21535 ])
        (nil)))
(insn 25 24 26 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 91 [ D.21536 ])) ..\Str\str.cpp:137 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ D.21536 ])
        (nil)))
(call_insn 26 25 27 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:137 565 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 27 26 28 5 (set (reg/f:SI 112)
        (reg:SI 0 ax)) ..\Str\str.cpp:137 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:SI 112)
            (nil))))
(insn 28 27 29 5 (set (reg/f:SI 92 [ D.21537 ])
        (reg/f:SI 112)) ..\Str\str.cpp:137 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 29 28 30 5 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:137 83 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (mem/f/j:SI (reg/f:SI 113) [0 this_5(D)->source+0 S4 A32])
        (reg/f:SI 92 [ D.21537 ])) ..\Str\str.cpp:137 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (expr_list:REG_DEAD (reg/f:SI 92 [ D.21537 ])
            (nil))))
(insn 31 30 49 5 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:138 83 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              7 [100,0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93 114
(code_label 49 31 32 6 62 "" [1 uses])
(note 32 49 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32])) ..\Str\str.cpp:138 83 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:SI 93 [ D.21535 ])
        (mem/j:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [0 right_6(D)->size+0 S4 A32])) ..\Str\str.cpp:138 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 35 34 36 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 93 [ D.21535 ])
            (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:138 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ D.21535 ])
        (nil)))
(jump_insn 36 35 37 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 54)
            (pc))) ..\Str\str.cpp:138 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 54)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94 95 96 97 98 99 100 115 116
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:139 83 {*movsi_internal}
     (nil))
(insn 39 38 40 7 (set (reg/f:SI 94 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 115) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:139 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 40 39 41 7 (set (reg:SI 95 [ D.21538 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:139 83 {*movsi_internal}
     (nil))
(insn 41 40 42 7 (parallel [
            (set (reg/f:SI 96 [ D.21534 ])
                (plus:SI (reg/f:SI 94 [ D.21534 ])
                    (reg:SI 95 [ D.21538 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:139 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ D.21538 ])
        (expr_list:REG_DEAD (reg/f:SI 94 [ D.21534 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 42 41 43 7 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32])) ..\Str\str.cpp:139 83 {*movsi_internal}
     (nil))
(insn 43 42 44 7 (set (reg/f:SI 97 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 116) [0 right_6(D)->source+0 S4 A32])) ..\Str\str.cpp:139 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 44 43 45 7 (set (reg:SI 98 [ D.21538 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:139 83 {*movsi_internal}
     (nil))
(insn 45 44 46 7 (parallel [
            (set (reg/f:SI 99 [ D.21534 ])
                (plus:SI (reg/f:SI 97 [ D.21534 ])
                    (reg:SI 98 [ D.21538 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:139 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ D.21538 ])
        (expr_list:REG_DEAD (reg/f:SI 97 [ D.21534 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 46 45 47 7 (set (reg:QI 100 [ D.21539 ])
        (mem:QI (reg/f:SI 99 [ D.21534 ]) [0 *_25+0 S1 A8])) ..\Str\str.cpp:139 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99 [ D.21534 ])
        (nil)))
(insn 47 46 48 7 (set (mem:QI (reg/f:SI 96 [ D.21534 ]) [0 *_22+0 S1 A8])
        (reg:QI 100 [ D.21539 ])) ..\Str\str.cpp:139 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 100 [ D.21539 ])
        (expr_list:REG_DEAD (reg/f:SI 96 [ D.21534 ])
            (nil))))
(insn 48 47 77 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:138 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 77 48 78 7 (set (pc)
        (label_ref 49)) ..\Str\str.cpp:138 551 {jump}
     (nil)
 -> 49)
;;  succ:       6 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 78 77 54)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 101 102 103 104 105 106 107 117 118 119 120
(code_label 54 78 55 8 59 "" [2 uses])
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:141 83 {*movsi_internal}
     (nil))
(insn 57 56 58 8 (set (reg/f:SI 101 [ D.21534 ])
        (mem/f/j:SI (reg/f:SI 117) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:141 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 58 57 59 8 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32])) ..\Str\str.cpp:141 83 {*movsi_internal}
     (nil))
(insn 59 58 60 8 (set (reg:SI 102 [ D.21535 ])
        (mem/j:SI (plus:SI (reg/f:SI 118)
                (const_int 4 [0x4])) [0 right_6(D)->size+0 S4 A32])) ..\Str\str.cpp:141 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 60 59 61 8 (set (reg:SI 103 [ D.21538 ])
        (reg:SI 102 [ D.21535 ])) ..\Str\str.cpp:141 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102 [ D.21535 ])
        (nil)))
(insn 61 60 62 8 (parallel [
            (set (reg/f:SI 104 [ D.21534 ])
                (plus:SI (reg/f:SI 101 [ D.21534 ])
                    (reg:SI 103 [ D.21538 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:141 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 103 [ D.21538 ])
        (expr_list:REG_DEAD (reg/f:SI 101 [ D.21534 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 62 61 63 8 (set (mem:QI (reg/f:SI 104 [ D.21534 ]) [0 *_32+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:141 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104 [ D.21534 ])
        (nil)))
(insn 63 62 64 8 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 right+0 S4 A32])) ..\Str\str.cpp:142 83 {*movsi_internal}
     (nil))
(insn 64 63 65 8 (set (reg:SI 105 [ D.21535 ])
        (mem/j:SI (plus:SI (reg/f:SI 119)
                (const_int 4 [0x4])) [0 right_6(D)->size+0 S4 A32])) ..\Str\str.cpp:142 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))
(insn 65 64 66 8 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:142 83 {*movsi_internal}
     (nil))
(insn 66 65 67 8 (set (mem/j:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])
        (reg:SI 105 [ D.21535 ])) ..\Str\str.cpp:142 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (expr_list:REG_DEAD (reg:SI 105 [ D.21535 ])
            (nil))))
(insn 67 66 70 8 (set (reg/f:SI 106 [ D.21540 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:143 83 {*movsi_internal}
     (nil))
(insn 70 67 74 8 (set (reg:SI 107 [ <retval> ])
        (reg/f:SI 106 [ D.21540 ])) ..\Str\str.cpp:143 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106 [ D.21540 ])
        (nil)))
(insn 74 70 75 8 (set (reg/i:SI 0 ax)
        (reg:SI 107 [ <retval> ])) ..\Str\str.cpp:144 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107 [ <retval> ])
        (nil)))
(insn 75 74 0 8 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:144 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Str operator+(const Str&, const Str&) (_ZplRK3StrS1_, funcdef_no=1029, decl_uid=20902, cgraph_uid=206, symbol_order=207)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 30(l0): point = 0
   Insn 29(l0): point = 2
   Insn 26(l0): point = 5
   Insn 25(l0): point = 7
   Insn 24(l0): point = 9
   Insn 23(l0): point = 11
   Insn 22(l0): point = 13
   Insn 34(l0): point = 15
   Insn 37(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 23
   Insn 12(l0): point = 25
   Insn 11(l0): point = 27
   Insn 10(l0): point = 29
   Insn 9(l0): point = 31
   Insn 8(l0): point = 33
   Insn 7(l0): point = 35
   Insn 6(l0): point = 37
   Insn 5(l0): point = 39
 a0(r87): [8..9]
 a1(r90): [10..15]
 a2(r89): [28..29]
 a3(r88): [38..39]
Compressing live ranges: from 42 to 8 - 19%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r90): [2..3]
 a2(r89): [4..5]
 a3(r88): [6..7]
  regions=1, blocks=6, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    0:r87  l0     0    3:r88  l0     0    2:r89  l0     0    1:r90  l0     3
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Str operator+(const Str&, const Str&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={7d,3u} r1={6d} r2={8d,3u} r6={1d,5u} r7={5d,23u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,10u} r17={6d} r18={4d} r19={4d} r20={1d,5u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 372{319d,53u,0e} in 19{15 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 88)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 left+0 S4 A32])) ..\Str\str.cpp:147 83 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 88)) ..\Str\str.cpp:147 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88)
        (nil)))
(insn 7 6 8 2 (set (reg:SI 2 cx)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:147 83 {*movsi_internal}
     (nil))
(call_insn 8 7 9 2 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZN3StrC1ERKS_") [flags 0x3]  <function_decl 04e59e00 __comp_ctor >) [0 __comp_ctor  S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) ..\Str\str.cpp:147 562 {*call_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:147 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 10 9 11 2 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [0 right+0 S4 A32])) ..\Str\str.cpp:148 83 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 89)) ..\Str\str.cpp:148 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 12 11 13 2 (set (reg:SI 2 cx)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:148 83 {*movsi_internal}
     (nil))
(call_insn 13 12 32 2 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("_ZN3StrpLERKS_") [flags 0x3]  <function_decl 04e59700 operator+=>) [0 operator+= S1 A8])
                    (const_int 4 [0x4])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) ..\Str\str.cpp:148 571 {*call_value_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
                    (nil)))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 7 [sp] 17 [flags]
(note 32 13 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 32 37 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:148 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 37 14 38 3 (set (pc)
        (label_ref 36)) ..\Str\str.cpp:149 551 {jump}
     (nil)
 -> 36)
;;  succ:       5 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 38 37 33)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90
(code_label/s 33 38 35 4 67 "" [1 uses])
(note 35 33 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 35 22 4 (set (reg:SI 90)
        (reg:SI 0 ax)) 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 22 34 23 4 (set (reg:SI 2 cx)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 .result_ptr+0 S4 A32])) 83 {*movsi_internal}
     (nil))
(call_insn 23 22 24 4 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) 556 {*call}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn 24 23 25 4 (set (reg/f:SI 87 [ D.21541 ])
        (reg:SI 90)) 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(insn 25 24 26 4 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 87 [ D.21541 ])) 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ D.21541 ])
        (nil)))
(call_insn 26 25 27 4 (call (mem:QI (symbol_ref:SI ("_Unwind_Resume") [flags 0x43]  <function_decl 041dff00 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 4 [0x4])) 556 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 27 26 36)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100,0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
(code_label 36 27 31 5 68 "" [1 uses])
(note 31 36 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 31 30 5 (set (reg/i:SI 0 ax)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:150 83 {*movsi_internal}
     (nil))
(insn 30 29 0 5 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:150 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Str operator+(char, const Str&) (_ZplcRK3Str, funcdef_no=1030, decl_uid=21066, cgraph_uid=207, symbol_order=208)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r95,l0) best CREG, allocno GENERAL_REGS
    r94: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r94,l0) best CREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best CREG, allocno GENERAL_REGS
    r90: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a9 (r90,l0) best Q_REGS, allocno Q_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a1(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a2(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a3(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a9(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:8

   Insn 40(l0): point = 0
   Insn 39(l0): point = 2
   Insn 36(l0): point = 5
   Insn 35(l0): point = 7
   Insn 34(l0): point = 9
   Insn 33(l0): point = 11
   Insn 32(l0): point = 13
   Insn 31(l0): point = 15
   Insn 43(l0): point = 17
   Insn 47(l0): point = 20
   Insn 24(l0): point = 22
   Insn 23(l0): point = 24
   Insn 22(l0): point = 26
   Insn 45(l0): point = 28
   Insn 19(l0): point = 31
   Insn 18(l0): point = 33
   Insn 17(l0): point = 35
   Insn 16(l0): point = 37
   Insn 15(l0): point = 39
   Insn 14(l0): point = 41
   Insn 13(l0): point = 43
   Insn 12(l0): point = 45
   Insn 11(l0): point = 47
   Insn 10(l0): point = 49
   Insn 9(l0): point = 51
   Insn 8(l0): point = 53
   Insn 7(l0): point = 55
   Insn 3(l0): point = 57
   Insn 2(l0): point = 59
 a0(r87): [8..9]
 a1(r96): [10..17]
 a2(r95): [14..15]
 a3(r94): [25..26]
 a4(r92): [34..41]
 a5(r89): [36..43]
 a6(r93): [38..39]
 a7(r91): [50..53]
 a8(r88): [52..55]
 a9(r90): [58..59]
Compressing live ranges: from 62 to 12 - 19%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r96): [2..3]
 a2(r95): [2..3]
 a3(r94): [4..5]
 a4(r92): [6..7]
 a5(r89): [6..7]
 a6(r93): [6..7]
 a7(r91): [8..9]
 a8(r88): [8..9]
 a9(r90): [10..11]
  regions=1, blocks=6, points=12
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    0:r87  l0     0    8:r88  l0     1    5:r89  l0     1    9:r90  l0     0
    7:r91  l0     0    4:r92  l0     0    6:r93  l0     2    3:r94  l0     0
    2:r95  l0     0    1:r96  l0     3
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Str operator+(char, const Str&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={8d,3u} r1={7d} r2={9d,3u} r6={1d,5u} r7={3d,24u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,7u} r17={10d} r18={5d} r19={5d} r20={1d,12u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 464{400d,64u,0e} in 29{24 regular + 5 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 93
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg:SI 90)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 left+0 S4 A32])) ..\Str\str.cpp:152 83 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 left+0 S1 A32])
        (subreg:QI (reg:SI 90) 0)) ..\Str\str.cpp:152 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 88 [ D.21544 ])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 left+0 S1 A32]))) ..\Str\str.cpp:153 131 {extendqisi2}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:SI 91)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:153 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 88 [ D.21544 ])) ..\Str\str.cpp:153 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ D.21544 ])
        (nil)))
(insn 10 9 11 2 (set (reg:SI 2 cx)
        (reg:SI 91)) ..\Str\str.cpp:153 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(call_insn 11 10 12 2 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZN3StrC1Ec") [flags 0x3]  <function_decl 04e59f00 __comp_ctor >) [0 __comp_ctor  S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) ..\Str\str.cpp:153 562 {*call_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn 12 11 13 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:153 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 13 12 14 2 (set (reg:SI 89 [ D.21544 ])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 left+0 S1 A32]))) ..\Str\str.cpp:154 131 {extendqisi2}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 92)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:154 83 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:SI 93)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:154 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 93)) ..\Str\str.cpp:154 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 17 16 18 2 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg:SI 89 [ D.21544 ])) ..\Str\str.cpp:154 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ D.21544 ])
        (nil)))
(insn 18 17 19 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 92)) ..\Str\str.cpp:154 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(call_insn 19 18 20 2 (call (mem:QI (symbol_ref:SI ("_ZplcRK3Str") [flags 0x3]  <function_decl 04e5f900 operator+>) [0 operator+ S1 A8])
        (const_int 12 [0xc])) ..\Str\str.cpp:154 556 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (nil)))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94
(note 20 19 45 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 45 20 22 3 (const_int 0 [0]) ..\Str\str.cpp:154 581 {nop}
     (nil))
(insn 22 45 23 3 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:153 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 3 (set (reg:SI 2 cx)
        (reg:SI 94)) ..\Str\str.cpp:153 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(call_insn 24 23 47 3 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:153 556 {*call}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(jump_insn 47 24 48 3 (set (pc)
        (label_ref 46)) ..\Str\str.cpp:154 551 {jump}
     (nil)
 -> 46)
;;  succ:       5 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 48 47 42)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 95 96
(code_label/s 42 48 44 4 72 "" [1 uses])
(note 44 42 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 43 44 31 4 (set (reg:SI 96)
        (reg:SI 0 ax)) 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 31 43 32 4 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:153 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 31 33 4 (set (reg:SI 2 cx)
        (reg:SI 95)) ..\Str\str.cpp:153 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(call_insn 33 32 34 4 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:153 556 {*call}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn 34 33 35 4 (set (reg/f:SI 87 [ D.21543 ])
        (reg:SI 96)) 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(insn 35 34 36 4 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 87 [ D.21543 ])) 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ D.21543 ])
        (nil)))
(call_insn 36 35 37 4 (call (mem:QI (symbol_ref:SI ("_Unwind_Resume") [flags 0x43]  <function_decl 041dff00 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 4 [0x4])) 556 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 37 36 46)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100,0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
(code_label 46 37 41 5 73 "" [1 uses])
(note 41 46 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 41 40 5 (set (reg/i:SI 0 ax)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:155 83 {*movsi_internal}
     (nil))
(insn 40 39 0 5 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:155 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Str operator+(const Str&, char) (_ZplRK3Strc, funcdef_no=1031, decl_uid=20905, cgraph_uid=208, symbol_order=209)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r95,l0) best CREG, allocno GENERAL_REGS
    r94: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r94,l0) best CREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best CREG, allocno GENERAL_REGS
    r89: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a9 (r89,l0) best Q_REGS, allocno Q_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a1(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a2(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a3(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a4(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a9(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:8

   Insn 40(l0): point = 0
   Insn 39(l0): point = 2
   Insn 36(l0): point = 5
   Insn 35(l0): point = 7
   Insn 34(l0): point = 9
   Insn 33(l0): point = 11
   Insn 32(l0): point = 13
   Insn 31(l0): point = 15
   Insn 43(l0): point = 17
   Insn 47(l0): point = 20
   Insn 24(l0): point = 22
   Insn 23(l0): point = 24
   Insn 22(l0): point = 26
   Insn 45(l0): point = 28
   Insn 19(l0): point = 31
   Insn 18(l0): point = 33
   Insn 17(l0): point = 35
   Insn 16(l0): point = 37
   Insn 15(l0): point = 39
   Insn 14(l0): point = 41
   Insn 13(l0): point = 43
   Insn 12(l0): point = 45
   Insn 11(l0): point = 47
   Insn 10(l0): point = 49
   Insn 9(l0): point = 51
   Insn 8(l0): point = 53
   Insn 7(l0): point = 55
   Insn 3(l0): point = 57
   Insn 2(l0): point = 59
 a0(r87): [8..9]
 a1(r96): [10..17]
 a2(r95): [14..15]
 a3(r94): [25..26]
 a4(r91): [34..43]
 a5(r93): [36..37]
 a6(r92): [40..41]
 a7(r90): [50..53]
 a8(r88): [52..55]
 a9(r89): [58..59]
Compressing live ranges: from 62 to 14 - 22%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r96): [2..3]
 a2(r95): [2..3]
 a3(r94): [4..5]
 a4(r91): [6..9]
 a5(r93): [6..7]
 a6(r92): [8..9]
 a7(r90): [10..11]
 a8(r88): [10..11]
 a9(r89): [12..13]
  regions=1, blocks=6, points=14
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    0:r87  l0     0    8:r88  l0     1    9:r89  l0     0    7:r90  l0     0
    4:r91  l0     0    6:r92  l0     1    5:r93  l0     1    3:r94  l0     0
    2:r95  l0     0    1:r96  l0     3
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Str operator+(const Str&, char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={8d,3u} r1={7d} r2={9d,3u} r6={1d,5u} r7={3d,24u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,8u} r17={10d} r18={5d} r19={5d} r20={1d,11u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 464{400d,64u,0e} in 29{24 regular + 5 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 93
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg:SI 89)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [0 right+0 S4 A32])) ..\Str\str.cpp:157 83 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 right+0 S1 A32])
        (subreg:QI (reg:SI 89) 0)) ..\Str\str.cpp:157 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 88 [ D.21548 ])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 right+0 S1 A32]))) ..\Str\str.cpp:158 131 {extendqisi2}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:SI 90)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:158 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 88 [ D.21548 ])) ..\Str\str.cpp:158 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ D.21548 ])
        (nil)))
(insn 10 9 11 2 (set (reg:SI 2 cx)
        (reg:SI 90)) ..\Str\str.cpp:158 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(call_insn 11 10 12 2 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZN3StrC1Ec") [flags 0x3]  <function_decl 04e59f00 __comp_ctor >) [0 __comp_ctor  S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) ..\Str\str.cpp:158 562 {*call_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn 12 11 13 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:158 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 13 12 14 2 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:159 83 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:SI 92)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:159 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 14 16 2 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 92)) ..\Str\str.cpp:159 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 16 15 17 2 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 left+0 S4 A32])) ..\Str\str.cpp:159 83 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 93)) ..\Str\str.cpp:159 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (nil)))
(insn 18 17 19 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 91)) ..\Str\str.cpp:159 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(call_insn 19 18 20 2 (call (mem:QI (symbol_ref:SI ("_ZplRK3StrS1_") [flags 0x3]  <function_decl 04e59600 operator+>) [0 operator+ S1 A8])
        (const_int 12 [0xc])) ..\Str\str.cpp:159 556 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (nil)))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94
(note 20 19 45 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 45 20 22 3 (const_int 0 [0]) ..\Str\str.cpp:159 581 {nop}
     (nil))
(insn 22 45 23 3 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:158 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 3 (set (reg:SI 2 cx)
        (reg:SI 94)) ..\Str\str.cpp:158 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(call_insn 24 23 47 3 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:158 556 {*call}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(jump_insn 47 24 48 3 (set (pc)
        (label_ref 46)) ..\Str\str.cpp:159 551 {jump}
     (nil)
 -> 46)
;;  succ:       5 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 48 47 42)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 95 96
(code_label/s 42 48 44 4 77 "" [1 uses])
(note 44 42 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 43 44 31 4 (set (reg:SI 96)
        (reg:SI 0 ax)) 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 31 43 32 4 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:158 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 31 33 4 (set (reg:SI 2 cx)
        (reg:SI 95)) ..\Str\str.cpp:158 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(call_insn 33 32 34 4 (call (mem:QI (symbol_ref:SI ("_ZN3StrD1Ev") [flags 0x3]  <function_decl 04e5f100 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:158 556 {*call}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn 34 33 35 4 (set (reg/f:SI 87 [ D.21547 ])
        (reg:SI 96)) 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(insn 35 34 36 4 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 87 [ D.21547 ])) 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ D.21547 ])
        (nil)))
(call_insn 36 35 37 4 (call (mem:QI (symbol_ref:SI ("_Unwind_Resume") [flags 0x43]  <function_decl 041dff00 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 4 [0x4])) 556 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 37 36 46)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100,0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
(code_label 46 37 41 5 78 "" [1 uses])
(note 41 46 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 41 40 5 (set (reg/i:SI 0 ax)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 .result_ptr+0 S4 A32])) ..\Str\str.cpp:160 83 {*movsi_internal}
     (nil))
(insn 40 39 0 5 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:160 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Str::Str(char*) (_ZN3StrC2EPc, funcdef_no=1033, decl_uid=20958, cgraph_uid=210, symbol_order=211)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)
Building IRA IR
verify found no changes in insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r115,l0) best AREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a7 (r104,l0) best Q_REGS, allocno Q_REGS
    r103: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a8 (r103,l0) best Q_REGS, allocno Q_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a28 (r90,l0) best Q_REGS, allocno Q_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a1(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a2(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a3(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a4(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a7(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a8(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:7
  a9(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a10(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a11(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a12(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a13(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a14(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a15(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a16(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a17(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a18(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a19(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a20(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a21(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a22(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a23(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a24(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a25(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a26(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a27(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a28(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a29(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a30(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a31(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a32(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a33(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a34(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 70(l0): point = 0
   Insn 67(l0): point = 2
   Insn 66(l0): point = 4
   Insn 65(l0): point = 6
   Insn 64(l0): point = 8
   Insn 63(l0): point = 10
   Insn 62(l0): point = 12
   Insn 61(l0): point = 14
   Insn 43(l0): point = 17
   Insn 42(l0): point = 19
   Insn 41(l0): point = 21
   Insn 40(l0): point = 23
   Insn 73(l0): point = 26
   Insn 55(l0): point = 28
   Insn 54(l0): point = 30
   Insn 53(l0): point = 32
   Insn 52(l0): point = 34
   Insn 51(l0): point = 36
   Insn 50(l0): point = 38
   Insn 49(l0): point = 40
   Insn 48(l0): point = 42
   Insn 47(l0): point = 44
   Insn 46(l0): point = 46
   Insn 45(l0): point = 48
   Insn 38(l0): point = 51
   Insn 37(l0): point = 53
   Insn 36(l0): point = 55
   Insn 35(l0): point = 57
   Insn 34(l0): point = 59
   Insn 33(l0): point = 61
   Insn 32(l0): point = 63
   Insn 31(l0): point = 65
   Insn 30(l0): point = 67
   Insn 29(l0): point = 69
   Insn 28(l0): point = 71
   Insn 16(l0): point = 74
   Insn 15(l0): point = 76
   Insn 14(l0): point = 78
   Insn 13(l0): point = 80
   Insn 12(l0): point = 82
   Insn 11(l0): point = 84
   Insn 10(l0): point = 86
   Insn 9(l0): point = 88
   Insn 71(l0): point = 91
   Insn 22(l0): point = 93
   Insn 21(l0): point = 95
   Insn 20(l0): point = 97
   Insn 19(l0): point = 99
   Insn 18(l0): point = 101
   Insn 7(l0): point = 104
   Insn 6(l0): point = 106
   Insn 2(l0): point = 108
 a0(r108): [3..4]
 a1(r107): [5..6]
 a2(r105): [5..12]
 a3(r106): [7..8]
 a4(r121): [9..10]
 a5(r120): [13..14]
 a6(r100): [31..42]
 a7(r104): [31..32]
 a8(r103): [33..34]
 a9(r102): [35..36]
 a10(r119): [37..38]
 a11(r101): [37..40]
 a12(r99): [43..44]
 a13(r98): [43..46]
 a14(r118): [47..48]
 a15(r97): [20..21]
 a16(r117): [22..23]
 a17(r116): [54..55]
 a18(r96): [54..57]
 a19(r115): [58..59]
 a20(r95): [64..65]
 a21(r94): [66..67]
 a22(r93): [68..69]
 a23(r114): [70..71]
 a24(r113): [94..95]
 a25(r92): [94..97]
 a26(r91): [98..99]
 a27(r112): [100..101]
 a28(r90): [77..78]
 a29(r89): [79..80]
 a30(r111): [81..82]
 a31(r88): [81..84]
 a32(r87): [85..86]
 a33(r110): [87..88]
 a34(r109): [105..106]
Compressing live ranges: from 111 to 56 - 50%
Ranges after the compression:
 a0(r108): [0..1]
 a1(r107): [2..3]
 a2(r105): [2..7]
 a3(r106): [4..5]
 a4(r121): [6..7]
 a5(r120): [8..9]
 a6(r100): [14..21]
 a7(r104): [14..15]
 a8(r103): [16..17]
 a9(r102): [18..19]
 a10(r119): [20..21]
 a11(r101): [20..21]
 a12(r99): [22..23]
 a13(r98): [22..23]
 a14(r118): [24..25]
 a15(r97): [10..11]
 a16(r117): [12..13]
 a17(r116): [26..27]
 a18(r96): [26..27]
 a19(r115): [28..29]
 a20(r95): [30..31]
 a21(r94): [32..33]
 a22(r93): [34..35]
 a23(r114): [36..37]
 a24(r113): [48..49]
 a25(r92): [48..49]
 a26(r91): [50..51]
 a27(r112): [52..53]
 a28(r90): [38..39]
 a29(r89): [40..41]
 a30(r111): [42..43]
 a31(r88): [42..43]
 a32(r87): [44..45]
 a33(r110): [46..47]
 a34(r109): [54..55]
  regions=1, blocks=9, points=56
    allocnos=35 (big 0), copies=0, conflicts=0, ranges=35
Disposition:
   32:r87  l0     0   31:r88  l0     1   29:r89  l0     0   28:r90  l0     0
   26:r91  l0     0   25:r92  l0     1   22:r93  l0     0   21:r94  l0     0
   20:r95  l0     0   18:r96  l0     1   15:r97  l0     0   13:r98  l0     1
   12:r99  l0     0    6:r100 l0     0   11:r101 l0     2    9:r102 l0     1
    8:r103 l0     1    7:r104 l0     1    2:r105 l0     1    3:r106 l0     0
    1:r107 l0     0    0:r108 l0     0   34:r109 l0     0   33:r110 l0     0
   30:r111 l0     0   27:r112 l0     0   24:r113 l0     0   23:r114 l0     0
   19:r115 l0     0   17:r116 l0     0   16:r117 l0     0   14:r118 l0     0
   10:r119 l0     1    5:r120 l0     0    4:r121 l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Str::Str(char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d,1u} r6={1d,8u} r7={1d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,9u,2e} r17={10d,2u} r18={1d} r19={1d} r20={1d,25u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u,1e} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} 
;;    total ref usage 221{125d,92u,4e} in 52{51 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 109
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:162 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:163 83 {*movsi_internal}
     (nil))
(insn 7 6 23 2 (set (mem/j:SI (plus:SI (reg/f:SI 109)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:163 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100,0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 110 111
(code_label 23 7 8 3 81 "" [1 uses])
(note 8 23 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:164 83 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:SI 87 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:164 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 11 10 12 3 (set (reg:SI 88 [ D.21552 ])
        (reg:SI 87 [ D.21551 ])) ..\Str\str.cpp:164 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.21551 ])
        (nil)))
(insn 12 11 13 3 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 str+0 S4 A32])) ..\Str\str.cpp:164 83 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (parallel [
            (set (reg/f:SI 89 [ D.21553 ])
                (plus:SI (reg:SI 88 [ D.21552 ])
                    (reg/f:SI 111)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:164 194 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (expr_list:REG_DEAD (reg:SI 88 [ D.21552 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 str+0 S4 A32])
                        (reg:SI 88 [ D.21552 ]))
                    (nil))))))
(insn 14 13 15 3 (set (reg:QI 90 [ D.21554 ])
        (mem:QI (reg/f:SI 89 [ D.21553 ]) [0 *_10+0 S1 A8])) ..\Str\str.cpp:164 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89 [ D.21553 ])
        (nil)))
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.21554 ])
            (const_int 0 [0]))) ..\Str\str.cpp:164 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 90 [ D.21554 ])
        (nil)))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) ..\Str\str.cpp:164 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 26)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91 92 112 113
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 112)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:164 83 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:SI 91 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 112)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:164 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 20 19 21 4 (parallel [
            (set (reg:SI 92 [ D.21551 ])
                (plus:SI (reg:SI 91 [ D.21551 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:164 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ D.21551 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 4 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:164 83 {*movsi_internal}
     (nil))
(insn 22 21 71 4 (set (mem/j:SI (plus:SI (reg/f:SI 113)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])
        (reg:SI 92 [ D.21551 ])) ..\Str\str.cpp:164 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (expr_list:REG_DEAD (reg:SI 92 [ D.21551 ])
            (nil))))
(jump_insn 71 22 72 4 (set (pc)
        (label_ref 23)) ..\Str\str.cpp:164 551 {jump}
     (nil)
 -> 23)
;;  succ:       3 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 72 71 26)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 94 95 96 114 115 116
(code_label 26 72 27 5 80 "" [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:165 83 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:SI 93 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:165 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 30 29 31 5 (parallel [
            (set (reg:SI 94 [ D.21551 ])
                (plus:SI (reg:SI 93 [ D.21551 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:165 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ D.21551 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 5 (set (reg:SI 95 [ D.21552 ])
        (reg:SI 94 [ D.21551 ])) ..\Str\str.cpp:165 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ D.21551 ])
        (nil)))
(insn 32 31 33 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 95 [ D.21552 ])) ..\Str\str.cpp:165 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95 [ D.21552 ])
        (nil)))
(call_insn 33 32 34 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:165 565 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 34 33 35 5 (set (reg/f:SI 115)
        (reg:SI 0 ax)) ..\Str\str.cpp:165 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:SI 115)
            (nil))))
(insn 35 34 36 5 (set (reg/f:SI 96 [ D.21555 ])
        (reg/f:SI 115)) ..\Str\str.cpp:165 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 36 35 37 5 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:165 83 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (mem/f/j:SI (reg/f:SI 116) [0 this_5(D)->source+0 S4 A32])
        (reg/f:SI 96 [ D.21555 ])) ..\Str\str.cpp:165 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (expr_list:REG_DEAD (reg/f:SI 96 [ D.21555 ])
            (nil))))
(insn 38 37 56 5 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:166 83 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              7 [100,0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 97 117
(code_label 56 38 39 6 83 "" [1 uses])
(note 39 56 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:166 83 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (set (reg:SI 97 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 117)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:166 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 42 41 43 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 97 [ D.21551 ])
            (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:166 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 97 [ D.21551 ])
        (nil)))
(jump_insn 43 42 44 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) ..\Str\str.cpp:166 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 59)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 98 99 100 101 102 103 104 118 119
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:167 83 {*movsi_internal}
     (nil))
(insn 46 45 47 7 (set (reg/f:SI 98 [ D.21556 ])
        (mem/f/j:SI (reg/f:SI 118) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:167 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 47 46 48 7 (set (reg:SI 99 [ D.21552 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:167 83 {*movsi_internal}
     (nil))
(insn 48 47 49 7 (parallel [
            (set (reg/f:SI 100 [ D.21556 ])
                (plus:SI (reg/f:SI 98 [ D.21556 ])
                    (reg:SI 99 [ D.21552 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:167 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ D.21552 ])
        (expr_list:REG_DEAD (reg/f:SI 98 [ D.21556 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 49 48 50 7 (set (reg:SI 101 [ D.21552 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:167 83 {*movsi_internal}
     (nil))
(insn 50 49 51 7 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 str+0 S4 A32])) ..\Str\str.cpp:167 83 {*movsi_internal}
     (nil))
(insn 51 50 52 7 (parallel [
            (set (reg/f:SI 102 [ D.21553 ])
                (plus:SI (reg:SI 101 [ D.21552 ])
                    (reg/f:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:167 194 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (expr_list:REG_DEAD (reg:SI 101 [ D.21552 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 str+0 S4 A32])
                        (reg:SI 101 [ D.21552 ]))
                    (nil))))))
(insn 52 51 53 7 (set (reg:QI 103 [ D.21554 ])
        (mem:QI (reg/f:SI 102 [ D.21553 ]) [0 *_28+0 S1 A8])) ..\Str\str.cpp:167 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102 [ D.21553 ])
        (nil)))
(insn 53 52 54 7 (set (reg:QI 104 [ D.21557 ])
        (reg:QI 103 [ D.21554 ])) ..\Str\str.cpp:167 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 103 [ D.21554 ])
        (nil)))
(insn 54 53 55 7 (set (mem:QI (reg/f:SI 100 [ D.21556 ]) [0 *_26+0 S1 A8])
        (reg:QI 104 [ D.21557 ])) ..\Str\str.cpp:167 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 104 [ D.21557 ])
        (expr_list:REG_DEAD (reg/f:SI 100 [ D.21556 ])
            (nil))))
(insn 55 54 73 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:166 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 73 55 74 7 (set (pc)
        (label_ref 56)) ..\Str\str.cpp:166 551 {jump}
     (nil)
 -> 56)
;;  succ:       6 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 74 73 59)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 105 106 107 108 120 121
(code_label 59 74 60 8 82 "" [1 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 8 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:168 83 {*movsi_internal}
     (nil))
(insn 62 61 63 8 (set (reg/f:SI 105 [ D.21556 ])
        (mem/f/j:SI (reg/f:SI 120) [0 this_5(D)->source+0 S4 A32])) ..\Str\str.cpp:168 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 63 62 64 8 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:168 83 {*movsi_internal}
     (nil))
(insn 64 63 65 8 (set (reg:SI 106 [ D.21551 ])
        (mem/j:SI (plus:SI (reg/f:SI 121)
                (const_int 4 [0x4])) [0 this_5(D)->size+0 S4 A32])) ..\Str\str.cpp:168 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 65 64 66 8 (set (reg:SI 107 [ D.21552 ])
        (reg:SI 106 [ D.21551 ])) ..\Str\str.cpp:168 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 106 [ D.21551 ])
        (nil)))
(insn 66 65 67 8 (parallel [
            (set (reg/f:SI 108 [ D.21556 ])
                (plus:SI (reg/f:SI 105 [ D.21556 ])
                    (reg:SI 107 [ D.21552 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:168 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 107 [ D.21552 ])
        (expr_list:REG_DEAD (reg/f:SI 105 [ D.21556 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 67 66 70 8 (set (mem:QI (reg/f:SI 108 [ D.21556 ]) [0 *_36+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:168 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108 [ D.21556 ])
        (nil)))
(insn 70 67 0 8 (const_int 0 [0]) ..\Str\str.cpp:169 581 {nop}
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Str::Str(char) (_ZN3StrC2Ec, funcdef_no=1036, decl_uid=20952, cgraph_uid=213, symbol_order=214)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a10 (r92,l0) best Q_REGS, allocno Q_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a4 (r89,l0) best Q_REGS, allocno Q_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a2(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a5(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a8(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a9(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a10(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:8

   Insn 26(l0): point = 0
   Insn 23(l0): point = 2
   Insn 22(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 4(l0): point = 34
   Insn 3(l0): point = 36
   Insn 2(l0): point = 38
 a0(r91): [3..4]
 a1(r90): [5..6]
 a2(r97): [7..8]
 a3(r88): [11..14]
 a4(r89): [11..12]
 a5(r96): [15..16]
 a6(r95): [19..20]
 a7(r87): [19..22]
 a8(r94): [23..24]
 a9(r93): [31..32]
 a10(r92): [35..36]
Compressing live ranges: from 41 to 18 - 43%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r97): [4..5]
 a3(r88): [6..7]
 a4(r89): [6..7]
 a5(r96): [8..9]
 a6(r95): [10..11]
 a7(r87): [10..11]
 a8(r94): [12..13]
 a9(r93): [14..15]
 a10(r92): [16..17]
  regions=1, blocks=3, points=18
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    7:r87  l0     1    3:r88  l0     0    4:r89  l0     1    1:r90  l0     0
    0:r91  l0     0   10:r92  l0     0    9:r93  l0     0    8:r94  l0     0
    6:r95  l0     0    5:r96  l0     0    2:r97  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Str::Str(char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d,1u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={2d} r18={1d} r19={1d} r20={1d,9u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 124{93d,31u,0e} in 20{19 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:171 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg:SI 92)
        (mem/c:SI (reg/f:SI 16 argp) [0 str+0 S4 A32])) ..\Str\str.cpp:171 83 {*movsi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 str+0 S1 A32])
        (subreg:QI (reg:SI 92) 0)) ..\Str\str.cpp:171 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:172 83 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/j:SI (plus:SI (reg/f:SI 93)
                (const_int 4 [0x4])) [0 this_2(D)->size+0 S4 A32])
        (const_int 1 [0x1])) ..\Str\str.cpp:172 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (nil)))
(insn 10 9 11 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 2 [0x2])) ..\Str\str.cpp:173 83 {*movsi_internal}
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:173 565 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 94)
        (reg:SI 0 ax)) ..\Str\str.cpp:173 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:SI 94)
            (nil))))
(insn 13 12 14 2 (set (reg/f:SI 87 [ D.21558 ])
        (reg/f:SI 94)) ..\Str\str.cpp:173 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(insn 14 13 15 2 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:173 83 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/f/j:SI (reg/f:SI 95) [0 this_2(D)->source+0 S4 A32])
        (reg/f:SI 87 [ D.21558 ])) ..\Str\str.cpp:173 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (expr_list:REG_DEAD (reg/f:SI 87 [ D.21558 ])
            (nil))))
(insn 16 15 17 2 (set (reg/f:SI 96)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:174 83 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 88 [ D.21559 ])
        (mem/f/j:SI (reg/f:SI 96) [0 this_2(D)->source+0 S4 A32])) ..\Str\str.cpp:174 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(insn 18 17 19 2 (set (reg:QI 89 [ D.21560 ])
        (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 str+0 S1 A32])) ..\Str\str.cpp:174 86 {*movqi_internal}
     (nil))
(insn 19 18 20 2 (set (mem:QI (reg/f:SI 88 [ D.21559 ]) [0 *_8+0 S1 A8])
        (reg:QI 89 [ D.21560 ])) ..\Str\str.cpp:174 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 89 [ D.21560 ])
        (expr_list:REG_DEAD (reg/f:SI 88 [ D.21559 ])
            (nil))))
(insn 20 19 21 2 (set (reg/f:SI 97)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:174 83 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg/f:SI 90 [ D.21559 ])
        (mem/f/j:SI (reg/f:SI 97) [0 this_2(D)->source+0 S4 A32])) ..\Str\str.cpp:174 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (nil)))
(insn 22 21 23 2 (parallel [
            (set (reg/f:SI 91 [ D.21559 ])
                (plus:SI (reg/f:SI 90 [ D.21559 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:174 194 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 90 [ D.21559 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 23 22 26 2 (set (mem:QI (reg/f:SI 91 [ D.21559 ]) [0 *_13+0 S1 A8])
        (const_int 0 [0])) ..\Str\str.cpp:174 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ D.21559 ])
        (nil)))
(insn 26 23 0 2 (const_int 0 [0]) ..\Str\str.cpp:176 581 {nop}
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Str::Str(const Str&) (_ZN3StrC2ERKS_, funcdef_no=1039, decl_uid=20946, cgraph_uid=216, symbol_order=217)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a4 (r98,l0) best Q_REGS, allocno Q_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a1(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a2(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a4(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a5(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a6(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a7(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a8(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a9(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a10(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a11(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a12(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a13(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a14(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a15(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a16(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a17(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a18(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a19(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a20(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 45(l0): point = 0
   Insn 42(l0): point = 2
   Insn 41(l0): point = 4
   Insn 40(l0): point = 6
   Insn 39(l0): point = 8
   Insn 21(l0): point = 11
   Insn 20(l0): point = 13
   Insn 19(l0): point = 15
   Insn 18(l0): point = 17
   Insn 46(l0): point = 20
   Insn 33(l0): point = 22
   Insn 32(l0): point = 24
   Insn 31(l0): point = 26
   Insn 30(l0): point = 28
   Insn 29(l0): point = 30
   Insn 28(l0): point = 32
   Insn 27(l0): point = 34
   Insn 26(l0): point = 36
   Insn 25(l0): point = 38
   Insn 24(l0): point = 40
   Insn 23(l0): point = 42
   Insn 16(l0): point = 45
   Insn 15(l0): point = 47
   Insn 14(l0): point = 49
   Insn 13(l0): point = 51
   Insn 12(l0): point = 53
   Insn 11(l0): point = 55
   Insn 10(l0): point = 57
   Insn 9(l0): point = 59
   Insn 8(l0): point = 61
   Insn 7(l0): point = 63
   Insn 6(l0): point = 65
   Insn 2(l0): point = 67
 a0(r107): [3..4]
 a1(r99): [3..6]
 a2(r106): [7..8]
 a3(r94): [25..36]
 a4(r98): [25..26]
 a5(r97): [27..28]
 a6(r96): [29..30]
 a7(r95): [29..32]
 a8(r105): [33..34]
 a9(r93): [37..38]
 a10(r92): [37..40]
 a11(r104): [41..42]
 a12(r91): [14..15]
 a13(r103): [16..17]
 a14(r102): [48..49]
 a15(r90): [48..51]
 a16(r101): [52..53]
 a17(r89): [58..59]
 a18(r88): [60..61]
 a19(r87): [62..63]
 a20(r100): [64..65]
Compressing live ranges: from 70 to 32 - 45%
Ranges after the compression:
 a0(r107): [0..1]
 a1(r99): [0..1]
 a2(r106): [2..3]
 a3(r94): [8..15]
 a4(r98): [8..9]
 a5(r97): [10..11]
 a6(r96): [12..13]
 a7(r95): [12..13]
 a8(r105): [14..15]
 a9(r93): [16..17]
 a10(r92): [16..17]
 a11(r104): [18..19]
 a12(r91): [4..5]
 a13(r103): [6..7]
 a14(r102): [20..21]
 a15(r90): [20..21]
 a16(r101): [22..23]
 a17(r89): [24..25]
 a18(r88): [26..27]
 a19(r87): [28..29]
 a20(r100): [30..31]
  regions=1, blocks=6, points=32
    allocnos=21 (big 0), copies=0, conflicts=0, ranges=21
Disposition:
   19:r87  l0     0   18:r88  l0     0   17:r89  l0     0   15:r90  l0     1
   12:r91  l0     0   10:r92  l0     1    9:r93  l0     0    3:r94  l0     1
    7:r95  l0     2    6:r96  l0     0    5:r97  l0     0    4:r98  l0     0
    1:r99  l0     1   20:r100 l0     0   16:r101 l0     0   14:r102 l0     0
   13:r103 l0     0   11:r104 l0     0    8:r105 l0     0    2:r106 l0     0
    0:r107 l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Str::Str(const Str&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d,1u} r6={1d,5u} r7={1d,8u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,8u} r17={6d,1u} r18={1d} r19={1d} r20={1d,15u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} 
;;    total ref usage 167{107d,60u,0e} in 33{32 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 100 101 102
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:178 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 100)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 other+0 S4 A32])) ..\Str\str.cpp:179 83 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 87 [ D.21561 ])
        (mem/j:SI (plus:SI (reg/f:SI 100)
                (const_int 4 [0x4])) [0 other_4(D)->size+0 S4 A32])) ..\Str\str.cpp:179 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg:SI 88 [ D.21561 ])
                (plus:SI (reg:SI 87 [ D.21561 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:179 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.21561 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 9 8 10 2 (set (reg:SI 89 [ D.21562 ])
        (reg:SI 88 [ D.21561 ])) ..\Str\str.cpp:179 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ D.21561 ])
        (nil)))
(insn 10 9 11 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 89 [ D.21562 ])) ..\Str\str.cpp:179 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ D.21562 ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x43]  <function_decl 041e2580 operator new []>) [0 operator new [] S1 A8])
            (const_int 4 [0x4]))) ..\Str\str.cpp:179 565 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 101)
        (reg:SI 0 ax)) ..\Str\str.cpp:179 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:SI 101)
            (nil))))
(insn 13 12 14 2 (set (reg/f:SI 90 [ D.21563 ])
        (reg/f:SI 101)) ..\Str\str.cpp:179 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 14 13 15 2 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:179 83 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/f/j:SI (reg/f:SI 102) [0 this_11(D)->source+0 S4 A32])
        (reg/f:SI 90 [ D.21563 ])) ..\Str\str.cpp:179 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (expr_list:REG_DEAD (reg/f:SI 90 [ D.21563 ])
            (nil))))
(insn 16 15 34 2 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:180 83 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100,0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91 103
(code_label 34 16 17 3 87 "" [1 uses])
(note 17 34 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg/f:SI 103)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 other+0 S4 A32])) ..\Str\str.cpp:180 83 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:SI 91 [ D.21561 ])
        (mem/j:SI (plus:SI (reg/f:SI 103)
                (const_int 4 [0x4])) [0 other_4(D)->size+0 S4 A32])) ..\Str\str.cpp:180 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 20 19 21 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91 [ D.21561 ])
            (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) ..\Str\str.cpp:180 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ D.21561 ])
        (nil)))
(jump_insn 21 20 22 3 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) ..\Str\str.cpp:180 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 37)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92 93 94 95 96 97 98 104 105
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:181 83 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg/f:SI 92 [ D.21564 ])
        (mem/f/j:SI (reg/f:SI 104) [0 this_11(D)->source+0 S4 A32])) ..\Str\str.cpp:181 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 25 24 26 4 (set (reg:SI 93 [ D.21565 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:181 83 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg/f:SI 94 [ D.21564 ])
                (plus:SI (reg/f:SI 92 [ D.21564 ])
                    (reg:SI 93 [ D.21565 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:181 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ D.21565 ])
        (expr_list:REG_DEAD (reg/f:SI 92 [ D.21564 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 27 26 28 4 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 other+0 S4 A32])) ..\Str\str.cpp:181 83 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg/f:SI 95 [ D.21564 ])
        (mem/f/j:SI (reg/f:SI 105) [0 other_4(D)->source+0 S4 A32])) ..\Str\str.cpp:181 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 29 28 30 4 (set (reg:SI 96 [ D.21565 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ..\Str\str.cpp:181 83 {*movsi_internal}
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg/f:SI 97 [ D.21564 ])
                (plus:SI (reg/f:SI 95 [ D.21564 ])
                    (reg:SI 96 [ D.21565 ])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:181 194 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ D.21565 ])
        (expr_list:REG_DEAD (reg/f:SI 95 [ D.21564 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 31 30 32 4 (set (reg:QI 98 [ D.21566 ])
        (mem:QI (reg/f:SI 97 [ D.21564 ]) [0 *_20+0 S1 A8])) ..\Str\str.cpp:181 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97 [ D.21564 ])
        (nil)))
(insn 32 31 33 4 (set (mem:QI (reg/f:SI 94 [ D.21564 ]) [0 *_17+0 S1 A8])
        (reg:QI 98 [ D.21566 ])) ..\Str\str.cpp:181 86 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 98 [ D.21566 ])
        (expr_list:REG_DEAD (reg/f:SI 94 [ D.21564 ])
            (nil))))
(insn 33 32 46 4 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ..\Str\str.cpp:180 194 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 46 33 47 4 (set (pc)
        (label_ref 34)) ..\Str\str.cpp:180 551 {jump}
     (nil)
 -> 34)
;;  succ:       3 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 47 46 37)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 99 106 107
(code_label 37 47 38 5 86 "" [1 uses])
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (set (reg/f:SI 106)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 other+0 S4 A32])) ..\Str\str.cpp:182 83 {*movsi_internal}
     (nil))
(insn 40 39 41 5 (set (reg:SI 99 [ D.21561 ])
        (mem/j:SI (plus:SI (reg/f:SI 106)
                (const_int 4 [0x4])) [0 other_4(D)->size+0 S4 A32])) ..\Str\str.cpp:182 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 41 40 42 5 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 this+0 S4 A32])) ..\Str\str.cpp:182 83 {*movsi_internal}
     (nil))
(insn 42 41 45 5 (set (mem/j:SI (plus:SI (reg/f:SI 107)
                (const_int 4 [0x4])) [0 this_11(D)->size+0 S4 A32])
        (reg:SI 99 [ D.21561 ])) ..\Str\str.cpp:182 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (expr_list:REG_DEAD (reg:SI 99 [ D.21561 ])
            (nil))))
(insn 45 42 0 5 (const_int 0 [0]) ..\Str\str.cpp:183 581 {nop}
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Str::Str() (_ZN3StrC2Ev, funcdef_no=1042, decl_uid=20941, cgraph_uid=219, symbol_order=220)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 12(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r88): [3..4]
 a1(r87): [7..8]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Str::Str()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 2[cx] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,5u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 22{9d,13u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:185 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 87)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:186 83 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/j:SI (reg/f:SI 87) [0 this_2(D)->source+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:186 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 88)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:187 83 {*movsi_internal}
     (nil))
(insn 9 8 12 2 (set (mem/j:SI (plus:SI (reg/f:SI 88)
                (const_int 4 [0x4])) [0 this_2(D)->size+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:187 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88)
        (nil)))
(insn 12 9 0 2 (const_int 0 [0]) ..\Str\str.cpp:188 581 {nop}
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Str::~Str() (_ZN3StrD2Ev, funcdef_no=1045, decl_uid=20964, cgraph_uid=222, symbol_order=223)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 23(l0): point = 1
   Insn 14(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 9(l0): point = 13
   Insn 8(l0): point = 15
   Insn 7(l0): point = 17
   Insn 6(l0): point = 19
   Insn 2(l0): point = 21
 a0(r88): [7..8]
 a1(r90): [9..10]
 a2(r87): [16..17]
 a3(r89): [18..19]
Compressing live ranges: from 24 to 8 - 33%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r90): [2..3]
 a2(r87): [4..5]
 a3(r89): [6..7]
  regions=1, blocks=6, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r87  l0     0    0:r88  l0     0    3:r89  l0     0    1:r90  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Str::~Str()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d,1u} r6={1d,5u} r7={1d,8u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={2d,1u} r18={1d} r19={1d} r20={1d,8u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 117{86d,31u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:190 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:191 83 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 87 [ D.21567 ])
        (mem/f/j:SI (reg/f:SI 89) [0 this_3(D)->source+0 S4 A32])) ..\Str\str.cpp:191 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.21567 ])
            (const_int 0 [0]))) ..\Str\str.cpp:191 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 87 [ D.21567 ])
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 22)
            (pc))) ..\Str\str.cpp:191 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 22)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:191 83 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:SI 88 [ D.21567 ])
        (mem/f/j:SI (reg/f:SI 90) [0 this_3(D)->source+0 S4 A32])) ..\Str\str.cpp:191 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 13 12 14 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 88 [ D.21567 ])) ..\Str\str.cpp:191 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ D.21567 ])
        (nil)))
(call_insn 14 13 22 3 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:191 556 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       5 [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 4, flags: (NEW, RTL, MODIFIED)
;;  pred:       2
;;              3 [100,0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 22 14 21 5 91 "" [1 uses])
(note 21 22 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 21 17 5 (const_int 0 [0]) ..\Str\str.cpp:192 581 {nop}
     (nil))
;;  succ:       4 [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100,0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 17 23 18 4 89 "" [0 uses])
(note 18 17 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function char* Str::getStr() (_ZN3Str6getStrEv, funcdef_no=1047, decl_uid=20935, cgraph_uid=224, symbol_order=225)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [7..8]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


char* Str::getStr()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 26{11d,15u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:194 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:195 83 {*movsi_internal}
     (nil))
(insn 7 6 10 2 (set (reg/f:SI 87 [ D.21568 ])
        (mem/f/j:SI (reg/f:SI 89) [0 this_2(D)->source+0 S4 A32])) ..\Str\str.cpp:195 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 10 7 14 2 (set (reg:SI 88 [ <retval> ])
        (reg/f:SI 87 [ D.21568 ])) ..\Str\str.cpp:195 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ D.21568 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) ..\Str\str.cpp:196 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:196 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int Str::getSize() (_ZN3Str7getSizeEv, funcdef_no=1048, decl_uid=20933, cgraph_uid=225, symbol_order=226)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [7..8]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int Str::getSize()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 26{11d,15u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:198 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:199 83 {*movsi_internal}
     (nil))
(insn 7 6 10 2 (set (reg:SI 87 [ D.21569 ])
        (mem/j:SI (plus:SI (reg/f:SI 89)
                (const_int 4 [0x4])) [0 this_2(D)->size+0 S4 A32])) ..\Str\str.cpp:199 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 10 7 14 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.21569 ])) ..\Str\str.cpp:199 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.21569 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) ..\Str\str.cpp:200 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:SI 0 ax)) ..\Str\str.cpp:200 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void Str::clear() (_ZN3Str5clearEv, funcdef_no=1049, decl_uid=20937, cgraph_uid=226, symbol_order=227)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 23(l0): point = 0
   Insn 20(l0): point = 2
   Insn 19(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 14(l0): point = 11
   Insn 13(l0): point = 13
   Insn 12(l0): point = 15
   Insn 11(l0): point = 17
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 6(l0): point = 26
   Insn 2(l0): point = 28
 a0(r92): [3..4]
 a1(r91): [7..8]
 a2(r88): [14..15]
 a3(r90): [16..17]
 a4(r87): [23..24]
 a5(r89): [25..26]
Compressing live ranges: from 31 to 12 - 38%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r88): [4..5]
 a3(r90): [6..7]
 a4(r87): [8..9]
 a5(r89): [10..11]
  regions=1, blocks=5, points=12
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r87  l0     0    2:r88  l0     0    5:r89  l0     0    3:r90  l0     0
    1:r91  l0     0    0:r92  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void Str::clear()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d,1u} r6={1d,4u} r7={1d,7u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,9u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 119{88d,31u,0e} in 14{13 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])
        (reg:SI 2 cx [ this ])) ..\Str\str.cpp:202 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:203 83 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 87 [ D.21570 ])
        (mem/f/j:SI (reg/f:SI 89) [0 this_3(D)->source+0 S4 A32])) ..\Str\str.cpp:203 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.21570 ])
            (const_int 0 [0]))) ..\Str\str.cpp:203 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 87 [ D.21570 ])
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) ..\Str\str.cpp:203 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 15)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:203 83 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:SI 88 [ D.21570 ])
        (mem/f/j:SI (reg/f:SI 90) [0 this_3(D)->source+0 S4 A32])) ..\Str\str.cpp:203 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 13 12 14 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 88 [ D.21570 ])) ..\Str\str.cpp:203 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ D.21570 ])
        (nil)))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x43]  <function_decl 041e2680 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 4 [0x4])) ..\Str\str.cpp:203 556 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 91 92
(code_label 15 14 16 4 97 "" [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:SI 91)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:204 83 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (mem/f/j:SI (reg/f:SI 91) [0 this_3(D)->source+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:204 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(insn 19 18 20 4 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 this+0 S4 A32])) ..\Str\str.cpp:205 83 {*movsi_internal}
     (nil))
(insn 20 19 23 4 (set (mem/j:SI (plus:SI (reg/f:SI 92)
                (const_int 4 [0x4])) [0 this_3(D)->size+0 S4 A32])
        (const_int 0 [0])) ..\Str\str.cpp:205 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(insn 23 20 0 4 (const_int 0 [0]) ..\Str\str.cpp:206 581 {nop}
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __tcf_0() (__tcf_0, funcdef_no=1051, decl_uid=21136, cgraph_uid=227, symbol_order=274)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 6.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 6(l0): point = 0
   Insn 5(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __tcf_0()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 2[cx] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 91{82d,9u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 2 cx)
        (symbol_ref:SI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 04e13840 __ioinit>)) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 83 {*movsi_internal}
     (nil))
(call_insn 6 5 0 2 (call (mem:QI (symbol_ref:SI ("_ZNSt8ios_base4InitD1Ev") [flags 0x43]  <function_decl 04b2df80 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 556 {*call}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1050, decl_uid=21132, cgraph_uid=228, symbol_order=275)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 20(l0): point = 1
   Insn 14(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 9(l0): point = 13
   Insn 8(l0): point = 15
   Insn 6(l0): point = 18
   Insn 5(l0): point = 20
Compressing live ranges: from 23 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=7, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={4d,1u} r6={1d,6u} r7={1d,10u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,7u} r17={4d,2u} r18={2d} r19={2d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 190{158d,32u,0e} in 9{7 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) ..\Str\str.cpp:206 7 {*cmpsi_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 21)
            (pc))) ..\Str\str.cpp:206 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) ..\Str\str.cpp:206 7 {*cmpsi_1}
     (nil))
(jump_insn 9 8 10 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 21)
            (pc))) ..\Str\str.cpp:206 509 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
;;  succ:       4 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:SI 2 cx)
        (symbol_ref:SI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 04e13840 __ioinit>)) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 83 {*movsi_internal}
     (nil))
(call_insn 12 11 13 4 (call (mem:QI (symbol_ref:SI ("_ZNSt8ios_base4InitC1Ev") [flags 0x43]  <function_decl 04b2de80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 556 {*call}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn 13 12 14 4 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref:SI ("__tcf_0") [flags 0x3]  <function_decl 04e5fe80 __tcf_0>)) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 83 {*movsi_internal}
     (nil))
(call_insn 14 13 21 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("atexit") [flags 0x43]  <function_decl 04e5ff00 atexit>) [0 atexit S1 A8])
            (const_int 4 [0x4]))) c:\mingw\lib\gcc\mingw32\5.3.0\include\c++\iostream:74 565 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 21 14 19 6 101 "" [2 uses])
(note 19 21 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 17 6 (const_int 0 [0]) ..\Str\str.cpp:206 581 {nop}
     (nil))
;;  succ:       5 [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100,0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 17 20 18 5 99 "" [0 uses])
(note 18 17 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function (static initializers for ..\Str\str.cpp) (_GLOBAL__sub_I__Z9lowerCasei, funcdef_no=1052, decl_uid=21139, cgraph_uid=229, symbol_order=375)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 5(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


(static initializers for ..\Str\str.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,2u} r7={1d,7u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 93{81d,12u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (const_int 65535 [0xffff])) ..\Str\str.cpp:206 83 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 1 [0x1])) ..\Str\str.cpp:206 83 {*movsi_internal}
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:SI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 04e5fe00 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 8 [0x8])) ..\Str\str.cpp:206 556 {*call}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

